{"version":3,"sources":["src/assets/custom/cipressus.js","src/assets/custom/cipressus-utils.js","src/assets/custom/cipressus-hardware.js","src/assets/custom/cipressus-test-fs.js","src/controllers/index.js","src/controllers/testResults.js","src/controllers/login.js","src/controllers/home.js","src/controllers/dashboard.js","src/controllers/calendar.js","src/controllers/sources.js","src/controllers/submissions.js","src/controllers/hardware.js","src/controllers/analizer.js","src/controllers/simulator.js","src/controllers/kMaps.js","src/controllers/tables.js","src/controllers/users.js","src/controllers/stats.js","src/controllers/attendance.js","src/controllers/activities.js","src/controllers/editor.js","src/controllers/profile.js"],"names":["window","Cipressus","core","db","storage","users","utils","hardware","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","publicvapidkey","listen","path","Promise","fulfill","reject","firebase","database","ref","on","then","snapshot","val","error","get","once","getSorted","key","orderByChild","set","data","update","push","pushMultiple","dataArray","job","k","all","put","file","filename","child","size","totalBytes","getDownloadURL","url","putMultiple","files","filenames","res","sizes","results","urls","putString","str","onUserSignedIn","uid","console","log","onUserSignedOut","signIn","form","auth","signInWithEmailAndPassword","email","password","errorMessage","errorCode","code","result","signOut","signUp","createUserWithEmailAndPassword","users_public","activity","last_login","Date","now","browser","os","name","secondName","degree","lu","avatar","is","firefox","chrome","ie","opera","safari","ios","android","windows","linux","user","err","resetPwd","sendPasswordResetEmail","initialize","initializeApp","messaging","usePublicVapidKey","requestPermission","onMessage","payload","opts","body","icon","sound","registration","showNotification","getToken","currentToken","onTokenRefresh","refreshedToken","showToken","navigator","serviceWorker","getRegistration","reg","onAuthStateChanged","searchNode","node","id","children","defaultCostFunction","submitMs","deadlineMs","param","Math","ceil","eval","student","sum","deadline","submits","submitted","date","cost","score","scores","getArray","root","getArrRec","arr","parent","dl","value","getTree","treeRec","tree","nodes","edges","color","label","shape","font","face","strokeWidth","strokeColor","floor","random","toString","from","to","course","replace","sendEmail","sendNotification","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","json","JSON","parse","responseText","msg","stringify","send","generateFileName","len","text","possible","i","charAt","length","quillToHTML","activityCntr","userUid","item","activity_data","getPrimeImplicants","mark2","j","c","p","n","r","q","combine","m","a","count","repeatelem","elem","accu","addOneAndRecurse","remaining","newList","concat","IM","im","im2","mark","sort","socket","timerId","serialPorts","initServer","params","sample_period","sp","io","onUpdate","WebSocket","onerror","onopen","clearInterval","onSocketOpen","onclose","setInterval","ci","onSocketClose","onmessage","message","input","stopServer","close","ioUpdate","outputs","output","setTimeout","connectTo","portIndex","getSerialPorts","test_FS","questions","options","evalMatrix","profileDesc","answers","var_sum","vble","quest","this","reduce","b","scales","sc","app","angular","module","$routeProvider","when","templateUrl","controller","filter","$sce","trustAsResourceUrl","$locationProvider","hashPrefix","run","$rootScope","$location","loading","userLogged","bodyClass","moment","locale","relativeTime","future","past","s","ss","mm","h","hh","d","dd","M","MM","y","yy","greetings","split_afternoon","split_evening","currentHour","parseFloat","format","getTime","stamp","time","fromNow","getUserNames","userUids","names","join","readableFileSize","bytes","si","thresh","abs","units","u","toFixed","clone","obj","copy","Array","Object","attr","hasOwnProperty","Error","sidenav","Sidenav","init","document","querySelector","side","inDuration","Collapsible","Modal","getElementById","usb_modal","help_modal","addEventListener","resizeEvent","toast","html","classes","displayLength","sendHelp","helpMessage","public_data","private_data","admin","enrolled","OS","update_activity","$apply","usbStatus","wssIconColor","onWssConnect","onWssDisconnect","hardwareConfig","FormSelect","querySelectorAll","openUSBModal","connectToServer","disconnectFromServer","enableConnect","connectToSerialPort","isInStandaloneMode","setState","showInstallMessage","e","userChoice","choiceResult","outcome","directive","restrict","scope","link","$watch","width","style","marginLeft","innerHTML","$scope","keypressed","btn_click","loginAttempt","userForm","retrievePassword","registerNewUser","formOk","passwordConfirm","updateButtons","login_mode","btn_text","menu_left","menu_right","welcomeText","updateTextFields","localStorageService","testFSAnswers","testStatus","test_fs","test_modal","dismissible","loadTest","startTime","timeline","changes","putOption","opt","undefined","prev","next","saveTestResults","downloadNews","news","authors","forEach","childSnapshot","content","indexOf","author","unshift","ready","user_data","newsData","last_update","news_update","updateSunburst","Highcharts","chart","height","title","credits","enabled","plotOptions","series","events","click","event","updatePolarPlot","point","type","allowDrillToNode","cursor","dataLabels","property","operator","levels","level","levelIsConstant","colorIndex","colorByPoint","colorVariation","tooltip","headerFormat","pointFormat","currentNode","activities","currentActivityScores","points","subValue","z","parseInt","minPointSize","innerSize","zMin","updateProgressPlot","progressData","totalEvents","futureEvents","attendanceData","asistencia","plotBorderWidth","pie","startAngle","endAngle","center","updateBarPlot","seriesData","drillDownData","drilldown","tempData","setOptions","lang","drillUpText","xAxis","yAxis","legend","borderWidth","drillUp","$","highcharts","updateAttendancePlot","categories","first","attendance","evCnt","evAtt","eventsAll","start","attendableEvents","activities_data","events_data","ev","userAttendedEvents","getOwnPropertyNames","att","evaluator","timestamp","viewModal","editModal","confirmDeleteModal","confirmMoveModal","refreshCalendar","fullCalendar","weekends","editable","allDaySlot","minTime","maxTime","timeFormat","dateFormat","slotLabelInterval","slotLabelFormat","header","eventSources","eventDrop","selectedEvent","_d","unix","end","info","selectedEventExtras","idx","eventResize","eventClick","startDay","endTime","viewRender","view","element","confirmDeleteEvent","editEvent","newEvent","saveEvent","formStatus","deleteEvent","splice","moveEvent","durationEditable","pushFiles","folderName","uploadFiles","folderKey","fileList","uploadingFiles","split","fileListQueue","uploaded","downloads","res2","sources","files_modal","deleteFile","folder","fileKeyToDelete","fileToDelete","confirmDelete","confirm_delete_modal","err2","openImage","src","image_viewer_modal","openPdfViewer","pdfURL","pdf_viewer_modal","preventScrolling","folderList","Autocomplete","resetForm","selectedActivity","pushFile","observs","reference","activityId","activityName","partners","action","display","obs","submissions","submCnt","downloaded","newStatus","viewSubm","submKeyView","submission_modal","evaluated","evaluatingKey","confirm_evaluate_modal","confirmEvaluate","toJson","submissions_data","users_data","sel","actIdx","findIndex","x","selectedIndex","initTester","tester","stopTester","running","animation","exporting","initAnalizer","addPoint","startChartUpdater","redraw","toggleStartStop","updateFields","getSimulations","simulations","load_modal","simulations_data","loadCircuit","simcir","clearDevices","showToolbox","clientWidth","clientHeight","toolbox","setupSimcir","currentSim","circuitFileName","saveCircuit","model","find","devices","connectors","sim","save_modal","analizeCircuit","inputs","getExternalLabels","ioDevices","index","self","circuitDetails","deviceCnt","connectorCnt","truthTable","rows","expressions","canonMinTerm","canonMaxTerm","combMax","pow","minterms","maxterms","primeImplicants","minifiedExpresions","canonMinExpressions","canonMaxExpressions","getCanonicalExpressions","t","substring","results_modal","getBooleanExpressions","evalInput","inputBin","padStart","setInputStatus","getOutputStatus","onresize","w","el","getElementsByClassName","setAttribute","qmc","QuineMcCluskey","karnaugh","KarnaughMap","varsNum","showDCares","varNumChange","setNoOfVars","dCareChange","allowDontCares","selectedKey","showAll","onInputDateChange","auxiliarySubmits","viewUser","evalAttendance","selectUser","confirmEnrollModal","activitiesTree","sendMessage","messageModal","enrollUser","user_private","evalUser","auxiliaryScores","removeEventListener","scoresModal","getCost","deleteSubmit","saveScores","users_public_data","users_private_data","scatter_data","updateScoreBarPlot","excludeStat","round","updateTechPie","totalBr","totalOs","br","Firefox","Chrome","IE","Opera","Safari","Otro","Windows","Linux","IOS","Android","plotBackgroundColor","plotShadow","allowPointSelect","theme","contrastTextColor","connectorColor","updateMenuAccessPlot","itemCntr","home","dashboard","calendar","simulator","profile","categoriesData","items","min","align","labels","overflow","valueSuffix","bar","layout","verticalAlign","floating","backgroundColor","defaultOptions","shadow","updateScatterPlot","seriesData1","seriesData2","zoomType","startOnTick","endOnTick","showLastLabel","scatter","marker","radius","states","hover","lineColor","updateProfilesPlot","avgScales","dataCnt","stdScales","sqrt","updateLists","confirmModal","absents","presents","selectedEventKey","isPresent","isAbsent","saveList","updates","today","nextKey","ref_","pieces_","subtitle","updateTree","destroy","container","hierarchical","direction","vis","Network","changeCourse","setCourse","courseKey","tr","courses","select","quilleditor","createElement","appendChild","quill","Quill","modules","toolbar","list","script","indent","background","imageResize","selected","firstChild","order","updateTimestamp","ts","deleteSelected","moveSelected","up","temp","saveSelected","scheduledNew","RegExp","reader","FileReader","onloadend","newAvatar","avatarFile","newProfilePic","readAsDataURL","uploadPic","saveForm","newData","getUserUID","partUid","updateNewData","edit","saveNewAvatar","avatarFilename","created","Tooltip","userList"],"mappings":"AAAAA,OAAOC,UAAY,WAGf,GAAIC,IACAC,MACAC,WACAC,SACAC,SACAC,YA2XJ,OAtXAL,GAAKC,GAAGK,QACJC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,eAAgB,2FAGpBb,EAAKC,GAAGa,OAAS,SAAUC,GACvB,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMO,GAAG,SAC5BC,KAAK,SAAUC,GACZ,MAAOP,GAAQO,EAASC,SAFhCN,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAG0B,IAAM,SAAUZ,GACpB,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMa,KAAK,SAC9BL,KAAK,SAAUC,GACZ,MAAOP,GAAQO,EAASC,SAFhCN,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAG4B,UAAY,SAAUd,EAAMe,GAChC,MAAO,IAAId,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMgB,aAAaD,GAAKF,KAAK,SAChDL,KAAK,SAAUC,GACZ,MAAOP,GAAQO,KAFvBL,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAG+B,IAAM,SAAUC,EAAMlB,GAC1B,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMiB,IAAIC,GAC7BV,KAAK,SAAUC,GACZ,MAAOP,GAAQO,KAFvBL,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAGiC,OAAS,SAAUD,EAAMlB,GAC7B,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMmB,OAAOD,GAChCV,KAAK,SAAUC,GACZ,MAAOP,GAAQO,KAFvBL,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAGkC,KAAO,SAAUF,EAAMlB,GAC3B,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASC,WAAWC,IAAIN,GAAMoB,KAAKF,GAC9BV,KAAK,SAAUC,GACZ,MAAOP,GAAQO,KAFvBL,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKC,GAAGmC,aAAe,SAAUC,EAAWtB,GACxC,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClC,GAAIoB,KACJ,KAAK,GAAIC,KAAKF,GACVC,EAAIH,KAAKhB,SAASC,WAAWC,IAAIN,GAAMoB,KAAKE,EAAUE,IAC1DvB,SAAQwB,IAAIF,GACPf,KAAK,SAAUC,GACZ,MAAOP,GAAQO,KAFvBR,SAIW,SAAUU,GACb,MAAOR,GAAOQ,QAU9B1B,EAAKE,QAAQuC,IAAM,SAAUC,EAAM3B,EAAM4B,GACrC,MAAO,IAAI3B,SAAQ,SAAUC,EAASC,GAClCC,SAASjB,UAAUmB,MAAMuB,MAAM7B,EAAO,IAAM4B,GAAUF,IAAIC,GACrDnB,KAAK,SAAUC,GACZ,GAAIqB,GAAOrB,EAASsB,UACpBtB,GAASH,IAAI0B,iBAAiBxB,KAAK,SAAUyB,GACzC,MAAO/B,IACH4B,KAAMA,EACNG,IAAKA,QANrB7B,SAUW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKE,QAAQ+C,YAAc,SAAUC,EAAOnC,EAAMoC,GAC9C,MAAO,IAAInC,SAAQ,SAAUC,EAASC,GAClC,GAAIoB,KACJ,KAAK,GAAIC,KAAKW,GACVZ,EAAIH,KAAKhB,SAASjB,UAAUmB,MAAMuB,MAAM7B,EAAO,IAAMoC,EAAUZ,IAAIE,IAAIS,EAAMX,IACjFvB,SAAQwB,IAAIF,GACPf,KAAK,SAAUC,GACZ,GAAI4B,MACAC,IACJ,KAAK,GAAId,KAAKf,GACV6B,EAAMlB,KAAKX,EAASe,GAAGO,YACvBM,EAAIjB,KAAKX,EAASe,GAAGlB,IAAI0B,iBAE7B/B,SAAQwB,IAAIY,GACP7B,KAAK,SAAU+B,GACZ,MAAOrC,IACHoC,MAAOA,EACPE,KAAMD,QAZ1BtC,SAgBW,SAAUU,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKE,QAAQsD,UAAY,SAAUC,EAAK1C,EAAM4B,GAC1C,MAAO,IAAI3B,SAAQ,SAAUC,EAASC,GAClCC,SAASjB,UAAUmB,MAAMuB,MAAM7B,EAAO,IAAM4B,GAAUa,UAAUC,GAC3DlC,KAAK,SAAUC,GACZA,EAASH,IAAI0B,iBAAiBxB,KAAK,SAAUyB,GACzC,MAAO/B,GAAQ+B,OAH3B7B,SAMW,SAAUO,GACb,MAAOR,GAAOQ,QAK9B1B,EAAKE,QAALF,UAAsB,SAAU2C,EAAU5B,GACtC,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,SAASjB,UAAUmB,MAAMuB,MAAM7B,EAAO,IAAM4B,GAA5CxB,YACKI,KAAK,WACF,MAAON,GAAQ,YAAcF,EAAO,IAAM4B,KAFlDxB,SAIW,SAAUO,GACb,MAAOR,GAAOQ,QAS9B1B,EAAKG,MAAMuD,eAAiB,SAAUC,GAClCC,QAAQC,IAAI,wBAA0BF,IAG1C3D,EAAKG,MAAM2D,gBAAkB,WACzBF,QAAQC,IAAI,0BAGhB7D,EAAKG,MAAM4D,OAAS,SAAUC,GAC1B,MAAO,IAAIhD,SAAQ,SAAUC,EAASC,GAClCC,SAAS8C,OAAOC,2BAA2BF,EAAKG,MAAOH,EAAKI,UAA5DjD,SACW,SAAUO,GACb,GACI2C,GADAC,EAAY5C,EAAM6C,IAEtB,QAAQD,GACJ,IAAK,sBACDD,EAAe,8BACf,MACJ,KAAK,qBACDA,EAAe,kDACf,MACJ,KAAK,qBACDA,EAAe,4DACf,MACJ,KAAK,sBACDA,EAAe,uBACf,MACJ,SACIA,EAAe,oEAGvB,MAAOnD,IAAQoD,EAAWD,MAE7B9C,KAAK,SAAUiD,GACZ,MAAOvD,GAAQ,+BAK/BjB,EAAKG,MAAMsE,QAAU,WACjB,MAAO,IAAIzD,SAAQ,SAAUC,EAASC,GAClCC,SAAS8C,OAAOQ,UACXlD,KAAK,WACF,MAAON,GAAQ,6BAFvBE,SAIW,SAAUO,GACb,MAAOR,IAAQQ,EAAO,2CAKtC1B,EAAKG,MAAMuE,OAAS,SAAUV,GAC1B,MAAO,IAAIhD,SAAQ,SAAUC,EAASC,GAClCC,SAAS8C,OAAOU,+BAA+BX,EAAKG,MAAOH,EAAKI,UAAhEjD,SACW,SAAUO,GACb,GACI2C,GADAC,EAAY5C,EAAM6C,IAEtB,QAAQD,GACJ,IAAK,qBACDD,EAAe,+DACf,MACJ,KAAK,4BACDA,EAAe,gDACf,MACJ,KAAK,qBACDA,EAAe,6CACf,MACJ,KAAK,6BACDA,EAAe,2FACf,MACJ,SACIA,EAAe,qEAGvB,MAAOnD,IAAQoD,EAAWD,MAE7B9C,KAAK,SAAUiD,GAEZ,GAAII,IACAC,UACIC,WAAYC,KAAKC,MACjBC,WACAC,OAEJC,KAAMnB,EAAKmB,KACXC,WAAYpB,EAAKoB,WACjBjB,MAAOH,EAAKG,MACZkB,OAAQrB,EAAKqB,OACbC,GAAItB,EAAKsB,GACTC,OAAQ,sBAGZX,GAAaC,SAASI,QAAQO,GAAGC,UAAY,UAAaD,GAAGE,SAAW,SAAYF,GAAGG,KAAO,KAAQH,GAAGI,QAAU,QAAWJ,GAAGK,SAAW,SAAW,QAAc,EACrKjB,EAAaC,SAASK,GAAGM,GAAGM,MAAQ,MAASN,GAAGO,UAAY,UAAaP,GAAGQ,UAAY,UAAaR,GAAGS,QAAU,QAAU,QAAa,EAEzIjG,EAAKC,GAAG+B,IAAI4C,EAAc,gBAAkBJ,EAAO0B,KAAKvC,KACnDpC,KAAK,SAAU6B,GACZ,MAAOnC,GAAQ,yCAFvBjB,SAIW,SAAUmG,GACb,MAAOjF,IAAQiF,EAAK,qDAM5CnG,EAAKG,MAAMiG,SAAW,SAAUjC,GAC5B,MAAO,IAAInD,SAAQ,SAAUC,EAASC,GAClCC,SAAS8C,OAAOoC,uBAAuBlC,GAClC5C,KAAK,WACF,MAAON,GAAQ,0CAFvBE,SAIW,SAAUO,GACb,MAAOR,IAAQQ,EAAO,2CAQtC1B,EAAKsG,WAAa,WACd,MAAO,IAAItF,SAAQ,SAAUC,EAASC,GAClCC,SAASoF,cAAcvG,EAAKC,GAAGK,OAG/B,IAAIkG,GAAYrF,SAASqF,WAmEzB,OAjEAA,GAAUC,kBAAkBzG,EAAKC,GAAGK,OAAOO,gBAE3C2F,EAAUE,oBACLnF,KAAK,WACFqC,QAAQC,IAAI,yCAFpB2C,SAIW,SAAUL,GACbvC,QAAQC,IAAI,0CAA2CsC,KAU/DK,EAAUG,UAAU,SAASC,GACzBhD,QAAQC,IAAI,qBAAsB+C,EAElC,MAAMC,IACFC,KAAM,uDACNC,KAAM,uBACNC,MAAO,2BAEXhH,GAAKiH,aAAaC,iBAAiB,YAAaL,KAGpDL,EAAUW,WAAW5F,KAAK,SAAU6F,GAC5BA,EACAxD,QAAQC,IAAI,gBAAiBuD,GAE7BxD,QAAQC,IAAI,yEAJpB2C,SAKS,SAAUL,GACfvC,QAAQC,IAAI,6CAA8CsC,KAG9DK,EAAUa,eAAe,WACrBb,EAAUW,WAAW5F,KAAK,SAAU+F,GAChC1D,QAAQC,IAAI,sBADhB2C,SAQS,SAAUL,GACfvC,QAAQC,IAAI,sCAAuCsC,GACnDoB,UAAU,sCAAuCpB,OAIzDqB,UAAUC,cAAcC,kBAAkBnG,KAAK,SAASoG,GACpD3H,EAAKiH,aAAeU,IAKxBxG,SAAS8C,OAAO2D,mBAAmB,SAAU1B,GACrCA,EACAlG,EAAKG,MAAMuD,eAAewC,EAAKvC,KAE/B3D,EAAKG,MAAM2D,oBAGZ7C,OAIRjB;CCnYX,SAAWA,GAEPA,EAAKI,MAAMyH,WAAa,SAAUC,EAAMC,GAIpC,GAAIvD,GAAS,IACb,IAAIsD,EAAKC,IAAMA,EACX,MAAOD,EAEX,IAAIA,EAAKE,SACL,IAAK,GAAIzF,KAAKuF,GAAKE,SAEf,GADAxD,EAASxE,EAAKI,MAAMyH,WAAWC,EAAKE,SAASzF,GAAIwF,GAE7C,MAAOvD,EAEnB,OAAOA,IAGXxE,EAAKI,MAAM6H,oBAAsB,SAAUC,EAAUC,EAAYC,GAK7D,MAAOC,MAAKC,MAAMJ,EAAWC,GAAc,OAAYC,GAG3DpI,EAAKI,MAAMmI,KAAO,SAAUC,EAASV,GAKjC,GAAIA,EAAKE,SAAU,CACf,GAAIS,GAAM,CACV,KAAK,GAAIlG,KAAKuF,GAAKE,SACfS,GAAOzI,EAAKI,MAAMmI,KAAKC,EAASV,EAAKE,SAASzF,GAClD,IAAIuF,EAAKY,UACDF,EAAQG,SACJH,EAAQG,QAAQb,EAAKC,KACjBS,EAAQG,QAAQb,EAAKC,IAAIa,UAAYd,EAAKY,SAASG,KAAM,CACzD,GAAIC,GAAO9I,EAAKI,MAAM6H,oBAAoBO,EAAQG,QAAQb,EAAKC,IAAIa,UAAWd,EAAKY,SAASG,KAAMf,EAAKY,SAASN,MAC5GU,GAAOhB,EAAKiB,QAAOD,EAAOhB,EAAKiB,OACnCN,GAAOK,EACG,EAANL,IAASA,EAAM,GAEnC,MAAOA,GAEP,MAAID,GAAQQ,OAAOlB,EAAKC,IACbS,EAAQQ,OAAOlB,EAAKC,IAAIgB,MAAQjB,EAAKiB,MAAQ,IAE7C,GAInB/I,EAAKI,MAAM6I,SAAW,SAAUC,GAG5B,GAAIC,GAAY,SAAUrB,EAAMsB,EAAKC,GACjC,GAAIvB,EAAKE,SAAU,CACf,IAAK,GAAIzF,KAAKuF,GAAKE,SACfmB,EAAUrB,EAAKE,SAASzF,GAAI6G,EAAKtB,EAAKC,GAE1CqB,GAAIjH,MACA4F,GAAID,EAAKC,GACTsB,OAAQA,EACRlE,KAAM2C,EAAK3C,KACX4D,MAAOjB,EAAKiB,MACZO,GAAIxB,EAAKY,eAGbU,GAAIjH,MACA4F,GAAID,EAAKC,GACTsB,OAAQA,EACRlE,KAAM2C,EAAK3C,KACXoE,MAAOzB,EAAKiB,SAKpBK,IAIJ,OAFAD,GAAUD,EAAME,EAAK,IAEdA,GAGXpJ,EAAKI,MAAMoJ,QAAU,SAASN,GAE1B,GAAIO,GAAU,SAASC,EAAMC,EAAOC,EAAOC,GAgBvC,GAdAF,EAAMxH,MACF4F,GAAI2B,EAAK3B,GACT+B,MAAOJ,EAAKvE,KAAK,cAAcuE,EAAKX,MACpCgB,MAAO,MACPF,MAAOA,EAAQA,EAAQ,UACvBG,MACInH,KAAM,GACNgH,MAAO,QACPI,KAAM,QACNC,YAAa,EACbC,YAAa,aAIlBT,EAAK1B,SAAR,CACI,GAAI6B,GAAQ,IAAIxB,KAAK+B,MAAoB,SAAd/B,KAAKgC,UAAmBC,SAAS,GAC5D,KAAI,GAAI/H,KAAKmH,GAAK1B,SACdyB,EAAQC,EAAK1B,SAASzF,GAAIoH,EAAOC,EAAOC,GACxCD,EAAMzH,MACFoI,KAAMb,EAAK3B,GACXyC,GAAId,EAAK1B,SAASzF,GAAGwF,OASjC4B,IAEI5B,GAAI,OACJ+B,MAAOZ,EAAKuB,OAAOtF,KAAKuF,QAAQ,MAAM,MACtCX,MAAO,MACPC,MACInH,KAAM,GACNgH,MAAO,QACPI,KAAM,QACNC,YAAa,EACbC,YAAa,aAKrBP,IAAUW,KAAM,OAAQC,GAAItB,EAAKnB,IAIrC,OAFA0B,GAAQP,EAAMS,EAAOC,IAGjBD,MAAOA,EACPC,MAAOA,IAIf5J,EAAKI,MAAMuK,UAAY,SAAU1I,GAC7B,MAAO,IAAIjB,SAAQ,SAAUC,EAASC,GAqBlC,MAAOA,GAAO,4BAItBlB,EAAKI,MAAMwK,iBAAmB,SAAU3I,GACpC,GAAI4I,GAAM,GAAIC,gBACV9H,EAAM,qCACV6H,GAAIE,KAAK,OAAQ/H,GAAK,GACtB6H,EAAIG,iBAAiB,eAAgB,oBACrCH,EAAIG,iBAAiB,gBAAiB,gKACtCH,EAAII,mBAAqB,WACrB,GAAuB,IAAnBJ,EAAIK,YAAmC,MAAfL,EAAIM,OAAgB,CAC5C,GAAIC,GAAOC,KAAKC,MAAMT,EAAIU,aAC1B3H,SAAQC,IAAIuH,IAapB,IAAII,GAAMH,KAAKI,UAAUxJ,EACzB4I,GAAIa,KAAKF,IAGbxL,EAAKI,MAAMuL,iBAAmB,SAAUC,GAGpC,IAAK,GAFDC,GAAO,GACPC,EAAW,iEACNC,EAAI,EAAOH,EAAJG,EAASA,IACrBF,GAAQC,EAASE,OAAO3D,KAAK+B,MAAM/B,KAAKgC,SAAWyB,EAASG,QAChE,OAAOJ,IAGX7L,EAAKI,MAAM8L,YAAc,SAAUzI,GAC/B,MAAOA,GAAIiH,QAAQ,mBAAoB,iBAG3C1K,EAAKI,MAAM+L,aAAe,SAAUC,EAASC,GACzC,MAAO,IAAIrL,SAAQ,SAAUC,EAASC,GAClClB,EAAKC,GAAG0B,IAAI,gBAAkByK,EAAU,mBAAqBC,GACxD9K,KAAK,SAAU+K,GACZ,GAAIrK,KACAqK,GACArK,EAAKoK,GAAQC,EAAgB,EAE7BrK,EAAKoK,GAAQ,EACjBrM,EAAKC,GAAGiC,OAAOD,EAAM,gBAAkBmK,EAAU,mBAC5C7K,KAAK,SAAU6B,GACZ,MAAOnC,GAAQmC,KAFvBpD,SAIW,SAAUmG,GACb,MAAOjF,GAAOiF,OAZ9BnG,SAeW,SAAUmG,GACb,MAAOjF,GAAOiF,QAK9BnG,EAAKI,MAAMmM,mBAAqB,SAAUtK,GAWtC,GAoCIuK,GACAT,EAAGU,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EArClBC,EAAU,SAAUC,EAAGJ,GACvB,GAGIb,GAHAkB,EAAID,EAAEf,OACNS,EAAI,GACJQ,EAAQ,CAEZ,KAAKnB,EAAI,EAAOkB,EAAJlB,EAAOA,IACXiB,EAAEjB,KAAOa,EAAEb,GACXW,GAAKM,EAAEjB,GACAiB,EAAEjB,KAAOa,EAAEb,KAClBW,GAAK,IACLQ,GAAS,EAGjB,OAAIA,GAAQ,EACD,GACJR,GAGPS,EAAa,SAAUC,EAAMF,GAC7B,GAAIG,MACAC,EAAmB,SAAUC,GACzBF,EAAKlL,KAAKiL,GACNG,EAAY,GACZD,EAAiBC,EAAY,GAIzC,OADAD,GAAiBJ,GACVG,GAGPG,KAAaC,OAAOxL,GACpBY,EAAO2K,EAAQvB,OACfyB,KACAC,KACAC,KACAC,EAAOV,EAAW,EAAGtK,GACdmK,EAAI,CAEf,KAAKjB,EAAI,EAAOlJ,EAAJkJ,EAAUA,IAClB,IAAKU,EAAIV,EAAI,EAAOlJ,EAAJ4J,EAAUA,IACtBC,EAAIK,EAAQS,EAAQzB,GAAIyB,EAAQf,IACtB,KAANC,IACAiB,EAAGxL,KAAKuK,GACRmB,EAAK9B,GAAK,EACV8B,EAAKpB,GAAK,EAMtB,KADAD,EAAQW,EAAW,EAAGQ,EAAG1B,QACpBU,EAAI,EAAGA,EAAIgB,EAAG1B,OAAQU,IACvB,IAAKC,EAAID,EAAI,EAAGC,EAAIe,EAAG1B,OAAQW,IACvBD,IAAMC,GAAkB,IAAbJ,EAAMI,IAAYe,EAAGhB,KAAOgB,EAAGf,KAC1CJ,EAAMI,GAAK,EAKvB,KAAKC,EAAI,EAAGA,EAAIc,EAAG1B,OAAQY,IACN,IAAbL,EAAMK,IACNe,EAAIzL,KAAKwL,EAAGd,GAIpB,KAAKC,EAAI,EAAOjK,EAAJiK,EAAUA,IACF,IAAZe,EAAKf,KACLY,EAAGvL,KAAKqL,EAAQV,IAChBE,GAAQ,EAQhB,OAJIA,KAAMnK,GAAiB,IAATA,IACd6K,EAAKA,EAAGD,OAAO1N,UAAUK,MAAMmM,mBAAmBqB,KAEtDF,EAAGI,OACIJ,IAEZ3N;CC/TH,SAAWC,GACP,GAAI+N,GACAC,EAAU,KACVC,IAEJjO,GAAKK,SAAS6N,WAAa,SAAUC,GAUjCnO,EAAKK,SAAS8K,OAAS,aACvBnL,EAAKK,SAAS+N,cAAgBD,EAAOE,GACrCrO,EAAKK,SAASiO,GAAKH,EAAOG,GAC1BtO,EAAKK,SAASkO,SAAWJ,EAAOI,SAEhCR,EAAS,GAAIS,WAAU,uBAEvBT,EAAOU,QAAU,SAAU/M,GACvBkC,QAAQC,IAAInC,IAGhBqM,EAAOW,OAAS,WACRV,IACAW,cAAcX,GACdA,EAAU,MAEdhO,EAAKK,SAASuO,gBAGlBb,EAAOc,QAAU,WACe,aAAxB7O,EAAKK,SAAS8K,QAAiD,QAAxBnL,EAAKK,SAAS8K,SACrDnL,EAAKK,SAAS8K,OAAS,cACtB6C,IACDA,EAAUc,YAAY,WAClBf,EAAS,KACT/N,EAAKK,SAAS6N,WAAWC,IAC1BA,EAAOY,KAEd/O,EAAKK,SAAS2O,iBAGlBjB,EAAOkB,UAAY,SAAUC,GACzBjB,EAAc5C,KAAKC,MAAM4D,EAAQjN,MACjCjC,EAAKK,SAAS8K,OAAS,OACvB4C,EAAOkB,UAAY,SAAUC,GACzB,IAAK,GAAI3M,GAAI,EAAO,EAAJA,EAAOA,IACnBvC,EAAKK,SAASiO,GAAG/L,GAAG4M,MAA4B,KAAnBD,EAAQjN,KAAKM,EAC9CvC,GAAKK,SAASkO,cAK1BvO,EAAKK,SAAS+O,WAAa,WACvBpP,EAAKK,SAAS8K,OAAS,eACnB6C,IACAW,cAAcX,GACdA,EAAU,MAEdD,EAAOc,QAAU,aACjBd,EAAOsB,QACPtB,EAAS,MAGb/N,EAAKK,SAASiP,SAAW,WACrB,GAAIC,GAAU,EACd,KAAK,GAAIhN,KAAKvC,GAAKK,SAASiO,GACxBiB,GAAWvP,EAAKK,SAASiO,GAAG/L,GAAGiN,OAAS,IAAM,GAClDzB,GAAOrC,KAAK6D,GACgB,aAAxBvP,EAAKK,SAAS8K,QACdsE,WAAWzP,EAAKK,SAASiP,SAAUtP,EAAKK,SAAS+N,gBAGzDpO,EAAKK,SAASqP,UAAY,SAAUC,GAC5B1B,EAAYhC,OAAS,GACrB8B,EAAOrC,KAAKiE,GACZ3P,EAAKK,SAAS8K,OAAS,YACvBsE,WAAWzP,EAAKK,SAASiP,SAAU,MAEnC1L,QAAQC,IAAI,6CAGpB7D,EAAKK,SAASuP,eAAiB,WAC3B,MAAO3B,IAGXjO,EAAKK,SAASuO,aAAe,WACzBhL,QAAQC,IAAI,oBAGhB7D,EAAKK,SAAS2O,cAAgB,WAC1BpL,QAAQC,IAAI,qBAEjB9D;CCjGH,SAAWC,GACPA,EAAK6P,SACDC,YACQjE,KAAM,sBACNkE,SAAU,kBAAmB,wBAG7BlE,KAAM,eACNkE,SAAU,YAAa,gBAGvBlE,KAAM,yFACNkE,SAAU,cAAe,eAGzBlE,KAAM,oBACNkE,SAAU,iFAAkF,0EAG5FlE,KAAM,gDACNkE,SAAU,kBAAmB,qBAG7BlE,KAAM,mDACNkE,SAAU,0DAA2D,oCAGrElE,KAAM,wCACNkE,SAAU,yCAA0C,mDAGpDlE,KAAM,uBACNkE,SAAU,uCAAwC,yDAGlDlE,KAAM,kFACNkE,SAAU,oCAAqC,kCAG/ClE,KAAM,uBACNkE,SAAU,mBAAoB,yBAG9BlE,KAAM,iEACNkE,SAAU,qDAAsD,wCAGhElE,KAAM,2CACNkE,SAAU,kEAAmE,6HAG7ElE,KAAM,sCACNkE,SAAU,yDAA0D,+DAGpElE,KAAM,mDACNkE,SAAU,8DAA+D,gDAGzElE,KAAM,yBACNkE,SAAU,+CAAgD,2CAG1DlE,KAAM,iDACNkE,SAAU,6EAA8E,4IAGxFlE,KAAM,uEACNkE,SAAU,qDAAsD,0DAGhElE,KAAM,sBACNkE,SAAU,WAAY,aAGtBlE,KAAM,iBACNkE,SAAU,cAAe,kBAGzBlE,KAAM,4CACNkE,SAAU,oDAAqD,wEAG/DlE,KAAM,oBACNkE,SAAU,0BAA2B,WAGrClE,KAAM,eACNkE,SAAU,2CAA4C,qDAGtDlE,KAAM,+DACNkE,SAAU,WAAY,6BAGtBlE,KAAM,UACNkE,SAAU,mEAAoE,0EAG9ElE,KAAM,mBACNkE,SAAU,+BAAgC,mCAG1ClE,KAAM,yDACNkE,SAAU,kDAAmD,sDAG7DlE,KAAM,0EACNkE,SAAU,aAAc,6CAGxBlE,KAAM,gDACNkE,SAAU,uEAAwE,2DAGlFlE,KAAM,0BACNkE,SAAU,qBAAsB,sCAGhClE,KAAM,8CACNkE,SAAU,gCAAiC,wCAG3ClE,KAAM,2CACNkE,SAAU,YAAa,0BAGvBlE,KAAM,iDACNkE,SAAU,0DAA2D,0EAGrElE,KAAM,oEACNkE,SAAU,wEAAyE,8GAGnFlE,KAAM,iDACNkE,SAAU,YAAa,kBAGvBlE,KAAM,mEACNkE,SAAU,yBAA0B,gCAGpClE,KAAM,6CACNkE,SAAU,0EAA2E,2DAGrFlE,KAAM,eACNkE,SAAU,WAAY,gBAGtBlE,KAAM,4CACNkE,SAAU,qCAAsC,+CAGhDlE,KAAM,4BACNkE,SAAU,kBAAmB,oBAG7BlE,KAAM,qGACNkE,SAAU,uBAAwB,yBAGlClE,KAAM,2EACNkE,SAAU,kBAAmB,wBAG7BlE,KAAM,+BACNkE,SAAU,wEAAyE,qEAGnFlE,KAAM,iDACNkE,SAAU,uCAAwC,yCAGlDlE,KAAM,6DACNkE,SAAU,yDAA0D,sGAG5EC,ccAEQ,+FACA,oHAGA,4FACA,uEAGA,qFACA,oDAGA,2EACA,sIAGR1H,KAAM,SAAU2H,GAEZ,IAAK,GADDC,MACKC,EAAO,EAAU,EAAPA,EAAUA,IAAQ,CACjC,GAAI3H,KACJ,KAAK,GAAI4H,KAASH,GACdzH,EAAI4H,GAASC,KAAKN,WAAWI,GAAMC,GAAOH,EAAQG,GACtDF,GAAQC,GAAQ3H,EAAI8H,OAAO,SAAStD,EAAGuD,GAAG,MAAOvD,GAAIuD,GAAI,GAG7D,IAAK,GADDC,MACKC,EAAK,EAAQ,EAALA,EAAQA,GAAM,EAC3BD,EAAOC,EAAK,GAAKP,EAAQO,EAAK,GAAKP,EAAQO,EAC/C,OAAOD,MAGhB1Q;ACrkBH,GAAI4Q,KAAMC,QAAQC,OAAO,aAAc,UAAW,aAAa,uBAC9DvQ,OAAO,SAAUwQ,GACdA,EACKC,KAAK,KACFC,YAAa,kBACbC,WAAY,SAEfF,KAAK,UACFC,YAAa,mBACbC,WAAY,UAEfF,KAAK,cACFC,YAAa,uBACbC,WAAY,cAEfF,KAAK,aACFC,YAAa,sBACbC,WAAY,aAEfF,KAAK,YACFC,YAAa,qBACbC,WAAY,YAEfF,KAAK,gBACFC,YAAa,yBACbC,WAAY,gBAEfF,KAAK,aACFC,YAAa,sBACbC,WAAY,aAEfF,KAAK,aACFC,YAAa,sBACbC,WAAY,aAEfF,KAAK,cACFC,YAAa,uBACbC,WAAY,cAEfF,KAAK,UACFC,YAAa,mBACbC,WAAY,UAEfF,KAAK,WACFC,YAAa,oBACbC,WAAY,WAEfF,KAAK,UACFC,YAAa,mBACbC,WAAY,UAEfF,KAAK,UACFC,YAAa,mBACbC,WAAY,UAEfF,KAAK,eACFC,YAAa,wBACbC,WAAY,eAEfF,KAAK,eACFC,YAAa,wBACbC,WAAY,eAEfF,KAAK,WACFC,YAAa,oBACbC,WAAY,WAEfF,KAAK,YACFC,YAAa,qBACbC,WAAY,cAGvBC,OAAO,WAAY,OAAQ,SAAUC,GAElC,MAAOA,GAAKC,sBAEf9Q,QAAQ,oBAAqB,SAAS+Q,GAEnCA,EAAkBC,WAAW,OAEhCC,IAAI,SAAUC,EAAYC,GAEvBD,EAAWE,SAAU,EACrBF,EAAWG,YAAa,EACxBF,EAAU1Q,KAAK,UACfyQ,EAAWI,UAAY,GAGvBC,OAAOC,OAAO,MACVC,cACIC,OAAQ,eAAeC,KAAM,UAAUC,EAAG,iBAAiBC,GAAI,cAAcnF,EAAG,YAAYoF,GAAI,aAChGC,EAAG,WAAWC,GAAI,WAAWC,EAAG,SAASC,GAAI,UAAUC,EAAG,SAASC,GAAI,WAAWC,EAAG,SAASC,GAAI,aAK1GpB,EAAWqB,UAAY,WACnB,GAAIC,GAAkB,GAClBC,EAAgB,GAChBC,EAAcC,WAAWpB,SAASqB,OAAO,MAC7C,OAAGF,IAAeF,GAAkCC,GAAfC,EAC1B,gBACHA,GAAeD,EACZ,gBAEA,eAGfvB,EAAW2B,QAAU,SAAS5O,EAAK6O,GAC/B,GAAIC,EACJ,QAAO9O,GACH,IAAK,GACD8O,EAAOtO,KAAKC,KACZ,MACJ,KAAK,GACDqO,EAAOxB,OAAO9M,KAAKC,OAAOkO,OAAO,mBACjC,MACJ,KAAK,GACDG,EAAOxB,OAAO9M,KAAKC,OAAOkO,OAAO,aACjC,MACJ,KAAK,GACDG,EAAOxB,OAAOuB,GAAOF,OAAO,mBAC5B,MACJ,KAAK,GACDG,EAAOxB,OAAOuB,GAAOF,OAAO,aAC5B,MACJ,KAAK,GACDG,EAAOxB,OAAOuB,GAAOE,SACrB,MACJ,SACID,EAAO,KAEf,MAAOA,IAGX7B,EAAW+B,aAAe,SAAUpT,EAAOqT,GACvC,GAAIrT,EAAO,CACP,GAAIsT,KACJ,KAAK,GAAIlR,KAAKiR,GACVC,EAAMtR,KAAKhC,EAAMqT,EAASjR,IAAI6C,WAClC,OAAOqO,GAAMC,KAAK,QAI1BlC,EAAWmC,iBAAmB,SAASC,EAAOC,GAC1C,GAAIC,GAASD,EAAK,IAAO,IACzB,IAAGxL,KAAK0L,IAAIH,GAASE,EACjB,MAAOF,GAAQ,IAEnB,IAAII,GAAQH,GACL,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OACnC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7CI,EAAI,EACR,GACIL,IAASE,IACPG,QACE5L,KAAK0L,IAAIH,IAAUE,GAAUG,EAAID,EAAM/H,OAAS,EACxD,OAAO2H,GAAMM,QAAQ,GAAG,IAAIF,EAAMC,IAGtCzC,EAAW2C,MAAQ,SAASC,GACxB,GAAIC,EACJ,IAAI,MAAQD,GAAO,gBAAmBA,GAAK,MAAOA,EAClD,IAAIA,YAAeE,OAAO,CACtBD,IACA,KAAK,GAAItI,GAAI,EAAGH,EAAMwI,EAAInI,OAAYL,EAAJG,EAASA,IACvCsI,EAAKtI,GAAKyF,EAAW2C,MAAMC,EAAIrI,GACnC,OAAOsI,GAEX,GAAID,YAAeG,QAAQ,CACvBF,IACA,KAAK,GAAIG,KAAQJ,GACTA,EAAIK,eAAeD,IAAiB,aAARA,IAC5BH,EAAKG,GAAQhD,EAAW2C,MAAMC,EAAII,IAC1C,OAAOH,GAEX,KAAM,IAAIK,OAAM,kDAIpBlD,EAAWmD,QAAUlC,EAAEmC,QAAQC,KAAKC,SAASC,cAAc,aACvDC,KAAM,OACNC,WAAW,MAGfxC,EAAEyC,YAAYL,KAAKC,SAASC,cAAc,mBAC1CtC,EAAEyC,YAAYL,KAAKC,SAASC,cAAc,mBAC1CtC,EAAEyC,YAAYL,KAAKC,SAASC,cAAc,mBAE1CtC,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBACrC,IAAIC,GAAY5C,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,iBACjDE,EAAa7C,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,iBAEtDtV,QAAOyV,iBAAiB,SAAU,WAC3B/D,EAAWgE,aACVhE,EAAWgE,gBAGnBhE,EAAW/M,QAAU,WACjBgN,EAAU1Q,KAAK,UACfyQ,EAAWG,YAAa,EACxB5R,UAAUI,MAAMsE,UACflD,KAAK,SAAS6B,GACXQ,QAAQC,IAAIT,GACZoO,EAAWtL,KAAO,KAClBuM,EAAEgD,OAAOC,KAAM,gBAAgBC,QAAS,yBAAyBC,cAAe,SAJpF7V,SAMO,SAASoG,GACZvC,QAAQC,IAAIsC,EAAI,IAChBsM,EAAEgD,OAAOC,KAAMvP,EAAI,GAAGwP,QAAS,yBAAyBC,cAAe,UAI/EpE,EAAWqE,SAAW,WAElBjS,QAAQC,IAAI2N,EAAWsE,aACvBrD,EAAEgD,OAAOC,KAAM,qCAAqCC,QAAS,yBAAyBC,cAAe,OACrGN,EAAWjG,SAGftP,UAAUI,MAAMuD,eAAiB,SAASC,GACtC6N,EAAWE,SAAU,EACrB3R,UAAUE,GAAG0B,IAAI,gBAAgBgC,GAChCpC,KAAK,SAASwU,GACXvE,EAAWtL,KAAO6P,EAClBvE,EAAWtL,KAAKvC,IAAMA,EACtB5D,UAAUE,GAAG0B,IAAI,iBAAiBgC,GACjCpC,KAAK,SAASyU,GACRA,GACCxE,EAAWtL,KAAK+P,MAAQD,EAAaC,MAErCzE,EAAWtL,KAAKgQ,SAAWF,EAAaE,SACxC1E,EAAWtL,KAAKuE,OAASuL,EAAavL,SAEtC+G,EAAWtL,KAAK+P,OAAQ,EACxBzE,EAAWtL,KAAKgQ,SAAW,KAC3B1E,EAAWtL,KAAKuE,OAAS,KAI7B,IAAIxF,GAAUO,GAAGC,UAAY,UAAaD,GAAGE,SAAW,SAAYF,GAAGG,KAAO,KAAQH,GAAGI,QAAU,QAAWJ,GAAGK,SAAW,SAAW,OACnIsQ,EAAK3Q,GAAGM,MAAQ,MAASN,GAAGO,UAAY,UAAaP,GAAGQ,UAAY,UAAaR,GAAGS,QAAU,QAAU,OACxGmQ,EAAkBL,EAAYlR,QAC9BuR,KACAA,GACInR,WACAC,MACAJ,WAAY,IAEpBsR,EAAgBtR,WAAaC,KAAKC,MAC/BoR,EAAgBnR,QACZmR,EAAgBnR,QAAQA,GACvBmR,EAAgBnR,QAAQA,KAExBmR,EAAgBnR,QAAQA,GAAW,GAEvCmR,EAAgBnR,WAChBmR,EAAgBnR,QAAQA,GAAW,GAEpCmR,EAAgBlR,GACZkR,EAAgBlR,GAAGiR,GAClBC,EAAgBlR,GAAGiR,KAEnBC,EAAgBlR,GAAGiR,GAAM,GAE7BC,EAAgBlR,MAChBkR,EAAgBlR,GAAGiR,GAAM,GAG7BpW,UAAUE,GAAGiC,OAAOkU,EAAgB,gBAAgBzS,EAAI,aAAapC,KAAK,SAAS6B,GAAKQ,QAAQC,IAAI,2BAE7E,UAApB4N,EAAU1Q,SACT0Q,EAAU1Q,KAAK,KACfyQ,EAAWI,UAAY,IAE3BJ,EAAWG,YAAa,EACxBH,EAAWE,SAAU,EACrBF,EAAW6E,WAnDftW,SAqDO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,UA3D9G7V,SA8DO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,SAI9G7V,UAAUI,MAAM2D,gBAAkB,WAC9B0N,EAAWmD,QAAQtF,QACnBmC,EAAWG,YAAa,EACxBF,EAAU1Q,KAAK,UACfyQ,EAAWE,SAAU,EACrBF,EAAW6E,UAGftW,UAAUuG,aACT/E,KAAK,WACFqC,QAAQC,IAAI,2BACZ2N,EAAWE,SAAU,EACrBF,EAAW6E,WAJftW,SAMO,WACH6D,QAAQC,IAAI,uCACZ2N,EAAWE,SAAU,EACrBF,EAAW6E,WAMftW,UAAUM,SAAS8K,OAAS,eAC5BqG,EAAW8E,UAAY,eACvB9E,EAAW+E,aAAe,WAG1B/E,EAAWgF,aAAe,aAC1BhF,EAAWiF,gBAAkB,YAE7B,IAAIC,IACApI,KACKkB,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAML,OAAO,IACrBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAML,OAAO,IACrBK,QAAQ,EAAOL,OAAO,IAE3BJ,GAAI,IACJV,GAAI,GACJE,SAAS,aAGbxO,WAAUM,SAAS2O,cAAgB,WAE/BpL,QAAQC,IAAI,mCAEZ4O,EAAEgD,OAAOC,KAAM,6BAA6BC,QAAS,wBAAwBC,cAAe,MAC5FpE,EAAW8E,UAAY,aACvB9E,EAAW+E,aAAe,YAC1B/E,EAAW6E,UAGftW,UAAUM,SAASuO,aAAe,WAC9BhL,QAAQC,IAAI,mBACZ2N,EAAW8E,UAAY,OACvB9E,EAAW+E,aAAe,cAC1B/E,EAAW6E,SAEX5D,EAAEgD,OAAOC,KAAM,mBAAmBC,QAAS,wBAAwBC,cAAe,MAClFnG,WAAW,WACP+B,EAAWvD,YAAclO,UAAUM,SAASuP,iBAC5C4B,EAAW6E,SACX5D,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAC5CnE,EAAEgD,OAAOC,KAAM,sBAAsBC,QAAS,yBAAyBC,cAAe,OACxF,MAGNpE,EAAWqF,aAAe,WACU,QAA7B9W,UAAUM,SAAS8K,SAClBqG,EAAWvD,YAAclO,UAAUM,SAASuP,iBAC5C6C,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,eAEhDvB,EAAUtK,QAGdyG,EAAWsF,gBAAkB,WACO,gBAA7B/W,UAAUM,SAAS8K,QAClBpL,UAAUM,SAAS6N,WAAWwI,IAGtClF,EAAWuF,qBAAuB,WAC9BhX,UAAUM,SAAS+O,aACnBoC,EAAWwF,eAAgB,EAC3BvE,EAAEgD,OAAOC,KAAM,sBAAsBC,QAAS,yBAAyBC,cAAe,MACtFpE,EAAW8E,UAAY,eACvB9E,EAAW+E,aAAe,WAC1B/E,EAAWiF,kBACXpB,EAAUhG,SAGdmC,EAAWyF,oBAAsB,WAC7BlX,UAAUM,SAASqP,UAAUoF,SAASM,eAAe,cAAc7L,OACnEiI,EAAW8E,UAAY,YACvB9E,EAAW+E,aAAe,aAC1B/E,EAAWgF,eACX/D,EAAEgD,OAAOC,KAAM,sBAAsBC,QAAS,yBAAyBC,cAAe,MACtFP,EAAUhG,QAYd,IAAI6H,GAAqB,WAAa,MAAQ,cAAgBpX,QAAO0H,WAAe1H,OAAO0H,UAAoB,WAE3GhC,IAAGM,QAAUoR,KACd5G,KAAK6G,UAAWC,oBAAoB,IAGvCtX,OAAOyV,iBAAiB,sBAAuB,SAAS8B,GACpDA,EAAEC,WAAW/V,KAAK,SAASgW,GACvB3T,QAAQC,IAAI0T,EAAaC,SACE,aAAxBD,EAAaC,QACZ5T,QAAQC,IAAI,sCAGZD,QAAQC,IAAI;ACha5B8M,IAAI8G,UAAU,cAAc,WACxB,OACIC,SAAU,IACV1G,YAAc,WACV,MAAO,0BAEX2G,OACIzH,QAAS,KAEb0H,KAAM,SAASD,GACXA,EAAME,OAAO,UAAW,WACpB,GAAIF,EAAMzH,QAEN,IAAK,GADDO,GAAS1Q,UAAU8P,QAAQtH,KAAK8C,KAAKC,MAAMqM,EAAMzH,UAC5C3N,EAAI,EAAO,EAAJA,EAAOA,IAAK,CACxB,GAAI6K,GAAO0H,SAASM,eAAe,SAAW7S,GAC1CuV,EAA8B,GAAtBzP,KAAK0L,IAAItD,EAAOlO,IAAW,EACvC6K,GAAK2K,MAAMD,MAAQA,EAAQ,IACvBrH,EAAOlO,GAAK,GACZ6K,EAAK2K,MAAMC,WAAa,GAAKF,EAAQ,IACrChD,SAASM,eAAe,QAAU7S,GAAG0V,UAAYlY,UAAU8P,QAAQI,YAAY1N,GAAG,KAElF6K,EAAK2K,MAAMC,WAAa,MACxBlD,SAASM,eAAe,QAAU7S,GAAG0V,UAAYlY,UAAU8P,QAAQI,YAAY1N,GAAG,IAEtF6K,EAAK6K,UAAY5P,KAAK0L,IAAItD,EAAOlO,OAG1C;AC3BfoO,IAAIM,WAAW,SAAU,SAAU,aAAc,SAAUiH,EAAQ1G,GAE/D0G,EAAOC,WAAa,SAAU5T,GACb,KAATA,GACA2T,EAAOE,aAGfF,EAAOG,aAAe,WACa,mBAApBH,GAAOI,UACd9G,EAAWE,SAAU,EACrB3R,UAAUI,MAAM4D,OAAOmU,EAAOI,UAAU/W,KAAK,SAAU6B,GACnDQ,QAAQC,IAAIT,GACZqM,WAAW,WACJ+B,EAAWtL,MACVuM,EAAEgD,OACEC,KAAMlE,EAAWqB,YAAY,IAAIrB,EAAWtL,KAAKf,KAAK,IACtDwQ,QAAS,yBACTC,cAAe,OAEzB,KACFpE,EAAW6E,WAVftW,SAWS,SAAUoG,GACf+R,EAAOI,SAASlU,SAAW,KAC3BR,QAAQC,IAAIsC,EAAI,IAChBsM,EAAEgD,OACEC,KAAMvP,EAAI,GACVwP,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBF,EAAW6E,aAGfzS,QAAQC,IAAI,oBACZ4O,EAAEgD,OACEC,KAAM,gCACNC,QAAS,cACTC,cAAe,SAK3BsC,EAAOK,iBAAmB,WACS,mBAApBL,GAAOI,SACdvY,UAAUI,MAAMiG,SAAS8R,EAAOI,SAASnU,OAAO5C,KAAK,SAAU6B,GAC3DQ,QAAQC,IAAIT,GACZqP,EAAEgD,OACEC,KAAM,2DACNC,QAAS,yBACTC,cAAe,SALvB7V,SAOS,SAAUoG,GACfvC,QAAQC,IAAIsC,EAAI,IAChBsM,EAAEgD,OACEC,KAAMvP,EAAI,GACVwP,QAAS,cACTC,cAAe,UAIvBhS,QAAQC,IAAI,oBACZ4O,EAAEgD,OACEC,KAAM,gCACNC,QAAS,cACTC,cAAe,SAK3BsC,EAAOM,gBAAkB,WACrB,GAAIC,IAAS,CACkB,oBAApBP,GAAe,WACtBA,EAAOI,SAASjT,OAASyP,SAASM,eAAe,gBAAgB7L,MACtC,IAAxB2O,EAAOI,SAASnT,MAA4C,IAA9B+S,EAAOI,SAASlT,YAAkD,mBAAvB8S,GAAOI,SAAW,IAA8C,IAA1BJ,EAAOI,SAASjT,SAC9HoT,GAAS,IAEbA,EACGP,EAAOI,SAASlU,UAAY8T,EAAOQ,gBAClC3Y,UAAUI,MAAMuE,OAAOwT,EAAOI,UAAU/W,KAAK,SAAU6B,GACnDQ,QAAQC,IAAIT,GACZqP,EAAEgD,OACEC,KAAOlE,EAAWqB,YAAY,IAAIqF,EAAOI,SAASnT,KAAK,IACvDwQ,QAAS,yBACTC,cAAe,SALvB7V,SAOS,SAAUoG,GACfvC,QAAQC,IAAIsC,EAAI,IAChBsM,EAAEgD,OACEC,KAAMvP,EAAI,GACVwP,QAAS,cACTC,cAAe,UAIvBhS,QAAQC,IAAI,sCACZ4O,EAAEgD,OACEC,KAAM,yCACNC,QAAS,cACTC,cAAe,QAIvBhS,QAAQC,IAAI,yBACZ4O,EAAEgD,OACEC,KAAM,gCACNC,QAAS,cACTC,cAAe,SAK3BsC,EAAOS,cAAgB,WACnB,OAAQT,EAAOU,YACX,IAAK,GACDV,EAAOW,SAAW,iBAClBX,EAAOY,UAAY,cACnBZ,EAAOa,WAAa,yBACpBb,EAAOE,UAAYF,EAAOG,aAC1BH,EAAOc,YAAc,oBACrB,MACJ,KAAK,GACDd,EAAOW,SAAW,cAClBX,EAAOY,UAAY,yBACnBZ,EAAOa,WAAa,iBACpBb,EAAOE,UAAYF,EAAOM,gBAC1BN,EAAOc,YAAc,iBACrB,MACJ,KAAK,GACDd,EAAOW,SAAW,uBAClBX,EAAOY,UAAY,iBACnBZ,EAAOa,WAAa,cACpBb,EAAOE,UAAYF,EAAOK,iBAC1BL,EAAOc,YAAc,6BAKjCd,EAAOU,WAAa,EACpBV,EAAOS,gBACPnH,EAAWI,UAAY,aACvBa,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAC5CnH,WAAW,WAAWgD,EAAEwG,oBAAqB;AC7IjDtI,IAAIM,WAAW,QAAS,SAAU,aAAc,YAAa,sBAAuB,SAAUiH,EAAQ1G,EAAYC,EAAWyH,GAEzH,IAAK1H,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAWnB,IAPAyQ,EAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnB6I,EAAOiB,iBAGPjB,EAAOkB,WAAa,GAChB5H,EAAWtL,KAAKmT,UAAY7H,EAAWtL,KAAK+P,OAASzE,EAAWtL,KAAKgQ,SAAS,CAC9E,GAAIoD,GAAa7G,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eAClDmE,aAAa,GAGjBrB,GAAOsB,SAAW,WACdtB,EAAOrI,QAAU9P,UAAU8P,QAAQC,UACnCoI,EAAO5U,QAAU4V,EAAoBvX,IAAI,UACpCuW,EAAO5U,UACR4U,EAAO5U,SACHmW,UAAW1U,KAAKC,MAChBkL,WACAwJ,YACAC,aAERzB,EAAOkB,WAAa,GAGxBlB,EAAO0B,UAAY,SAAUvJ,EAAOwJ,GACKC,QAAjC5B,EAAO5U,QAAQ4M,QAAQG,IACvB6H,EAAO5U,QAAQqW,QAAQxX,MACnBkO,MAAOA,EACP0J,KAAM7B,EAAO5U,QAAQ4M,QAAQG,GAC7B2J,KAAMH,IAGd3B,EAAO5U,QAAQ4M,QAAQG,GAASwJ,EAChC3B,EAAO5U,QAAQoW,SAASrJ,IAAUtL,KAAKC,MAAQkT,EAAO5U,QAAQmW,WAAa,IAC3EP,EAAoBlX,IAAI,SAAUkW,EAAO5U,SAGxB,IAFb4U,EAAO5U,QAAQ4M,QAAQgB,OAAO,SAAU3H,GACpC,MAAiBuQ,UAAVvQ,GAAiC,OAAVA,IAC/B0C,SACHiM,EAAOkB,WAAa,IAG5BlB,EAAO+B,gBAAkB,WACrBzI,EAAWE,SAAU,EACrB9N,QAAQC,IAAIqU,EAAO5U,SACnB4U,EAAOiB,cAAgBjB,EAAO5U,QAAQ4M,QACtCnQ,UAAUE,GAAG+B,IAAIkW,EAAO5U,QAAS,gBAAkBkO,EAAWtL,KAAKvC,IAAM,YACpEpC,KAAK,SAAU6B,GAEZqP,EAAEgD,OACEC,KAAM,yBACNC,QAAS,yBACTC,cAAe,MAEnBsC,EAAOkB,WAAa,EACpB5H,EAAWE,SAAU,EACrBwG,EAAO7B,WAVftW,SAYW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,yCACNC,QAAS,cACTC,cAAe,SAK/B0D,EAAWvO,OAGf,GAAImP,GAAe,WACfhC,EAAOiC,OACP,IAAIC,KACD5I,GAAWtL,KAAKuE,OACf1K,UAAUE,GAAG4B,UAAU,QAAQ2P,EAAWtL,KAAKuE,OAAQ,SAClDlJ,KAAK,SAAUC,GACZA,EAAS6Y,QAAQ,SAAUC,GACvB,GAAI1X,GAAQ0X,EAAc7Y,KAC1BmB,GAAM2X,QAAUxa,UAAUK,MAAM8L,YAAYtJ,EAAM2X,SACb,IAAjCH,EAAQI,QAAQ5X,EAAM6X,SACtBL,EAAQjY,KAAKS,EAAM6X,QACvBvC,EAAOiC,KAAKO,QAAQ9X,IAExB,IAAI+X,GAAQP,EAAQnO,MAEpB,IADAiM,EAAO/X,SACJia,EAAQnO,OAAS,EAChB,IAAK,GAAI1J,KAAK6X,GACVra,UAAUE,GAAG0B,IAAI,gBAAkByY,EAAQ7X,IACtChB,KAAK,SAAUqZ,GACZ1C,EAAO/X,MAAMia,EAAQ7X,IAAMqY,EAC3BD,IACa,GAATA,IACAE,GACIV,KAAMjC,EAAOiC,KACbC,QAASlC,EAAO/X,MAChB2a,YAAa/V,KAAKC,OAEtBkU,EAAoBlX,IAAI,YAAYwP,EAAWtL,KAAKuE,OAAQoQ,GAC5DrJ,EAAWE,SAAU,EACrBF,EAAW6E,YAZvBtW,SAeW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,YAK/BpE,GAAWE,SAAU,EACrBF,EAAW6E,WAvCvBtW,SA0CW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,QAI3BpE,EAAWE,SAAU,EAM7B3R,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,QAAlD5D,SAAgE,SAAUoG,GACtEvC,QAAQC,IAAIsC,IAGhB,IAAI0U,GAAW3B,EAAoBvX,IAAI,YAAY6P,EAAWtL,KAAKuE,OAC/DoQ,IACA3C,EAAOiC,KAAOU,EAASV,KACvBjC,EAAO/X,MAAQ0a,EAAST,QACxBra,UAAUE,GAAG0B,IAAI,yBAAyB6P,EAAWtL,KAAKuE,QACrDlJ,KAAK,SAAUwZ,GACRF,EAASC,YAAcC,EACvBb,KAEA1I,EAAWE,SAAU,EACrBF,EAAW6E,YANvBtW,SASW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBF,EAAW6E,YAGnB6D;ACvKRvJ,IAAIM,WAAW,aAAc,SAAS,aAAa,YAAa,SAAUiH,EAAO1G,EAAWC,GAEpFD,EAAWG,YAAYF,EAAU1Q,KAAK,UAE1CyQ,EAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,OAEnB,IAAI2L,GAAiB,SAAS/Y,GAC1BgZ,WAAWC,MAAM,sBACbA,OAAQC,OAAQ,QAChBC,OACIvP,KAAM,gCAEVwP,SACIC,SAAS,GAEbC,aACIC,QACIC,QACIC,MAAO,SAAUC,GACbC,EAAgBD,EAAME,MAAM/T,KAAKC,QAKjDyT,SACIM,KAAM,WAAW7Z,KAAMA,EAAM8Z,kBAAkB,EAAKC,OAAQ,UAC5DC,YAAa/I,OAAQ,eAAehC,QAASgL,SAAU,iBAAiBC,SAAU,IAAI5S,MAAO,KAC7F6S,SACKC,MAAO,EAAEC,iBAAiB,EAAML,YAAa/K,QAASgL,SAAU,iBAAiBC,SAAU,IAAI5S,MAAO,OACtG8S,MAAO,EAAEE,WAAY,IACrBF,MAAO,EAAEG,cAAc,IACvBH,MAAO,EAAEI,gBAAiB3a,IAAK,aAAa0I,IAAK,MACjD6R,MAAO,EAAEI,gBAAiB3a,IAAK,aAAa0I,GAAI,QAGzDkS,SAAUC,aAAc,GAAGC,YAAa,wEAI5ChB,EAAkB,SAAS7T,GAC3B,GAAGmQ,EAAOhS,KAAK,CACX,GAAIjE,KAEJiW,GAAO2E,YAAc9c,UAAUK,MAAMyH,WAAWqQ,EAAO4E,WAAW/U,EAClE,IAAIwB,GAAQxJ,UAAUK,MAAMmI,KAAK2P,EAAOhS,KAAKgS,EAAO2E,aAAa3E,EAAO2E,YAAY9T,MAAM,GAC1FmP,GAAO6E,uBACH5X,KAAM+S,EAAO2E,YAAY1X,KACzB6X,QAAS9E,EAAO2E,YAAY9T,MAAMQ,EAAM,KAAK2K,QAAQ,GACrDnL,MAAOQ,EAAM2K,QAAQ,GACrBlM,YAEJ,KAAIzF,IAAK2V,GAAO2E,YAAY7U,SAAS,CAEjC,GAAIiV,GAAWld,UAAUK,MAAMmI,KAAK2P,EAAOhS,KAAKgS,EAAO2E,YAAY7U,SAASzF,IAAI2V,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAAM,GAErHmP,GAAO6E,sBAAsB/U,SAAS7F,MAClCgD,KAAM+S,EAAO2E,YAAY7U,SAASzF,GAAG4C,KACrC6X,QAAS9E,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAAMkU,EAAS,KAAK/I,QAAQ,GACpEnL,MAAOkU,EAAS/I,QAAQ,KAE5BjS,EAAKE,MACDwQ,EAAGuF,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAClCmU,EAAGC,SAASF,EAAS/I,QAAQ,IAC7B/O,KAAM+S,EAAO2E,YAAY7U,SAASzF,GAAG4C,OAG7C+S,EAAO7B,SACP4E,WAAWC,MAAM,0BACbA,OAAQY,KAAM,cAAcX,OAAQ,QACpCE,SAASC,SAAQ,GACjBF,OAAQvP,KAAM,sBACd6Q,SACIC,aAAc,GACdC,YAAa,8GAGjBpB,SAAU4B,aAAc,GAAGC,UAAW,MAAMC,KAAM,EAAEnY,KAAM,QAAQlD,KAAMA,QAKhFsb,EAAqB,WACrB,GAAIC,KAEIrY,KAAM,kBACNwN,EAAG8K,EAAYC,EACf7T,MAAO,UACPoS,YACIX,SAAS,KAIbnW,KAAM,YACNwN,EAAG+K,EACH7T,MAAM,UACNoS,YACIX,SAAS,KAIjBqC,IAEIxY,KAAM,WACNwN,EAAGuF,EAAOhS,KAAK8C,OAAO4U,WAAW7U,MACjCc,MAAO,UACPoS,YACIX,SAAS,KAIbnW,KAAM,UACNwN,EAAG,IAAIuF,EAAOhS,KAAK8C,OAAO4U,WAAW7U,MACrCc,MAAM,UACNoS,YACIX,SAAS,IAKrBL,YAAWC,MAAM,0BACbA,OACIY,KAAM,MACN+B,gBAAiB,GAErBxC,SACIC,SAAS,GAEbF,OACIvP,KAAM,oBAEV6Q,SACIE,YAAa,kCAEjBrB,aACIuC,KACIC,WAAY,IACZC,SAAU,GACVC,QAAS,MAAO,SAGxBzC,SACKrW,KAAM,aAAatC,KAAM,MAAMZ,KAAM0b,IACrCxY,KAAM,WAAWkY,UAAW,MAAMpb,KAAMub,OAKjDU,EAAgB,WAEhB,GAAIC,MACAC,IAEJ,KAAK,GAAI7b,KAAK2V,GAAO/X,MACjB,IAAI+X,EAAO/X,MAAMoC,GAAG0T,OAASiC,EAAO/X,MAAMoC,GAAGyG,QAAUkP,EAAO/X,MAAMoC,GAAGkI,QAAU+G,EAAWtL,KAAKuE,OAAO,CACpG0T,EAAWhc,MACPgD,KAAM5C,EACNoQ,EAAG5S,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAMoC,GAAG2V,EAAO4E,YAC/CjT,MAAOtH,GAAGiP,EAAWtL,KAAKvC,IAAM,UAAU,UAC1C0a,UAAW9b,GAGf,IAAI+b,KACJ,KAAI,GAAI7R,KAAKyL,GAAO4E,WAAW9U,SAC3BsW,EAASnc,MACL+V,EAAO4E,WAAW9U,SAASyE,GAAG1E,GAC9BhI,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAMoC,GAAG2V,EAAO4E,WAAW9U,SAASyE,IAAIyL,EAAO4E,WAAW9U,SAASyE,GAAG1D,MAAM,KAIhHqV,GAAcjc,MACVgD,KAAM5C,GAAGiP,EAAWtL,KAAKvC,IAAM,KAAO,KAAKwa,EAAWlS,OAAO,GAC7DlE,GAAIxF,EACJN,KAAKqc,IAMjBH,EAAWrQ,KAAM,SAASb,EAAEuD,GAAG,MAAQvD,GAAE0F,EAAInC,EAAEmC,EAAK,EAAMnC,EAAEmC,EAAI1F,EAAE0F,EAAK,GAAK,GAE5E,KAAI,GAAIpQ,KAAK4b,GACTA,EAAW5b,GAAG4C,KAAOgZ,EAAW5b,GAAG4C,MAAQqM,EAAWtL,KAAKvC,IAAM,KAAO,KAAKwZ,SAAS5a,GAAG,EAG7F0Y,YAAWsD,YACPC,MACIC,YAAa,+BAIrBxD,WAAWC,MAAM,qBACbA,OACIY,KAAM,OAEVV,OACIvP,KAAM,4BAEV6S,OACI5C,KAAM,YAEV6C,OACIvD,OACIvP,KAAM,sBAGdwP,SACIC,SAAS,GAEbsD,QACItD,SAAS,GAEbC,aACIC,QACIqD,YAAa,EACb5C,YACIX,SAAS,EACTpI,OAAQ,uBAKpBwJ,SACIC,aAAc,wDACdC,YAAa,mFAGjBpB,SACIrW,KAAM,SACNlD,KAAKkc,IAETE,WACI7C,OAAQ4C,KAKpBlG,GAAO4G,QAAU,WACbC,EAAE,sBAAsBC,aAAaF,UAGzC,IAAIG,GAAuB,WACvB,GAAIC,MAEAC,GAAQ,CAEZ,IAAGjH,EAAOhS,KAAKkZ,WAAW,CACtB,GAAInd,MACAod,EAAQ,EACRC,EAAQ,CACZ,KAAI,GAAI/c,KAAK2V,GAAOqH,UACbrH,EAAOqH,UAAUhd,GAAGid,MAAQza,KAAKC,OAASkT,EAAOqH,UAAUhd,GAAG6c,aAC7DC,IACGnH,EAAOhS,KAAKkZ,WAAW7c,IACtB+c,IACQ,GAATA,EACCrd,EAAKE,KAAKmd,EAAMD,EAAM,KAEtBpd,EAAKE,KAAK,GACXgd,GACCD,EAAW/c,KAAKqP,EAAW2B,QAAQ,EAAE+E,EAAOqH,UAAUhd,GAAGid,QAGrEL,IAAQ,EAERlE,WAAWC,MAAM,wBACbA,OACIY,KAAM,UAEVT,SACIC,SAAS,GAEbF,OACIvP,KAAM,uBAEV6S,OACIQ,WAAYA,GAEhB1D,SACIrW,KAAK,gBACLlD,KAAMA,QAOlBwb,EAAY,EAAGC,EAAa,EAAG+B,EAAiB,CAEpD1f,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,aAAjD5D,SAAoE,SAASoG,GAAKvC,QAAQC,IAAIsC,KAE9FpG,UAAUE,GAAG0B,IAAI,cAAc6P,EAAWtL,KAAKuE,QAC1ClJ,KAAK,SAASme,GACXxH,EAAO4E,WAAa4C,EACpB3f,UAAUE,GAAG0B,IAAI,iBACZJ,KAAK,SAASqZ,GACX1C,EAAO/X,MAAQya,EACf1C,EAAOhS,KAAO0U,EAAUpJ,EAAWtL,KAAKvC,KACrCuU,EAAOhS,OAE2B,mBAAvBgS,GAAOhS,KAAW,SACxBgS,EAAOhS,KAAK8C,WACkB,mBAAxBkP,GAAOhS,KAAY,UACzBgS,EAAOhS,KAAKyC,YAGpB,IAAIS,GAAMrJ,UAAUK,MAAM6I,SAASiP,EAAO4E,WAC1C5E,GAAO7B,SACP2E,EAAe5R,GACfwS,EAAgB1D,EAAO4E,WAAW/U,IAClCyJ,EAAW6E,SAEX6B,EAAOuD,UACP1b,UAAUE,GAAG4B,UAAU,UAAU2P,EAAWtL,KAAKuE,OAAO,SACvDlJ,KAAK,SAASoe,GACXzH,EAAOqH,aACPI,EAAYtF,QAAQ,SAASC,GACzBpC,EAAOqH,UAAUjF,EAAcxY,KAAOwY,EAAc7Y,KACpD,IAAIme,GAAKtF,EAAc7Y,KACvBgc,KACGmC,EAAGJ,MAAQza,KAAKC,OACf0Y,IACGxF,EAAOuD,OAAOxP,OAAS,IAEtB2T,EAAG5K,KAAOkD,EAAOuD,OAAOxP,OAAO,EAAI,WAAa,UAChDiM,EAAOuD,OAAOtZ,KAAKyd,KAGpBA,EAAGR,YACFK,KAGZ,KAAI,GAAIld,KAAK2V,GAAO/X,MAChB,GAAG+X,EAAO/X,MAAMoC,GACZ,GAAG2V,EAAO/X,MAAMoC,GAAGyG,OACf,GAAGkP,EAAO/X,MAAMoC,GAAG6c,WAAW,CAC1B,GAAIS,GAAqBtL,OAAOuL,oBAAoB5H,EAAO/X,MAAMoC,GAAG6c,YAAYnT,OAC5E8T,EAAMN,EAAmB,EAAII,EAAmBJ,EAAiB,IAAM,CAC3EvH,GAAO/X,MAAMoC,GAAGyG,OAAO4U,YACnB7U,MAAOgX,EACPC,UAAW,YACXC,UAAWlb,KAAKC,WAGpBkT,GAAO/X,MAAMoC,GAAGyG,OAAO4U,YACnB7U,MAAO,EACPiX,UAAW,YACXC,UAAWlb,KAAKC,WAIxBkT,GAAO/X,MAAMoC,GAAGyG,QACZ4U,YACI7U,MAAO,EACPiX,UAAW,YACXC,UAAWlb,KAAKC,OAKjCkT,GAAOhS,MACHgS,EAAOhS,KAAK8C,SACXkP,EAAOhS,KAAK8C,OAAO4U,WAAa1F,EAAO/X,MAAMqR,EAAWtL,KAAKvC,KAAKqF,OAAO4U,YACjFL,IACA3B,EAAgB1D,EAAO4E,WAAW/U,IAClCmW,IACAe,IACAzN,EAAWE,SAAU,EACrBF,EAAW6E,WAvDftW,SAyDO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBF,EAAW6E,aAhFvBtW,SAoFW,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBF,EAAW6E,aA3F3BtW,SA8FW,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBF,EAAW6E;ACrYvB1F,IAAIM,WAAW,YAAa,SAAS,aAAa,YAAa,SAAUiH,EAAO1G,EAAWC,GAEvF,IAAID,EAAWG,WAEX,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnB6I,EAAOuD,SAGP,IAAIyE,GAAYzN,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBACjD+K,EAAY1N,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBACjDgL,EAAqB3N,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,4BAC1DiL,EAAmB5N,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,yBAC5D3C,GAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAE5CsB,EAAOoI,gBAAkB,WACrBvB,EAAE,aAAawB,aAAa,gBAC5BxB,EAAE,aAAawB,aAAa,eAAerI,EAAOuD,SAItDsD,EAAE,aAAawB,cACXC,UAAU,EACVC,SAAUjP,EAAWtL,KAAK+P,MAC1BnE,OAAQ,QACR0M,KAAM,KACNkC,YAAW,EACXC,QAAQ,QACRC,QAAQ,QACRC,WAAY,QACZC,WAAY,QACZC,kBAAkB,QAClBC,gBAAiB,QACjBC,QAAUhD,OAAQ,oBAClBiD,eACIzF,OAAQvD,EAAOuD,SAEnB0F,UAAW,SAAUxF,GACjBzD,EAAOkJ,eACH3G,OAAQjJ,EAAWtL,KAAKvC,IACxByb,WAAYzD,EAAMyD,WAClBvV,MAAO8R,EAAM9R,MACb2V,MAAqC,IAA9B3N,OAAO8J,EAAM6D,MAAM6B,IAAIC,OAAY,MAC1CC,IAAiC,IAA5B1P,OAAO8J,EAAM4F,IAAIF,IAAIC,OAAY,MACtCE,KAAM7F,EAAM6F,KACZvB,UAAWlb,KAAKC,MAChBoW,MAAOO,EAAMP,OAEjBlD,EAAOuJ,qBACH1Z,GAAI4T,EAAM5T,GACV2Z,IAAK/F,EAAM+F,KAEfrB,EAAiBtV,OACjBmN,EAAO7B,UAEXsL,YAAa,SAAShG,GAClBzD,EAAOkJ,eACH3G,OAAQjJ,EAAWtL,KAAKvC,IACxByb,WAAYzD,EAAMyD,WAClBvV,MAAO8R,EAAM9R,MACb2V,MAAqC,IAA9B3N,OAAO8J,EAAM6D,MAAM6B,IAAIC,OAAY,MAC1CC,IAAiC,IAA5B1P,OAAO8J,EAAM4F,IAAIF,IAAIC,OAAY,MACtCE,KAAM7F,EAAM6F,KACZvB,UAAWlb,KAAKC,MAChBoW,MAAOO,EAAMP,OAEjBlD,EAAOuJ,qBACH1Z,GAAI4T,EAAM5T,GACV2Z,IAAK/F,EAAM+F,KAEfrB,EAAiBtV,OACjBmN,EAAO7B,UAEXuL,WAAY,SAASjG,GACjBzD,EAAOkJ,eACH3G,OAAQkB,EAAMsE,UACdb,WAAYzD,EAAMyD,WAClBvV,MAAO8R,EAAM9R,MACb2V,MAAqC,IAA9B3N,OAAO8J,EAAM6D,MAAM6B,IAAIC,OAAY,MAC1CC,IAAiC,IAA5B1P,OAAO8J,EAAM4F,IAAIF,IAAIC,OAAY,MACtCE,KAAM7F,EAAM6F,KACZvB,UAAWtE,EAAMsE,UACjB7E,MAAOO,EAAMP,OAEjBlD,EAAOuJ,qBACH1Z,GAAI4T,EAAM5T,GACV2Z,IAAK/F,EAAM+F,IACXG,SAAUhQ,OAAO8J,EAAM6D,OAAOtM,OAAO,SACrCuG,UAAW5H,OAAO8J,EAAM6D,OAAOtM,OAAO,SACtC4O,QAASjQ,OAAO8J,EAAM4F,KAAKrO,OAAO,SAClCI,QAASzB,OAAO8J,EAAM6D,OAAOlM,WAEjC4M,EAAUnV,OACVmN,EAAO7B,UAEX0L,WAAY,SAASC,EAAKC,GACtB/J,EAAOoI,qBAIfpI,EAAOgK,mBAAqB,WACxBhC,EAAU7Q,QACVI,WAAW,WAAW2Q,EAAmBrV,QAAS,MAGtDmN,EAAOiK,UAAY,SAASC,GACrBA,GACClK,EAAOkJ,iBACPlJ,EAAOuJ,oBAAsB,KAC7B3M,SAASM,eAAe,cAAc7L,MAAQ,KAC9CuL,SAASM,eAAe,oBAAoB7L,MAAQ,KACpDuL,SAASM,eAAe,kBAAkB7L,MAAQ,KAClDuL,SAASM,eAAe,cAAc7L,MAAQ,YAE9C2W,EAAU7Q,QACVyF,SAASM,eAAe,cAAc7L,MAAQsI,OAAOqG,EAAOkJ,cAAc5B,OAAOtM,OAAO,cACxF4B,SAASM,eAAe,oBAAoB7L,MAASsI,OAAOqG,EAAOkJ,cAAc5B,OAAOtM,OAAO,SAC/F4B,SAASM,eAAe,kBAAkB7L,MAAQsI,OAAOqG,EAAOkJ,cAAcG,KAAKrO,OAAO,SAC1F4B,SAASM,eAAe,cAAc7L,MAAQ2O,EAAOkJ,cAAcvX,MACnE4F,WAAW,WACPgD,EAAEwG,oBACJ,MAENxJ,WAAW,WAAW0Q,EAAUpV,QAAS,MAG7CmN,EAAOmK,UAAY,WACf7Q,EAAWE,SAAU,EACrBwG,EAAOkJ,cAAc3G,OAASjJ,EAAWtL,KAAKvC,IAC9CuU,EAAOkJ,cAAcnB,UAAYlb,KAAKC,MACtCkT,EAAOkJ,cAAcvX,MAAQiL,SAASM,eAAe,cAAc7L,KACnE,IAAIV,GAAOiM,SAASM,eAAe,cAAc7L,MAC7CkQ,EAAY3E,SAASM,eAAe,oBAAoB7L,MACxDuY,EAAUhN,SAASM,eAAe,kBAAkB7L,MACpDiW,EAA6D,IAArD3N,OAAO4H,EAAU,IAAI5Q,EAAK,oBAAoByY,OACtDC,EAAyD,IAAnD1P,OAAOiQ,EAAQ,IAAIjZ,EAAK,oBAAoByY,OAElDgB,EAAa,CAgBjB,OAfGpK,GAAOkJ,cAAchG,MACa,IAA9BlD,EAAOkJ,cAAchG,QACpBkH,EAAa,GAEjBA,EAAa,EACd9C,GAAS+B,EACGA,EAAR/B,GACCtH,EAAOkJ,cAAc5B,MAAQA,EAC7BtH,EAAOkJ,cAAcG,IAAMA,GAE3Be,EAAa,EAEjBA,EAAa,EACe,aAA7BpK,EAAOkJ,cAAcI,OACpBtJ,EAAOkJ,cAAcI,KAAO,IACf,GAAdc,GACC1e,QAAQC,IAAI,SAASye,GACrB1e,QAAQC,IAAI,SAAUqU,EAAOkJ,cAAchG,OAC3CxX,QAAQC,IAAI,eAAegF,EAAK4Q,EAAUqI,GAC1CrP,EAAEgD,OAAOC,KAAM,+CAA+CC,QAAS,cAAcC,cAAe,WACpGpE,EAAWE,SAAU,SAItBwG,EAAOuJ,oBACN1hB,UAAUE,GAAGiC,OAAOgW,EAAOkJ,cAAc,UAAU5P,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOuJ,oBAAoB1Z,IACxGxG,KAAK,SAASC,GAEX0W,EAAOkJ,cAAc5B,MAAQ3N,OAAOqG,EAAOkJ,cAAc5B,OAAOtM,SAChEgF,EAAOkJ,cAAcG,IAAM1P,OAAOqG,EAAOkJ,cAAcG,KAAKrO,SAE5DgF,EAAOkJ,cAAcrZ,GAAKmQ,EAAOuJ,oBAAoB1Z,GACrDmQ,EAAOkJ,cAAcM,IAAMxJ,EAAOuJ,oBAAoBC,IACtDxJ,EAAOuD,OAAOvD,EAAOuJ,oBAAoBC,KAAOxJ,EAAOkJ,cACvDlJ,EAAOoI,kBACP7N,EAAEgD,OAAOC,KAAM,qBAAqBC,QAAS,yBAAyBC,cAAe,MACrFsC,EAAOkJ,cAAgB,KACvBlJ,EAAOuJ,oBAAsB,KAC7BtB,EAAU9Q,QACVmC,EAAWE,SAAU,EACrBwG,EAAO7B,WAfXtW,SAiBO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAGXtW,UAAUE,GAAGkC,KAAK+V,EAAOkJ,cAAc,UAAU5P,EAAWtL,KAAKuE,QAChElJ,KAAK,SAASC,GAEX0W,EAAOkJ,cAAc5B,MAAQ3N,OAAOqG,EAAOkJ,cAAc5B,OAAOtM,SAChEgF,EAAOkJ,cAAcG,IAAM1P,OAAOqG,EAAOkJ,cAAcG,KAAKrO,SAE5DgF,EAAOkJ,cAAcM,IAAMxJ,EAAOuD,OAAOxP,OACzCiM,EAAOkJ,cAAcrZ,GAAKvG,EAASM,IACnCoW,EAAOuD,OAAOtZ,KAAK+V,EAAOkJ,eAC1BrC,EAAE,aAAawB,aAAa,cAAcrI,EAAOkJ,eACjD3O,EAAEgD,OAAOC,KAAM,0BAA0BC,QAAS,yBAAyBC,cAAe,MAC1FsC,EAAOuJ,oBAAsB,KAC7BtB,EAAU9Q,QACVmC,EAAWE,SAAU,EACrBwG,EAAO7B,WAdXtW,SAgBO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAInB6B,EAAOqK,YAAc,WACjB/Q,EAAWE,SAAU,EACrB3R,UAAUE,GAAG+B,IAAI,KAAK,UAAUwP,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOuJ,oBAAoB1Z,IACrFxG,KAAK,SAASC,GACX0W,EAAOuD,OAAO+G,OAAOtK,EAAOuJ,oBAAoBC,IAAI,GACpDxJ,EAAOoI,kBACPpI,EAAOuJ,oBAAsB,KAC7BhP,EAAEgD,OAAOC,KAAM,mBAAmBC,QAAS,yBAAyBC,cAAe,MACnFwK,EAAmB/Q,QACnBmC,EAAWE,SAAU,EACrBwG,EAAO7B,WARXtW,SAUO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,+CAA+CC,QAAS,cAAcC,cAAe,MACpGpE,EAAWE,SAAU,EACrBwG,EAAO7B,YAIf6B,EAAOuK,UAAY,WACfjR,EAAWE,SAAU,EACrB3R,UAAUE,GAAGiC,OAAOgW,EAAOkJ,cAAc,UAAU5P,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOuJ,oBAAoB1Z,IACxGxG,KAAK,SAASC,GAEX0W,EAAOkJ,cAAcrZ,GAAKmQ,EAAOuJ,oBAAoB1Z,GACrDmQ,EAAOkJ,cAAcM,IAAMxJ,EAAOuJ,oBAAoBC,IACtDxJ,EAAOkJ,cAAc5B,MAAQ3N,OAAOqG,EAAOkJ,cAAc5B,OAAOtM,SAChEgF,EAAOkJ,cAAcG,IAAM1P,OAAOqG,EAAOkJ,cAAcG,KAAKrO,SAC5DgF,EAAOuD,OAAOvD,EAAOuJ,oBAAoBC,KAAOxJ,EAAOkJ,cACvDlJ,EAAOoI,kBACPpI,EAAOuJ,oBAAsB,KAC7BhP,EAAEgD,OAAOC,KAAM,qBAAqBC,QAAS,yBAAyBC,cAAe,MACrFyK,EAAiBhR,QACjBmC,EAAWE,SAAU,EACrBwG,EAAO7B,WAbXtW,SAeO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBwG,EAAO7B,YAIftW,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,YAAjD5D,SAAmE,SAASoG,GAAKvC,QAAQC,IAAIsC,KAE7FpG,UAAUE,GAAG0B,IAAI,UAAU6P,EAAWtL,KAAKuE,QAC1ClJ,KAAK,SAASoe,GACX,GAAI+B,GAAM,CACV,KAAInf,IAAKod,GAAY,CACjB,GAAIC,GAAKD,EAAYpd,EACrBqd,GAAGJ,MAAQ3N,OAAO+N,EAAGJ,OAAOtM,SAC5B0M,EAAG2B,IAAM1P,OAAO+N,EAAG2B,KAAKrO,SACxB0M,EAAG7X,GAAKxF,EACRqd,EAAG8B,IAAMA,EACT9B,EAAG8C,iBAAmBlR,EAAWtL,KAAK+P,MACtCiC,EAAOuD,OAAOtZ,KAAKyd,GACnB8B,IAEJ3C,EAAE,aAAawB,aAAa,eAAerI,EAAOuD,QAClDjK,EAAWE,SAAU,EACrBwG,EAAO7B,WAfXtW,SAiBO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe;ACzR9GjF,IAAIM,WAAW,WAAY,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE1F,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAKnBmX,GAAOyK,UAAY,SAAUC,GAEzB,GAAIC,GAAc,SAASC,GACvB,KAAIhO,SAASM,eAAe,cAAclS,MAAM+I,OAAS,GAoFrD,WALAwG,GAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,MAjFnB,IAAImN,MACA5f,KACA6f,EAAiBlO,SAASM,eAAe,cAAclS,KAC3D,KAAK,GAAIX,KAAKygB,GACwB,gBAAtBA,GAAezgB,KACvBwgB,EAAS5gB,KAAK6gB,EAAezgB,IAC7BY,EAAUhB,KAAKpC,UAAUK,MAAMuL,iBAAiB,IAAM,IAAMqX,EAAezgB,GAAG4C,KAAK8d,MAAM,KAAK,IAItGljB,WAAUG,QAAQ+C,YAAY8f,EAAU,QAAS5f,GAC5C5B,KAAK,SAAU6B,GACZ8U,EAAOgL,gBACP,KAAK,GAAI3gB,KAAKa,GAAIG,KACd2U,EAAOgL,cAAc/gB,MACjBgD,KAAM6d,EAAezgB,GAAG4C,KAAK8d,MAAM,KAAK,GACxCpgB,KAAMO,EAAIC,MAAMd,GAChB2Q,OAAQ8P,EAAezgB,GAAG4C,KAAK8d,MAAM,KAAK,GAC1CrL,KAAMxU,EAAIG,KAAKhB,GACfI,SAAUQ,EAAUZ,GACpB4gB,SAAUpe,KAAKC,MACfoe,UAAW,GAGnBrjB,WAAUE,GAAGmC,aAAa8V,EAAOgL,cAAe,WAAaJ,EAAY,UACpEvhB,KAAK,SAAU8hB,GAEZ,GAAI3B,GAAM,CACNxJ,GAAOoL,SAIHpL,EAAOoL,QAAQR,KACf5K,EAAOoL,QAAQR,IAAc3d,KAAMyd,EAAY1f,WAE/CgV,EAAOoL,QAAQR,GAAW5f,QAC9BgV,EAAOoL,QAAQR,GAAW5f,YAP1BgV,EAAOoL,WACPpL,EAAOoL,QAAQR,IAAc3d,KAAMyd,EAAY1f,UAQnD,KAAI,GAAIX,KAAK8gB,GACTnL,EAAOoL,QAAQR,GAAW5f,MAAMmgB,EAAK9gB,GAAGT,KAAKoW,EAAOgL,cAAcxB,GAClEA,GAGJjP,GAAEgD,OACEC,KAAM,2BACNC,QAAS,yBACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrB6R,EAAYlU,QACZyF,SAASM,eAAe,cAAc7L,MAAQ,KAC9CuL,SAASM,eAAe,kBAAkB7L,MAAQ,KAClD2O,EAAO7B,WA5BftW,SA8BW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,qCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrB6R,EAAYlU,QACZ6I,EAAO7B,aArDvBtW,SAwDW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,qCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAavB,IAAIuM,EAMC,CAEDpR,EAAWE,SAAU,CAGrB,IAAIoR,GAAY,EAChB,KAAI,GAAIvgB,KAAK2V,GAAOoL,QACbV,GAAc1K,EAAOoL,QAAQ/gB,GAAG4C,OAC/B2d,EAAYvgB,EAEJ,KAAbugB,EACC/iB,UAAUE,GAAGkC,MAAMgD,KAAKyd,GAAY,WACnCrhB,KAAK,SAAS6B,GACX0f,EAAY1f,EAAItB,IAChB+gB,EAAYC,KAHhB/iB,SAKO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,8BACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAGXwM,EAAYC,OAhChBrQ,GAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,QAkC3BsC,EAAOsL,WAAa,SAASC,EAAO3hB,GAChC4hB,GAAmBD,EAAO3hB,GAC1BoW,EAAOyL,aAAezL,EAAOoL,QAAQG,GAAQvgB,MAAMpB,IAGvDoW,EAAO0L,cAAgB,WACnBpS,EAAWE,SAAU,EACrB3R,UAAUG,QAAVH,UAAyBmY,EAAOyL,aAAahhB,SAAU,SAClDpB,KAAK,SAAU6B,GAEZrD,UAAUE,GAAG+B,IAAI,KAAM,WAAW0hB,EAAgB,GAAG,UAAUA,EAAgB,IAC1EniB,KAAK,SAAU8hB,SAELnL,GAAOoL,QAAQI,EAAgB,IAAIxgB,MAAMwgB,EAAgB,IAChEA,KACAjR,EAAEgD,OACEC,KAAM,qBACNC,QAAS,yBACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBmS,EAAqBxU,QACrB6I,EAAO7B,WAZftW,SAcW,SAAU+jB,GACblgB,QAAQC,IAAIigB,GACZrR,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAzBvBtW,SA4BW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,YAKnB6B,EAAO6L,UAAY,SAAUnM,GACzB9C,SAASM,eAAe,gBAAgB4O,IAAMpM,EAC9CqM,EAAmBlZ,QAGvBmN,EAAOgM,cAAgB,SAASlhB,GAC5BkV,EAAOiM,OAASnhB,EAChBohB,EAAiBrZ,QAIrB0H,EAAEyC,YAAYL,KAAKC,SAAS8B,iBAAiB,mBAC7C,IAAI2M,GAAc9Q,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,gBAAiBiP,kBAAkB,IACtFR,EAAuBpR,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,yBAA0BiP,kBAAkB,IACxGD,EAAmB3R,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,qBAAsBiP,kBAAkB,IAChGJ,EAAqBxR,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,uBAAwBiP,kBAAkB,IAEpGX,IAEJlS,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnBtP,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,WAAjD5D,SAAkE,SAASoG,GAAKvC,QAAQC,IAAIsC,KAE5FpG,UAAUE,GAAG0B,IAAI,WACZJ,KAAK,SAAUC,GAEZ0W,EAAOoL,QAAU9hB,CAEjB,IAAI8iB,KACJ,KAAI,GAAI/hB,KAAK2V,GAAOoL,QAChBgB,EAAWpM,EAAOoL,QAAQ/gB,GAAG4C,MAAQ,IACzCsN,GAAE8R,aAAa1P,KAAKC,SAASC,cAAc,kBAAmB9S,KAAMqiB,IACpE9S,EAAWE,SAAU,EACrBwG,EAAO7B,WAVftW,SAYW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe;AClO/BjF,IAAIM,WAAW,eAAgB,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE9F,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInBmX,GAAOsM,UAAY,WACftM,EAAOuM,iBAAmB,MAG9BvM,EAAOwM,SAAW,WAEd,GAAGxM,EAAOuM,iBAAiB,CACvB,GAAI/hB,GAAOoS,SAASM,eAAe,aAAalS,MAAM,EACtD,IAAGR,EAAK,CACJ8O,EAAWE,SAAU,CACrB,IAAI/O,GAAW5C,UAAUK,MAAMuL,iBAAiB,IAAM,IAAMjJ,EAAKyC,KAAK8d,MAAM,KAAK,GAC7E0B,EAAU7P,SAASM,eAAe,eAAe7L,KACjDob,KAASA,EAAU,IACvB5kB,UAAUG,QAAQuC,IAAIC,EAAK,cAAcC,GACxCpB,KAAK,SAAU6B,GACZQ,QAAQC,IAAIT,EACZ,IAAIwhB,IACAzf,KAAMzC,EAAKyC,KAAK8d,MAAM,KAAK,GAC3B4B,WAAY3M,EAAOuM,iBAAiB1c,GACpC+c,aAAc5M,EAAOuM,iBAAiBtf,KACtCtC,KAAMO,EAAIP,KACVqQ,OAAQxQ,EAAKyC,KAAK8d,MAAM,KAAK,GAAKvgB,EAAKyC,KAAK8d,MAAM,KAAK,GAAK,SAC5DrL,KAAMxU,EAAIJ,IACVL,SAAUA,EACVyX,SAAU5I,EAAWtL,KAAKvC,KAAK8J,OAAO+D,EAAWtL,KAAK6e,SAAWvT,EAAWtL,KAAK6e,aACjF5Z,SACI8U,UAAWlb,KAAKC,MAChBggB,OAAQ,EACRC,QAAS,iBACT/e,KAAMsL,EAAWtL,KAAKvC,IACtBuhB,IAAKP,IAGb5kB,WAAUE,GAAGkC,KAAKyiB,EAAU,eAAepT,EAAWtL,KAAKuE,QAC1DlJ,KAAK,SAAU8hB,GACZzf,QAAQC,IAAIwf,GACZnL,EAAOiN,YAAY9B,EAAKvhB,KAAO8iB,EAC/B1M,EAAOkN,UACPtQ,SAASM,eAAe,aAAalS,MAAM,GAAK,KAChD4R,SAASM,eAAe,iBAAiB7L,MAAQ,GACjDkJ,EAAEgD,OACEC,KAAM,kCACNC,QAAS,gBACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrB6R,EAAYlU,QACZ6I,EAAO7B,WAdXtW,SAgBO,SAAU+jB,GACblgB,QAAQC,IAAIigB,GACZrR,EAAEgD,OACEC,KAAM,uCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aA5CftW,SA+CO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,uCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,eAGXzS,SAAQC,IAAI,2BACZ4O,EAAEgD,OACEC,KAAM,+BACNC,QAAS,cACTC,cAAe,WAIvBhS,SAAQC,IAAI,0CACZ4O,EAAEgD,OACEC,KAAM,kCACNC,QAAS,cACTC,cAAe,QAK3BsC,EAAOmN,WAAa,SAASvjB,GACzB,GAAqF,GAAlFoW,EAAOiN,YAAYrjB,GAAKqJ,OAAO+M,EAAOiN,YAAYrjB,GAAKqJ,OAAOc,OAAO,GAAG+Y,OAAY,CACnF,GAAIM,IACArF,UAAWlb,KAAKC,MAChBggB,OAAQ,EACRC,QAAS,sBACT/e,KAAMsL,EAAWtL,KAAKvC,IACtBuhB,IAAKhN,EAAOiN,YAAYrjB,GAAKqJ,OAAO+M,EAAOiN,YAAYrjB,GAAKqJ,OAAOc,OAAO,GAAGiZ,IAEjFhN,GAAOiN,YAAYrjB,GAAKqJ,OAAOhJ,KAAKmjB,GACpCvlB,UAAUE,GAAGiC,OAAOgW,EAAOiN,YAAYrjB,GAAK,eAAe0P,EAAWtL,KAAKuE,OAAO,IAAI3I,GACrFP,KAAK,SAAU6B,GACZqP,EAAEgD,OACEC,KAAM,wBACNC,QAAS,gBACTC,cAAe,QALvB7V,SAQO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,2CACNC,QAAS,cACTC,cAAe,aAIvBhS,SAAQC,IAAIqU,EAAOiN,YAAYrjB,GAAKqJ,QACpCsH,EAAEgD,OACEC,KAAM,sCACNC,QAAS,cACTC,cAAe,QAK3BsC,EAAOqN,SAAW,SAASzjB,GACvBoW,EAAOsN,YAAc1jB,EACrB2jB,EAAiB1a,QAGrBmN,EAAOwN,UAAY,SAAS5jB,GACxBoW,EAAOyN,cAAgB7jB,EACvB8jB,EAAuB7a,QAG3BmN,EAAO2N,gBAAkB,WACrB,GAAIb,GAAS7H,SAASrI,SAASM,eAAe,qBAAqB7L,OAC/D2b,EAAMpQ,SAASM,eAAe,gBAAgB7L,KAElD,IADU,IAAP2b,IAAWA,EAAM,qBACjBF,EACC,GAAuH,GAApH9M,EAAOiN,YAAYjN,EAAOyN,eAAexa,OAAO+M,EAAOiN,YAAYjN,EAAOyN,eAAexa,OAAOc,OAAO,GAAG+Y,OAAY,CACrHxT,EAAWE,SAAU,CACrB,IAAI4T,IACArF,UAAWlb,KAAKC,MAChBggB,OAAQA,EACRC,QAAmB,GAAVD,EAAc,UAAsB,GAAVA,EAAc,WAAa,IAC9D9e,KAAMsL,EAAWtL,KAAKvC,IACtBuhB,IAAKA,EAEThN,GAAOiN,YAAYjN,EAAOyN,eAAexa,OAAOhJ,KAAKmjB,GACrDvlB,UAAUE,GAAGiC,OAAOmJ,KAAKC,MAAMsF,QAAQkV,OAAO5N,EAAOiN,YAAYjN,EAAOyN,iBAAiB,eAAenU,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOyN,eACzIpkB,KAAK,SAAU6B,GACZqP,EAAEgD,OACEC,KAAM,wBACNC,QAAS,gBACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBkU,EAAuBvW,QACvByF,SAASM,eAAe,qBAAqB7L,MAAQ,GACrDuL,SAASM,eAAe,gBAAgB7L,MAAQ,GAChD2O,EAAO7B,WAXXtW,SAaO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,2CACNC,QAAS,cACTC,cAAe,aAIvBhS,SAAQC,IAAIqU,EAAOiN,YAAYrjB,KAAKqJ,QACpCsH,EAAEgD,OACEC,KAAM,8BACNC,QAAS,cACTC,cAAe,WAIvBhS,SAAQC,IAAI,wCACZ4O,EAAEgD,OACEC,KAAM,qCACNC,QAAS,cACTC,cAAe,QAO3BsC,EAAOsL,WAAa,SAAS1hB,GACzBoW,EAAOwL,gBAAkB5hB,GAG7BoW,EAAO0L,cAAgB,WACnBpS,EAAWE,SAAU,EACrB3R,UAAUG,QAAVH,UAAyBmY,EAAOiN,YAAYjN,EAAOwL,iBAAiB/gB,SAAU,eACzEpB,KAAK,SAAU6B,GAEZrD,UAAUE,GAAG+B,IAAI,KAAM,eAAewP,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOwL,iBACnEniB,KAAK,SAAU8hB,SAELnL,GAAOiN,YAAYjN,EAAOwL,iBACjCxL,EAAOwL,gBAAkB,GACzBlS,EAAWE,SAAU,EACrBwG,EAAOkN,UACPvB,EAAqBxU,QACrB6I,EAAO7B,WARftW,SAUW,SAAU+jB,GACblgB,QAAQC,IAAIigB,GACZrR,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aArBvBtW,SAwBW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAOnB,IAAIkN,GAAc9Q,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,gBAAiBiP,kBAAkB,IACtFR,EAAuBpR,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,yBAA0BiP,kBAAkB,IACxGuB,EAAyBnT,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,2BAA4BiP,kBAAkB,IAC5GoB,EAAmBhT,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,qBAAsBiP,kBAAkB,GAEpGnM,GAAOwL,gBAAkB,GACzBxL,EAAOuM,iBAAmB,KAE1BjT,EAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnBtP,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,eAAjD5D,SAAsE,SAASoG,GAAKvC,QAAQC,IAAIsC,KAEhGpG,UAAUE,GAAG0B,IAAI,eAAe6P,EAAWtL,KAAKuE,QAC3ClJ,KAAK,SAAUwkB,GAGZ,GAFA7N,EAAOiN,eACPjN,EAAOkN,QAAU,EACd5T,EAAWtL,KAAK+P,OAAS8P,EACxB7N,EAAOiN,YAAcY,EACrB7N,EAAOkN,QAAU7Q,OAAOuL,oBAAoB5H,EAAOiN,aAAalZ,WAEhE,KAAI,GAAI1J,KAAKwjB,GACNA,EAAiBxjB,GAAG6X,QAAQI,QAAQhJ,EAAWtL,KAAKvC,KAAO,KAC1DuU,EAAOiN,YAAY5iB,GAAKwjB,EAAiBxjB,GACzC2V,EAAOkN,UAGnBrlB,WAAUE,GAAG0B,IAAI,gBAChBJ,KAAK,SAAUykB,GACZ9N,EAAO/X,MAAQ6lB,EACfjmB,UAAUE,GAAG0B,IAAI,cAAc6P,EAAWtL,KAAKuE,QAC9ClJ,KAAK,SAAUme,GACZxH,EAAO4E,WAAa/c,UAAUK,MAAM6I,SAASyW,GAC7ClO,EAAWE,SAAU,EACrBwG,EAAO7B,SACP5D,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAC5C9B,SAASM,eAAe,mBAAmBG,iBAAiB,SAAS,WACjE,GAAI0Q,GAAMnR,SAASM,eAAe,mBAC9B8Q,EAAShO,EAAO4E,WAAWqJ,UAAU,SAASC,GAAI,MAAOA,GAAEre,IAAMke,EAAIlW,QAAQkW,EAAII,eAAe9c,OACpG2O,GAAOuM,kBACH1c,GAAIke,EAAIlW,QAAQkW,EAAII,eAAe9c,MACnCpE,KAAM8gB,EAAIlW,QAAQkW,EAAII,eAAexa,KACrCnD,SAAUwP,EAAO4E,WAAWoJ,GAAQ5c,GAAGT,MAE3CqP,EAAO7B,aAdftW,SAiBO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,UAzB3B7V,SA6BO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,UAhD/B7V,SAoDW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe;ACxT/BjF,IAAIM,WAAW,YAAa,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE3F,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWmD,QAAQtF,QACnBtP,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,YAAlD5D,SAAoE,SAAUoG,GAAMvC,QAAQC,IAAIsC,IAEhG,IAAImgB,GAAa,WACmB,aAA7BvmB,UAAUM,SAAS8K,SAElB+M,EAAOqO,SACF/W,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IAG3BpP,UAAUM,SAASiO,GAAK4J,EAAOqO,OAE/BxmB,UAAUM,SAASkO,SAAW,WAC1B2J,EAAO7B,YAKfmQ,EAAa,WACVtO,EAAOqO,SACNrO,EAAOqO,OAAS,MAIxBD,KAGA9U,EAAWiF,gBAAkB,WACzB+P,KAGJhV,EAAWgF,aAAe,WACtB8P;AC9CR3V,IAAIM,WAAW,YAAa,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE3F,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWmD,QAAQtF,QACnBtP,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,YAAlD5D,SAAoE,SAAUoG,GAAMvC,QAAQC,IAAIsC,KAEhG+R,EAAOuO,SAAU,CAEjB,IAAIvL,GAAQD,WAAWC,MAAM,mBACzBA,OACIY,KAAM,OACN4K,WAAW,EACXvL,OAAQ,OAEZE,SACIC,SAAS,GAEbF,OACIvP,KAAM,qBAEV8S,OACIvD,OACIvP,KAAM,YAGd6Q,SACIC,aAAc,4BACdC,YAAa,iBAEjBgC,QACItD,SAAS,GAEbqL,WACIrL,SAAS,GAEbE,SACIrW,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,MAEnBG,KAAM,YACNlD,OAAQ8C,KAAKC,MAAM,QAIvBwW,EAASN,EAAMM,OAEfoL,EAAe,WACiB,aAA7B7mB,UAAUM,SAAS8K,SAElB+M,EAAOqO,SACF/W,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IACtBK,QAAQ,EAAOL,OAAO,IAG3BpP,UAAUM,SAASiO,GAAK4J,EAAOqO,OAE/BxmB,UAAUM,SAASkO,SAAW,WAE1B,IAAI,GADA0R,GAAYlb,KAAKC,MACbzC,EAAI,EAAO,EAAJA,EAAOA,IAClBiZ,EAAOjZ,GAAGskB,UAAU5G,EAAW/H,EAAOqO,OAAOhkB,GAAG4M,MAAQ,EAAE,IAAI,EAAOqM,EAAOjZ,GAAGN,KAAKgK,OAAO,QAKvG6a,EAAoB,WACpB5L,EAAM6L,SACH7O,EAAOuO,SACNhX,WAAWqX,EAAkB,KAGrC5O,GAAO8O,gBAAkB,WACrB9O,EAAOuO,SAAWvO,EAAOuO,QACtBvO,EAAOuO,SACNK,KAIRtV,EAAWiF,gBAAkB,WACtByB,EAAOqO,SAAQrO,EAAOqO,OAAS,OAGtC/U,EAAWgF,aAAe,WACtBoQ,KAIJA;AClHJjW,IAAIM,WAAW,aAAc,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE5F,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWmD,QAAQtF,QAEnB6I,EAAO+O,aAAe,WAClBxX,WAAW,WACPgD,EAAEwG,oBACJ,MAGNf,EAAOgP,eAAiB,WAChBhP,EAAOiP,YAmBPC,EAAWrc,QAlBXyG,EAAWE,SAAU,EACrB3R,UAAUE,GAAG0B,IAAI,gBAAgB6P,EAAWtL,KAAKvC,IAAI,gBACpDpC,KAAK,SAAS8lB,GACRA,GACCnP,EAAOiP,YAAcE,EACrBD,EAAWrc,QAEX0H,EAAEgD,OAAOC,KAAM,8BAA8BC,QAAS,yBAAyBC,cAAe,MAClGpE,EAAWE,SAAU,EACrBwG,EAAO7B,WARXtW,SAUO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,uCAAuCC,QAAS,cAAcC,cAAe,MAC5FpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAOnB6B,EAAOoP,YAAc,SAASxlB,GAC1B,GAAIG,GAAOoJ,KAAKC,MAAM4M,EAAOiP,YAAYrlB,GAAKG,KAE9CslB,QAAOC,eAGPvlB,EAAKwlB,aAAc,EACnBxlB,EAAK6V,MAAQhD,SAASM,eAAe,UAAUsS,YAC/CzlB,EAAKkZ,OAASrG,SAASM,eAAe,UAAUuS,aAChD1lB,EAAK2lB,UACF9L,KAAO,OACPA,KAAO,QACPA,KAAO,UACPA,KAAO,OACPA,KAAO,QACPA,KAAO,YACPA,KAAO,WACPA,KAAO,WACPA,KAAO,QACPA,KAAO,QACPA,KAAO,QACPA,KAAO,SACPA,KAAO,OACPA,KAAO,QACPA,KAAO,QACPA,KAAO,SACPA,KAAO,QACPA,KAAO,SACPA,KAAO,UACPA,KAAO,aACPA,KAAO,kBACPA,KAAO,UACPA,KAAO,WACPA,KAAO,UACPA,KAAO,UACPA,KAAO,SACPA,KAAO,SACPA,KAAO,gBACPA,KAAO,cACPA,KAAO,cACPA,KAAO,cACPA,KAAO,sBACPA,KAAO,sBACPA,KAAO,uBACPA,KAAO,eACPA,KAAO,gBACPA,KAAO,YACPA,KAAO,aACPA,KAAO,cAEVyL,OAAOM,YAAY9I,EAAE,WAAY9c,GACjC6lB,GACIhmB,IAAKA,EACLqD,KAAM+S,EAAOiP,YAAYrlB,GAAKqD,MAElC+S,EAAO6P,gBAAkB7P,EAAOiP,YAAYrlB,GAAKqD,KACjDiiB,EAAW/X,SAGf6I,EAAO8P,YAAc,WAKjB,GAJAxW,EAAWE,SAAU,EAGrBoW,KACG5P,EAAOiP,YACN,IAAI,GAAI5kB,KAAK2V,GAAOiP,YACbjP,EAAOiP,YAAY5kB,GAAG4C,MAAQ+S,EAAO6P,kBACpCD,GACIhmB,IAAKS,EACL4C,KAAM+S,EAAOiP,YAAY5kB,GAAG4C,MAI5C,IAAI8iB,GAAQV,OAAOtW,WAAW8N,EAAE,WAAWmJ,KAAK,sBAAsBjmB,OAGlEA,EAAOoJ,KAAKI,UAAU,SAAUwc,GAAO,OAAQE,QAAQF,EAAME,QAASC,WAAWH,EAAMG,aAAeH,GAE1G,IAA2B,GAAxBA,EAAME,QAAQlc,OACbwG,EAAEgD,OAAOC,KAAM,sBAAsBC,QAAS,cAAcC,cAAe,MAC3EpE,EAAWE,SAAU,MACpB,CACD,GAAI2W,IACApI,UAAWlb,KAAKC,MAChBnC,KAAMolB,EAAME,QAAQlc,OACpBhK,KAAMA,EACNkD,KAAM+S,EAAO6P,gBAGdD,GAAWhmB,IACV/B,UAAUE,GAAGiC,OAAOmmB,EAAI,gBAAgB7W,EAAWtL,KAAKvC,IAAI,gBAAgBmkB,EAAWhmB,KACtFP,KAAK,SAAS6B,GAEX8U,EAAOiP,YAAYW,EAAWhmB,KAAOumB,EACrCC,EAAWjZ,QACXmC,EAAWE,SAAU,EACrBwG,EAAO7B,WANXtW,SAQO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,8BAA8BC,QAAS,cAAcC,cAAe,MACnFpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAGXtW,UAAUE,GAAGkC,KAAKkmB,EAAI,gBAAgB7W,EAAWtL,KAAKvC,IAAI,gBACzDpC,KAAK,SAAS6B,GAEX0kB,GACIhmB,IAAKsB,EAAItB,IACTqD,KAAMkjB,EAAIljB,MAEV+S,EAAOiP,cACPjP,EAAOiP,gBACXjP,EAAOiP,YAAY/jB,EAAItB,KAAOumB,EAC9BC,EAAWjZ,QACXmC,EAAWE,SAAU,EACrBwG,EAAO7B,WAZXtW,SAcO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,8BAA8BC,QAAS,cAAcC,cAAe,MACnFpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAOvB6B,EAAOqQ,eAAiB,WAIpB,GAAIC,GAASjB,OAAOkB,kBAAkB,SAClClZ,EAAUgY,OAAOkB,kBAAkB,SAGvC,IAAoB,GAAjBD,EAAOvc,OAEN,WADAwG,GAAEgD,OAAOC,KAAM,2CAA2CC,QAAS,cAAcC,cAAe,KAGpG,IAAqB,GAAlBrG,EAAQtD,OAEP,WADAwG,GAAEgD,OAAOC,KAAM,0CAA0CC,QAAS,cAAcC,cAAe,KAKnGpE,GAAWE,SAAU,CAIrB,IAAIgX,GAAYF,EAAOvc,OAASsD,EAAQtD,MAGxCuc,GAASA,EAAOtX,OAAO,SAAS3H,EAAOof,EAAOC,GAAO,MAAOA,GAAKpO,QAAQjR,KAAWof,GAGpF,IAAIV,GAAQV,OAAOtW,WAAW8N,EAAE,WAAWmJ,KAAK,sBAAsBjmB,MAGtEiW,GAAO2Q,gBACHZ,MAAOA,EACPa,UAAWb,EAAME,QAAQlc,OAASyc,EAClCK,aAAcd,EAAMG,WAAWnc,OAC/B+c,YACI/H,QACIuH,OAAOA,EACPjZ,QAAQA,GAEZ0Z,SAEJC,eACAC,gBACAC,gBAGJ,IAAIC,GAAUhhB,KAAKihB,IAAI,EAAEd,EAAOvc,QAC5Bsd,KACAC,KACAC,KACAC,KACAC,KACAC,KAGAC,EAA0B,WAE1B,IAAI,GAAItnB,KAAKgN,GACT,GAAIga,EAAShnB,GAMb,GAAIinB,EAASjnB,GAAb,CAOA,IAAI,GAAIkK,KAAK8c,GAAShnB,GAAG,CACrB,IAAI,GAAIunB,KAAKP,GAAShnB,GAAGkK,GACrB,OAAO8c,EAAShnB,GAAGkK,GAAGqd,IAClB,IAAK,IACEH,EAAoBpnB,GACnBonB,EAAoBpnB,IAAMimB,EAAOsB,GAEjCH,EAAoBpnB,GAAKimB,EAAOsB,EACpC,MACJ,KAAK,IACEH,EAAoBpnB,GACnBonB,EAAoBpnB,IAAMimB,EAAOsB,GAAG,IAEpCH,EAAoBpnB,GAAKimB,EAAOsB,GAAG,IAMnDH,EAAoBpnB,IAAM,MAE9BonB,EAAoBpnB,GAAKonB,EAAoBpnB,GAAGwnB,UAAU,EAAEJ,EAAoBpnB,GAAG0J,OAAO,EAG1F,KAAI,GAAIQ,KAAK+c,GAASjnB,GAAG,CAClBqnB,EAAoBrnB,GACnBqnB,EAAoBrnB,IAAM,IAE1BqnB,EAAoBrnB,GAAK,GAC7B,KAAI,GAAIunB,KAAKN,GAASjnB,GAAGkK,GACrB,OAAO+c,EAASjnB,GAAGkK,GAAGqd,IAClB,IAAK,IACDF,EAAoBrnB,IAAMimB,EAAOsB,GAAG,GACpC,MACJ,KAAK,IACDF,EAAoBrnB,IAAMimB,EAAOsB,GAAG,KAMhDF,EAAoBrnB,GAAKqnB,EAAoBrnB,GAAGwnB,UAAU,EAAEH,EAAoBrnB,GAAG0J,OAAO,GAC1F2d,EAAoBrnB,IAAM,OAE9BqnB,EAAoBrnB,GAAKqnB,EAAoBrnB,GAAGwnB,UAAU,EAAEH,EAAoBrnB,GAAG0J,OAAO,OAlDtF0d,GAAoBpnB,GAAK,IACzBqnB,EAAoBrnB,GAAK,QAPzBonB,GAAoBpnB,GAAK,IACzBqnB,EAAoBrnB,GAAK,GA4DjC,KAAI,GAAIA,KAAKonB,GACTzR,EAAO2Q,eAAeM,aAAa5mB,GAAK,MAAQgN,EAAQhN,GAAK,SAAWonB,EAAoBpnB,EAChG,KAAI,GAAIA,KAAKqnB,GACT1R,EAAO2Q,eAAeO,aAAa7mB,GAAK,MAAQgN,EAAQhN,GAAK,SAAWqnB,EAAoBrnB,EAGhGiP,GAAWE,SAAU,EACrBsY,EAAcjf,OACdmN,EAAO7B,UAGP4T,EAAwB,WAExB,IAAI,GAAI1nB,KAAKgN,GAET,GAAIga,EAAShnB,GAKb,GAAGgnB,EAAShnB,GAAG0J,QAAUod,EAAzB,CAMAI,EAAgBlnB,GAAKxC,UAAUK,MAAMmM,mBAAmBgd,EAAShnB,GACjE,KAAI,GAAIkK,KAAKgd,GAAgBlnB,GAAG,CAC5B,IAAI,GAAIunB,KAAKL,GAAgBlnB,GAAGkK,GAC5B,OAAOgd,EAAgBlnB,GAAGkK,GAAGqd,IACzB,IAAK,IACEJ,EAAmBnnB,GAClBmnB,EAAmBnnB,IAAMimB,EAAOsB,GAEhCJ,EAAmBnnB,GAAKimB,EAAOsB,EACnC,MACJ,KAAK,IACEJ,EAAmBnnB,GAClBmnB,EAAmBnnB,IAAMimB,EAAOsB,GAAG,IAEnCJ,EAAmBnnB,GAAKimB,EAAOsB,GAAG,GACtC,MACJ,KAAK,KAMbJ,EAAmBnnB,IAAM,MAE7BmnB,EAAmBnnB,GAAKmnB,EAAmBnnB,GAAGwnB,UAAU,EAAEL,EAAmBnnB,GAAG0J,OAAO,OA7BnFyd,GAAmBnnB,GAAK,QALxBmnB,GAAmBnnB,GAAK,GAqChC,KAAI,GAAIA,KAAKmnB,GACTxR,EAAO2Q,eAAeK,YAAY3mB,GAAK,MAAQgN,EAAQhN,GAAK,SAAWmnB,EAAmBnnB,EAE9FsnB,MAGAK,EAAY,SAAS3nB,GACrB,GAAI4nB,GAAW5nB,EAAE+H,SAAS,GAAG8f,SAAS5B,EAAOvc,OAAO,IACpDiM,GAAO2Q,eAAeG,WAAWC,KAAK1mB,IAClCimB,OAAQ2B,EAASlH,MAAM,IACvB1T,WAEJ,KAAI,GAAI9C,KAAKyL,GAAO2Q,eAAeG,WAAWC,KAAK1mB,GAAGimB,OAClDjB,OAAO8C,eAAe7B,EAAO/b,GAA0D,KAAtDyL,EAAO2Q,eAAeG,WAAWC,KAAK1mB,GAAGimB,OAAO/b,GAGrFgD,YAAW,WAEP,IAAI,GAAI7C,KAAK2C,GACT2I,EAAO2Q,eAAeG,WAAWC,KAAK1mB,GAAGgN,QAAQ3C,GAA2C,GAAtC2a,OAAO+C,gBAAgB/a,EAAQ3C,IAAW,IAAI,IAC1C,KAAvDsL,EAAO2Q,eAAeG,WAAWC,KAAK1mB,GAAGgN,QAAQ3C,GAC7C2c,EAAS3c,GACR2c,EAAS3c,GAAGzK,KAAKgoB,GAEjBZ,EAAS3c,IAAMud,GAEhBX,EAAS5c,GACR4c,EAAS5c,GAAGzK,KAAKgoB,GAEjBX,EAAS5c,IAAMud,EAG3B5nB,KACO8mB,EAAJ9mB,EACC2nB,EAAU3nB,GAEV0nB,KACN,IAENC,GAAU,IAKdhS,EAAO6P,gBAAkB,EACzB,IAAID,KACJrV,GAAE0C,MAAMN,KAAKC,SAASM,eAAe,qBACrC,IAAIgS,GAAa3U,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eAAgBiP,kBAAkB,IACpFiE,EAAa7V,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eAAgBiP,kBAAkB,IACpF2F,EAAgBvX,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBAAmBiP,kBAAkB,GAG9FkD,QAAOM,YAAY9I,EAAE,YACjBjH,MAAOhD,SAASM,eAAe,UAAUsS,YACzCvM,OAAQrG,SAASM,eAAe,UAAUuS,eAG9C7nB,OAAOyqB,SAAW,SAAS3K,GAEvB,GAAI4K,GAAI1V,SAASM,eAAe,UAAUsS,YACtCrV,EAAIyC,SAASM,eAAe,UAAUuS,aAEtC8C,EAAK3V,SAAS4V,uBAAuB,oBAAoB,EAC7DD,GAAGE,aAAa,UAAW,OAAOH,EAAE,IAAInY,GACxCoY,EAAGE,aAAa,QAASH,GACzBC,EAAGE,aAAa,SAAUtY,IAG9BtS,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,aAAlD5D,SAAqE,SAAUoG,GAAMvC,QAAQC,IAAIsC;AC3ZrGwK,IAAIM,WAAW,SAAU,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAExF,MAAKD,GAAWG,YAKhBH,EAAWmD,QAAQtF,QAEnBoD,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,sBAErCwV,IAAM,GAAIC,gBAAe,GAAI,EAAG,EAAG,GACnCD,IAAI/V,OACJiW,SAAW,GAAIC,aAAY,gBAAiBH,KAC5CE,SAASjW,OAETqD,EAAO8S,QAAU,EACjB9S,EAAO+S,YAAa,EAEpBxb,WAAW,WACPgD,EAAEwG,oBACJ,KAEFf,EAAOgT,aAAe,WAClBJ,SAASK,YAAYjT,EAAO8S,UAGhC9S,EAAOkT,YAAc,WACjBN,SAASO,eAAenT,EAAO+S,iBAGnClrB,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,QAAlD5D,SAAgE,SAAUoG,GACtEvC,QAAQC,IAAIsC,UA7BZsL,GAAU1Q,KAAK;ACHvB4P,IAAIM,WAAW,UAAW,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAEzF,MAAKD,GAAWG,YAKhBH,EAAWmD,QAAQtF,QAEnBoD,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,sBAErC8C,EAAO8S,QAAU,EACjB9S,EAAO+S,YAAa,EAEpBxb,WAAW,WACPgD,EAAEwG,oBACJ,KAEFf,EAAOgT,aAAe,aAItBhT,EAAOkT,YAAc,iBAIrBrrB,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,UAAlD5D,SAAkE,SAAUoG,GACxEvC,QAAQC,IAAIsC,UAxBZsL,GAAU1Q,KAAK;ACHvB4P,IAAIM,WAAW,SAAU,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAExF,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QACnB6I,EAAOoT,YAAc,KACrBpT,EAAOqT,SAAU,CACjB,IAAI9L,GAAiB,EAIjB+L,EAAoB,WACpBtT,EAAOuT,iBAAiBnb,KAAKvI,KACzBa,UAAuC,IAA5BiJ,OAAOvB,KAAK/G,OAAO+X,OAC9BrB,UAAWlb,KAAKC,MAChBgb,UAAWxO,EAAWtL,KAAKvC,KAE/BuU,EAAO7B,SAGX6B,GAAOwT,SAAW,SAAU5pB,GAExBoW,EAAOoT,YAAcxpB,EACrB6pB,IACA/P,KAGJ1D,EAAO0T,WAAa,SAAS9pB,GACzBoW,EAAOoT,YAAcxpB,EACrB+pB,EAAmB9gB,OAGvB,IAAI4gB,GAAiB,WACjB,GAAGzT,EAAO/X,MAAM+X,EAAOoT,aAAatiB,OAChC,GAAGkP,EAAO/X,MAAM+X,EAAOoT,aAAalM,WAAW,CAC3C,GAAIS,GAAqBtL,OAAOuL,oBAAoB5H,EAAO/X,MAAM+X,EAAOoT,aAAalM,YAAYnT,OAC7F8T,EAAMN,EAAmB,EAAII,EAAmBJ,EAAiB,IAAM,CAC3EvH,GAAO/X,MAAM+X,EAAOoT,aAAatiB,OAAO4U,YACpC7U,MAAOoU,SAAS4C,EAAI7L,QAAQ,IAC5B8L,UAAW,YACXC,UAAWlb,KAAKC,WAGpBkT,GAAO/X,MAAM+X,EAAOoT,aAAatiB,OAAO4U,YACpC7U,MAAO,EACPiX,UAAW,YACXC,UAAWlb,KAAKC,QAM5B4W,EAAkB,WAClB,GAAI3Z,KAEJiW,GAAO2E,YAAc9c,UAAUK,MAAMyH,WAAWqQ,EAAO4T,eAAe,QACtE,IAAIviB,GAAQxJ,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAM+X,EAAOoT,aAAapT,EAAO2E,aAAa3E,EAAO2E,YAAY9T,MAAM,GAC/GmP,GAAO6E,uBACH5X,KAAM+S,EAAO2E,YAAY1X,KACzB6X,QAAS9E,EAAO2E,YAAY9T,MAAMQ,EAAM,KAAK2K,QAAQ,GACrDnL,MAAOQ,EAAM2K,QAAQ,GACrBlM,YAEJ,KAAIzF,IAAK2V,GAAO2E,YAAY7U,SAAS,CAEjC,GAAIiV,GAAWld,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAM+X,EAAOoT,aAAapT,EAAO2E,YAAY7U,SAASzF,IAAI2V,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAAM,GAE1ImP,GAAO6E,sBAAsB/U,SAAS7F,MAClCgD,KAAM+S,EAAO2E,YAAY7U,SAASzF,GAAG4C,KACrC6X,QAAS9E,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAAMkU,EAAS,KAAK/I,QAAQ,GACpEnL,MAAOkU,EAAS/I,QAAQ,KAE5BjS,EAAKE,MACDwQ,EAAGuF,EAAO2E,YAAY7U,SAASzF,GAAGwG,MAClCmU,EAAGC,SAASF,EAAS/I,QAAQ,IAC7B/O,KAAM+S,EAAO2E,YAAY7U,SAASzF,GAAG4C,OAG7C8V,WAAWC,MAAM,0BACbA,OAAQY,KAAM,cAAcX,OAAQ,QACpCC,OAAQvP,KAAM,kBACd6Q,SACIC,aAAc,GACdC,YAAa,8GAGjBpB,SAAU4B,aAAc,GAAGC,UAAW,MAAMC,KAAM,EAAEnY,KAAM,QAAQlD,KAAMA,MAIhFiW,GAAO6T,YAAc,WACjBnoB,QAAQC,IAAIqU,EAAOhJ,SACnBtL,QAAQC,IAAIqU,EAAOoT,aACnBpT,EAAOoT,YAAc,KACrBU,EAAa3c,SAGjB6I,EAAO+T,WAAa,WAChB,GAAIC,IACAjW,OAAO,EACPxL,OAAQ+G,EAAWtL,KAAKuE,OACxByL,SAAUnR,KAAKC,MAGhBkT,GAAOoT,cACN9Z,EAAWE,SAAU,EACrB3R,UAAUE,GAAGiC,OAAOgqB,EAAc,iBAAmBhU,EAAOoT,aACvD/pB,KAAK,SAAUC,GAEZ0W,EAAO/X,MAAM+X,EAAOoT,aAAarV,OAAQ,EACzCiC,EAAO/X,MAAM+X,EAAOoT,aAAapV,SAAWgW,EAAahW,SACzDzD,EAAEgD,OACEC,KAAM,SACNC,QAAS,yBACTC,cAAe,MAEnBiW,EAAmBxc,QACnB6I,EAAOoT,YAAc,KACrB9Z,EAAWE,SAAU,EACrBwG,EAAO7B,WAbftW,SAeW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAKvB6B,EAAOiU,SAAW,SAAUrqB,GACxBoW,EAAOoT,YAAcxpB,EAErB6pB,IAGAzT,EAAOkU,kBACP,KAAK,GAAI7pB,KAAK2V,GAAO/X,MAAM2B,GAAKkH,OAC5BkP,EAAOkU,gBAAgB7pB,IACnByd,UAAW9H,EAAO/X,MAAM2B,GAAKkH,OAAOzG,GAAGyd,UACvCjX,MAAOmP,EAAO/X,MAAM2B,GAAKkH,OAAOzG,GAAGwG,MACnCkX,UAAW/H,EAAO/X,MAAM2B,GAAKkH,OAAOzG,GAAG0d,UAE/C/H,GAAOuT,mBACP,KAAK,GAAIlpB,KAAK2V,GAAO/X,MAAM2B,GAAK6G,QAC5BuP,EAAOuT,iBAAiBlpB,IACpByd,UAAW9H,EAAO/X,MAAM2B,GAAK6G,QAAQpG,GAAGyd,UACxCpX,UAAWsP,EAAO/X,MAAM2B,GAAK6G,QAAQpG,GAAGqG,UACxCqX,UAAW/H,EAAO/X,MAAM2B,GAAK6G,QAAQpG,GAAG0d,UAKhD,KAAK,GAAI1d,KAAK2V,GAAO4E,WACb5E,EAAO4E,WAAWva,GAAG+G,KACjB4O,EAAOuT,iBAAiBvT,EAAO4E,WAAWva,GAAGwF,IAC7C+M,SAASM,eAAe8C,EAAO4E,WAAWva,GAAGwF,IAAIwB,MAAQsI,OAAOqG,EAAOuT,iBAAiBvT,EAAO4E,WAAWva,GAAGwF,IAAIa,WAAWsK,OAAO,cAEnI4B,SAASM,eAAe8C,EAAO4E,WAAWva,GAAGwF,IAAIwB,MAAQ,GAC7DuL,SAASM,eAAe8C,EAAO4E,WAAWva,GAAGwF,IAAIskB,oBAAoB,SAAUb,GAC/E1W,SAASM,eAAe8C,EAAO4E,WAAWva,GAAGwF,IAAIwN,iBAAiB,SAAUiW,GAEpFc,GAAYvhB,QAGhBmN,EAAOqU,QAAU,SAAUzqB,GACvB,GAAIoW,EAAO4E,WAAWhb,IAAQoW,EAAOuT,kBAC7BvT,EAAOuT,iBAAiBvT,EAAO4E,WAAWhb,GAAKiG,IAAK,CACpD,GAAImQ,EAAOuT,iBAAiBvT,EAAO4E,WAAWhb,GAAKiG,IAAIa,UAAYsP,EAAO4E,WAAWhb,GAAKwH,GAAGT,KAAM,CAE/F,GAAIC,GAAO/I,UAAUK,MAAM6H,oBAAoBiQ,EAAOuT,iBAAiBvT,EAAO4E,WAAWhb,GAAKiG,IAAIa,UAAWsP,EAAO4E,WAAWhb,GAAKwH,GAAGT,KAAMqP,EAAO4E,WAAWhb,GAAKwH,GAAGlB,MACvK,OAAIU,GAAOoP,EAAO4E,WAAWhb,GAAKiH,MACvBmP,EAAO4E,WAAWhb,GAAKiH,MAEvBD,EAAKoL,QAAQ,GAExB,MAAO,KAKvBgE,EAAOsU,aAAe,SAAU1qB,GAE5BgT,SAASM,eAAetT,GAAKuqB,oBAAoB,SAAUb,GAC3D1W,SAASM,eAAetT,GAAKyH,MAAQ,GACrC2O,EAAOuT,iBAAiB3pB,GAAO,KAC/BgT,SAASM,eAAetT,GAAKyT,iBAAiB,SAAUiW,IAG5DtT,EAAOuU,WAAa,WAChBjb,EAAWE,SAAU,CACrB,IAAI0C,KACJA,GAAIpL,OAASkP,EAAOkU,gBACpBhY,EAAIzL,QAAUuP,EAAOuT,iBACrB1rB,UAAUE,GAAGiC,OAAOkS,EAAK,iBAAmB8D,EAAOoT,aAC9C/pB,KAAK,SAAUC,GACZ0W,EAAO/X,MAAM+X,EAAOoT,aAAatiB,OAASkP,EAAOkU,gBACjDlU,EAAO/X,MAAM+X,EAAOoT,aAAa3iB,QAAUuP,EAAOuT,iBAClDa,EAAYjd,QAEZ6I,EAAOoT,YAAc,KACrBpT,EAAOkU,gBAAkB,KACzBlU,EAAOuT,iBAAmB,KAC1BhZ,EAAEgD,OACEC,KAAM,8BACNC,QAAS,yBACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAfftW,SAiBW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,qBACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,YAOnB5D,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eACjCiP,kBAAkB,GAEtB,IAAI2H,GAAevZ,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBACpDiP,kBAAkB,IAElBwH,EAAqBpZ,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,yBAC1DiP,kBAAkB,IAElBiI,EAAc7Z,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,iBACnDiP,kBAAkB,EAClB9K,aAAa,GAGjBxZ,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,SAAlD5D,SAAiE,SAAUoG,GACvEvC,QAAQC,IAAIsC,KAGhBpG,UAAUE,GAAG0B,IAAI,gBACZJ,KAAK,SAAUmrB,GACZxU,EAAO/X,MAAQusB,EACf3sB,UAAUE,GAAG0B,IAAI,iBACZJ,KAAK,SAAUorB,GAGZ,IAAK,GAAIpqB,KAAKoqB,GACV,IAAK,GAAIlgB,KAAKkgB,GAAmBpqB,GAC7B2V,EAAO/X,MAAMoC,GAAGkK,GAAKkgB,EAAmBpqB,GAAGkK,EAEnD1M,WAAUE,GAAG0B,IAAI,cAAc6P,EAAWtL,KAAKuE,QAC1ClJ,KAAK,SAAUme,GACZxH,EAAO4T,eAAiBpM,EACxBxH,EAAO4E,WAAa/c,UAAUK,MAAM6I,SAASyW,GAC7C3f,UAAUE,GAAG4B,UAAU,UAAU2P,EAAWtL,KAAKuE,OAAO,SACvDlJ,KAAK,SAASoe,GACXA,EAAYtF,QAAQ,SAASC,GACzB,GAAIsF,GAAKtF,EAAc7Y,KACpBme,GAAGJ,OAASza,KAAKC,OAAS4a,EAAGR,YAC5BK,MAERjO,EAAWE,SAAU,EACrBF,EAAW6E,WARftW,SAUO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,MACtGpE,EAAWE,SAAU,EACrBF,EAAW6E,aAlBvBtW,SAqBW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aArCvBtW,SAwCW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAnDvBtW,SAsDW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B;AC1TnB1F,IAAIM,WAAW,SAAU,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAExF,IAAKD,EAAWG,WAEZ,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,OAEnB,IAAIud,MAEAC,EAAqB,WAErB,GAAI1O,MACAC,IAEJ,KAAK,GAAI7b,KAAK2V,GAAO/X,MACjB,IAAK+X,EAAO/X,MAAMoC,GAAG0T,OAASiC,EAAO/X,MAAMoC,GAAGyG,SAAWkP,EAAO/X,MAAMoC,GAAGuqB,YAAa,CAClF,GAAIpc,GAAK3Q,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAMoC,GAAI2V,EAAO4E,YAAc5E,EAAO4E,WAAW/T,MAAQ,GAC9F6jB,GAAarqB,IACTwG,MAAO2H,EACP7L,SAAU,EACVua,WAAYlH,EAAO/X,MAAMoC,GAAGyG,OAAO4U,WAAW7U,OAElDoV,EAAWhc,MACPgD,KAAM+S,EAAO/X,MAAMoC,GAAG6C,WACtBuN,EAAGjC,EACH2N,UAAW9b,GAGf,IAAI+b,KACJ,KAAK,GAAI7R,KAAKyL,GAAO4E,WAAW9U,SAC5BsW,EAASnc,MACL+V,EAAO4E,WAAW9U,SAASyE,GAAG1E,GAC9BhI,UAAUK,MAAMmI,KAAK2P,EAAO/X,MAAMoC,GAAI2V,EAAO4E,WAAW9U,SAASyE,IAAMyL,EAAO4E,WAAW9U,SAASyE,GAAG1D,MAAQ,KAIrHqV,GAAcjc,MACVgD,KAAM+S,EAAO/X,MAAMoC,GAAG6C,WACtB2C,GAAIxF,EACJN,KAAMqc,IAKlBH,EAAWrQ,KAAK,SAASb,EAAGuD,GAAG,MAAQvD,GAAE0F,EAAInC,EAAEmC,EAAK,EAAMnC,EAAEmC,EAAI1F,EAAE0F,EAAK,GAAK,IAE5EsI,WAAWsD,YACPC,MACIC,YAAa,+BAIrBxD,WAAWC,MAAM,2BACbA,OACIY,KAAM,MACNX,OAAQ,OAEZC,OACIvP,KAAM,4BAEV6S,OACI5C,KAAM,YAEV6C,OACIvD,OACIvP,KAAM,sBAGdwP,SACIC,SAAS,GAEbsD,QACItD,SAAS,GAEbC,aACIC,QACIqD,YAAa,EACb5C,YACIX,SAAS,EACTpI,OAAQ,oBAKpBwJ,SACIC,aAAc,wDACdC,YAAa,gFAGjBpB,SACIrW,KAAM,SACNqX,cAAc,EACdva,KAAMkc,IAEVE,WACI7B,cAAc,EACdhB,OAAQ4C,KAMpBlG,GAAO4G,QAAU,WACbC,EAAE,4BAA4BC,aAAaF,UAG/C,IAAIG,GAAuB,WACvB,GAAId,MACAe,KAEAC,GAAQ,CACZ,KAAK,GAAI1S,KAAKyL,GAAO/X,MACjB,GAAI+X,EAAO/X,MAAMsM,GAAG2S,aAAelH,EAAO/X,MAAMsM,GAAGqgB,YAAa,CAC5D,GAAI7qB,MACAod,EAAQ,EACRC,EAAQ,CACZ,KAAK,GAAI/c,KAAK2V,GAAOuD,OACbvD,EAAOuD,OAAOlZ,GAAGid,MAAQza,KAAKC,OAASkT,EAAOuD,OAAOlZ,GAAG6c,aACxDC,IACInH,EAAO/X,MAAMsM,GAAG2S,WAAW7c,IAC3B+c,IACS,GAATA,EACArd,EAAKE,KAAKkG,KAAK0kB,MAAMzN,EAAQD,EAAQ,KAAS,KAE9Cpd,EAAKE,KAAK,GACVgd,GACAD,EAAW/c,KAAKqP,EAAW2B,QAAQ,EAAE+E,EAAOuD,OAAOlZ,GAAGid,QAGlEL,IAAQ,EACRhB,EAAWhc,MACPF,KAAMA,EACNkD,KAAM+S,EAAO/X,MAAMsM,GAAGrH,aAKlC6V,WAAWC,MAAM,wBACbA,OACIY,KAAM,SACNX,OAAQ,OAEZE,SACIC,SAAS,GAEbF,OACIvP,KAAM,uBAEV6S,OACIQ,WAAYA,GAEhB1D,OAAQ2C,KAIZ6O,EAAgB,WAEhB,GAAIC,GAAU,EACVC,EAAU,EACVC,GACAC,QAAS,EACTC,OAAQ,EACRC,GAAI,EACJC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAENvoB,GACAwoB,QAAS,EACTC,MAAO,EACPC,IAAK,EACLC,QAAS,EACTJ,KAAM,EAEV,KAAK,GAAIlrB,KAAK2V,GAAO/X,MACjB,IAAK+X,EAAO/X,MAAMoC,GAAG0T,QAAUiC,EAAO/X,MAAMoC,GAAGuqB,YAAa,CACxD,IAAK,GAAIrgB,KAAKyL,GAAO/X,MAAMoC,GAAGsC,SAASI,QACnCkoB,EAAG1gB,IAAMyL,EAAO/X,MAAMoC,GAAGsC,SAASI,QAAQwH,GAC1CwgB,GAAW/U,EAAO/X,MAAMoC,GAAGsC,SAASI,QAAQwH,EAEhD,KAAK,GAAIA,KAAKyL,GAAO/X,MAAMoC,GAAGsC,SAASK,GACnCA,EAAGuH,IAAMyL,EAAO/X,MAAMoC,GAAGsC,SAASK,GAAGuH,GACrCygB,GAAWhV,EAAO/X,MAAMoC,GAAGsC,SAASK,GAAGuH,GAsBnDwO,WAAWC,MAAM,yBACbA,OACI4S,oBAAqB,KACrBjQ,gBAAiB,KACjBkQ,YAAY,EACZjS,KAAM,OAEVV,OACIvP,KAAM,sBAEV6Q,SACIE,YAAa,iDAEjBvB,SACIC,SAAS,GAEbC,aACIuC,KACIkQ,kBAAkB,EAClBhS,OAAQ,UACRC,YACIX,SAAS,EACTpI,OAAQ,gDACR6E,OACIlO,MAAQoR,WAAWgT,OAAShT,WAAWgT,MAAMC,mBAAsB,SAEvEC,eAAgB,YAI5B3S,SACIrW,KAAM,MACNlD,OACQkD,KAAM,SACNwN,EAAGwa,EAAGE,OAASJ,IAGf9nB,KAAM,UACNwN,EAAGwa,EAAGC,QAAUH,IAGhB9nB,KAAM,KACNwN,EAAGwa,EAAGG,GAAKL,IAGX9nB,KAAM,QACNwN,EAAGwa,EAAGI,MAAQN,IAGd9nB,KAAM,SACNwN,EAAGwa,EAAGK,OAASP,IAGf9nB,KAAM,OACNwN,EAAGwa,EAAGM,KAAOR,QAM7BhS,WAAWC,MAAM,oBACbA,OACI4S,oBAAqB,KACrBjQ,gBAAiB,KACjBkQ,YAAY,EACZjS,KAAM,OAEVV,OACIvP,KAAM,eAEV6Q,SACIE,YAAa,iDAEjBvB,SACIC,SAAS,GAEbC,aACIuC,KACIkQ,kBAAkB,EAClBhS,OAAQ,UACRC,YACIX,SAAS,EACTpI,OAAQ,gDACR6E,OACIlO,MAAQoR,WAAWgT,OAAShT,WAAWgT,MAAMC,mBAAsB,SAEvEC,eAAgB,YAI5B3S,SACIrW,KAAM,MACNlD,OACQkD,KAAM,UACNwN,EAAGzN,EAAGwoB,QAAUR,IAGhB/nB,KAAM,QACNwN,EAAGzN,EAAGyoB,MAAQT,IAGd/nB,KAAM,MACNwN,EAAGzN,EAAG0oB,IAAMV,IAGZ/nB,KAAM,UACNwN,EAAGzN,EAAG2oB,QAAUX,IAGhB/nB,KAAM,OACNwN,EAAGzN,EAAGuoB,KAAOP,SAO7BkB,EAAuB,WAEvB,GAAIC,IACAC,KAAM,SACNC,UAAW,YACXC,SAAU,aACVlL,QAAS,WACT6B,YAAa,WACbsJ,UAAW,YACXpuB,SAAU,WACVquB,QAAS,UAITC,KACAxQ,KACAgB,GAAQ,CACZ,KAAK,GAAI1S,KAAK4hB,GAAU,CACpB,GAAIpsB,KACJ,KAAK,GAAIM,KAAK2V,GAAO/X,MACZ+X,EAAO/X,MAAMoC,GAAG0T,OAAUiC,EAAO/X,MAAMoC,GAAGuqB,cACvC3N,GACAwP,EAAexsB,KAAK+V,EAAO/X,MAAMoC,GAAG6C,YACpC8S,EAAO/X,MAAMoC,GAAGsC,SAAS+pB,MAAMniB,GAC/BxK,EAAKE,KAAK+V,EAAO/X,MAAMoC,GAAGsC,SAAS+pB,MAAMniB,IAEzCxK,EAAKE,KAAK,GAGL,QAALsK,GAAeyL,EAAO/X,MAAMoC,GAAGyG,SAC/B4jB,EAAarqB,GAAGsC,SAAWqT,EAAO/X,MAAMoC,GAAGsC,SAAS+pB,MAAMN,MAEtEnQ,GAAWhc,MACPgD,KAAMkpB,EAAS5hB,GACfxK,KAAMA,IAEVkd,GAAQ,EAGZlE,WAAWC,MAAM,2BACbA,OACIY,KAAM,MACNX,OAAQ,QAEZC,OACIvP,KAAM,uBAEV6S,OACIQ,WAAYyP,EACZvT,OACIvP,KAAM,OAGd8S,OACIkQ,IAAK,EACLzT,OACIvP,KAAM,UACNijB,MAAO,QAEXC,QACIC,SAAU,YAGlBtS,SACIuS,YAAa,YAEjB1T,aACI2T,KACIjT,YACIX,SAAS,KAIrBsD,QACIuQ,OAAQ,WACRL,MAAO,QACPM,cAAe,MACfhJ,EAAG,IACHzT,EAAG,GACH0c,UAAU,EACVxQ,YAAa,EACbyQ,gBAAiBrU,WAAWsU,eAAe3Q,OAAO0Q,iBAAmB,UACrEE,QAAQ,GAEZnU,SACIC,SAAS,GAEbE,OAAQ2C,KAIZsR,EAAoB,WACpB,GAAIC,MACAC,IACJ,KAAK,GAAIptB,KAAKqqB,GACV8C,EAAYvtB,MAAMyqB,EAAarqB,GAAGwG,MAAM6jB,EAAarqB,GAAGsC,WACxD8qB,EAAYxtB,MAAMyqB,EAAarqB,GAAGwG,MAAM6jB,EAAarqB,GAAG6c,YAG5DnE,YAAWC,MAAM,0BACbA,OACIY,KAAM,UACN8T,SAAU,MAEdxU,OACIvP,KAAM,6BAEV6S,OACItD,OACIE,SAAS,EACTzP,KAAM,gBAEVgkB,aAAa,EACbC,WAAW,EACXC,eAAe,GAEnBpR,OACIvD,OACIvP,KAAM,YAGdwP,SACIC,SAAS,GAEbC,aACIyU,SACIC,QACIC,OAAQ,EACRC,QACIC,OACI9U,SAAS,EACT+U,UAAW,sBAIvBF,QACIC,OACIH,QACI3U,SAAS,KAIrBoB,SACIC,aAAc,2BACdC,YAAa,oCAIzBpB,SACIrW,KAAM,UACN0E,MAAO,wBACP5H,KAAMytB,MAIdzU,WAAWC,MAAM,0BACbA,OACIY,KAAM,UACN8T,SAAU,MAEdxU,OACIvP,KAAM,8BAEV6S,OACItD,OACIE,SAAS,EACTzP,KAAM,gBAEVgkB,aAAa,EACbC,WAAW,EACXC,eAAe,GAEnBpR,OACIvD,OACIvP,KAAM,eAGdwP,SACIC,SAAS,GAEbC,aACIyU,SACIC,QACIC,OAAQ,EACRC,QACIC,OACI9U,SAAS,EACT+U,UAAW,sBAIvBF,QACIC,OACIH,QACI3U,SAAS,KAIrBoB,SACIC,aAAc,2BACdC,YAAa,8BAIzBpB,SACIrW,KAAM,UACN0E,MAAO,wBACP5H,KAAM0tB,OAKdW,EAAqB,WACrB,GAAIC,IAAa,EAAE,EAAE,EAAE,GACnBC,EAAU,CACd,KAAI,GAAIjuB,KAAK2V,GAAO/X,MAChB,GAAG+X,EAAO/X,MAAMoC,GAAG8W,UAAYnB,EAAO/X,MAAMoC,GAAGuqB,aACxC5U,EAAO/X,MAAMoC,GAAG8W,QAAQnJ,QAAQ,CAC/B,GAAIO,GAAS1Q,UAAU8P,QAAQtH,KAAK2P,EAAO/X,MAAMoC,GAAG8W,QAAQnJ,QAC5DsgB,IACA,KAAI,GAAI/jB,GAAI,EAAO,EAAJA,EAAOA,IAClB8jB,EAAU9jB,IAAMgE,EAAOhE,GAGvC,IAAI,GAAIA,GAAI,EAAO,EAAJA,EAAOA,IAClB8jB,EAAU9jB,GAAKpE,KAAK0kB,MAAMwD,EAAU9jB,GAAG+jB,EAAQ,KAAK,GAGxD,IAAIC,IAAa,EAAE,EAAE,EAAE,EACvB,KAAI,GAAIluB,KAAK2V,GAAO/X,MAChB,GAAG+X,EAAO/X,MAAMoC,GAAG8W,UAAYnB,EAAO/X,MAAMoC,GAAGuqB,aACxC5U,EAAO/X,MAAMoC,GAAG8W,QAAQnJ,QAAQ,CAC/B,GAAIO,GAAS1Q,UAAU8P,QAAQtH,KAAK2P,EAAO/X,MAAMoC,GAAG8W,QAAQnJ,QAC5DsgB,IACA,KAAI,GAAI/jB,GAAI,EAAO,EAAJA,EAAOA,IAClBgkB,EAAUhkB,KAAOgE,EAAOhE,GAAG8jB,EAAU9jB,KAAKgE,EAAOhE,GAAG8jB,EAAU9jB,IAI9E,IAAI,GAAIA,GAAI,EAAO,EAAJA,EAAOA,IAClBgkB,EAAUhkB,GAAKpE,KAAK0kB,MAAsC,IAAhC1kB,KAAKqoB,KAAKD,EAAUhkB,GAAG+jB,IAAc,GAEnE,KAAK,GAAIjuB,GAAI,EAAO,EAAJA,EAAOA,IAAK,CACxB,GAAI6K,GAAO0H,SAASM,eAAe,SAAW7S,GAC1CuV,EAAQ,EAAEzP,KAAK0L,IAAIwc,EAAUhuB,IAAM,GAAK,EAC5C6K,GAAK2K,MAAMD,MAAQA,EAAQ,IACvByY,EAAUhuB,GAAK,GACf6K,EAAK2K,MAAMC,WAAa,GAAKF,EAAQ,IACrChD,SAASM,eAAe,QAAU7S,GAAG0V,UAAYlY,UAAU8P,QAAQI,YAAY1N,GAAG,KAElF6K,EAAK2K,MAAMC,WAAa,MACxBlD,SAASM,eAAe,QAAU7S,GAAG0V,UAAYlY,UAAU8P,QAAQI,YAAY1N,GAAG,IAEtF6K,EAAK6K,UAAY5P,KAAK0L,IAAIwc,EAAUhuB,IAAI,UAAUkuB,EAAUluB,IAIpExC,WAAUE,GAAG0B,IAAI,gBACZJ,KAAK,SAAUmrB,GACZxU,EAAO/X,MAAQusB,EACf3sB,UAAUE,GAAG0B,IAAI,iBACZJ,KAAK,SAAUorB,GAGZ,IAAK,GAAIpqB,KAAKoqB,GACV,IAAK,GAAIlgB,KAAKkgB,GAAmBpqB,GAC7B2V,EAAO/X,MAAMoC,GAAGkK,GAAKkgB,EAAmBpqB,GAAGkK,EAEnD1M,WAAUE,GAAG0B,IAAI,cAAc6P,EAAWtL,KAAKuE,QAC1ClJ,KAAK,SAAUme,GACZxH,EAAO4E,WAAa4C,EACpB3f,UAAUE,GAAG0B,IAAI,UAAU6P,EAAWtL,KAAKuE,QACtClJ,KAAK,SAAUoe,GACZzH,EAAOuD,OAASkE,EAChBkN,IACA5N,IACA+N,IACAoB,IACAqB,IACAa,IACA9e,EAAWE,SAAU,EACrBwG,EAAO7B,WAVftW,SAYW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAvBvBtW,SA0BW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aA1CvBtW,SA6CW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,aAxDvBtW,SA2DW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,MAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B;ACxoBnB1F,IAAIM,WAAW,cAAe,SAAS,aAAa,YAAa,SAAUiH,EAAO1G,EAAWC,GAEzF,IAAID,EAAWG,WAEX,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnB6I,EAAOyY,YAAc,WACjB,GAAGzY,EAAOyB,QAEN,WADAiX,GAAa7lB,MAIjBmN,GAAO2Y,WACP3Y,EAAO4Y,WACP,KAAI,GAAIvuB,KAAK2V,GAAO/X,MACZ+X,EAAO/X,MAAMoC,GAAG0T,QACbiC,EAAO/X,MAAMoC,GAAG6c,YACZlH,EAAO/X,MAAMoC,GAAG6c,WAAWlH,EAAO6Y,kBACjC7Y,EAAO4Y,SAAS3uB,KAAKI,GAIzB2V,EAAO2Y,QAAQ1uB,KAAKI,GAIhC2V,GAAO7B,UAGX6B,EAAO8Y,UAAY,SAAStP,GACxBxJ,EAAOyB,SAAU,EACjBzB,EAAO4Y,SAAS3uB,KAAK+V,EAAO2Y,QAAQnP,IACpCxJ,EAAO2Y,QAAQrO,OAAOd,EAAI,IAG9BxJ,EAAO+Y,SAAW,SAASvP,GACvBxJ,EAAOyB,SAAU,EACjBzB,EAAO2Y,QAAQ1uB,KAAK+V,EAAO4Y,SAASpP,IACpCxJ,EAAO4Y,SAAStO,OAAOd,EAAI,IAG/BxJ,EAAOgZ,SAAW,WACd,GAAIC,KACJ,KAAI,GAAI5uB,KAAK2V,GAAO4Y,SAAS,CACzB,GAAIvnB,IACAyW,UAAWxO,EAAWtL,KAAKvC,IAC3Bsc,UAAWlb,KAAKC,MAEpBmsB,GAAQ,iBAAiBjZ,EAAO4Y,SAASvuB,GAAG,eAAe2V,EAAO6Y,kBAAoBxnB,EAElF2O,EAAO/X,MAAM+X,EAAO4Y,SAASvuB,IAAI6c,aACjClH,EAAO/X,MAAM+X,EAAO4Y,SAASvuB,IAAI6c,eACrClH,EAAO/X,MAAM+X,EAAO4Y,SAASvuB,IAAI6c,WAAWlH,EAAO6Y,kBAAoBxnB,EAE3E,IAAI,GAAIhH,KAAK2V,GAAO2Y,QAChBM,EAAQ,iBAAiBjZ,EAAO2Y,QAAQtuB,GAAG,eAAe2V,EAAO6Y,kBAAoB,KACjF7Y,EAAO/X,MAAM+X,EAAO2Y,QAAQtuB,IAAI6c,aAChClH,EAAO/X,MAAM+X,EAAO2Y,QAAQtuB,IAAI6c,eACpClH,EAAO/X,MAAM+X,EAAO2Y,QAAQtuB,IAAI6c,WAAWlH,EAAO6Y,kBAAoB,IAI1EhxB,WAAUE,GAAGiC,OAAOivB,GACnB5vB,KAAK,SAASC,GACXiR,EAAEgD,OAAOC,KAAM,qBAAqBC,QAAS,kCAAkCC,cAAe,OAC9FpE,EAAWE,SAAU,EACrBwG,EAAOyB,SAAU,EACjBzB,EAAO7B,SACPua,EAAavhB,UANjBtP,SAQO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,yCAAyCC,QAAS,cAAcC,cAAe,SAOtG7V,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,cAAjD5D,SAAqE,SAASoG,GAAKvC,QAAQC,IAAIsC,IAE/F,IAAIyqB,GAAene,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBAAmBiP,kBAAkB,GAC7FvP,UAASM,eAAe,gBAAgBG,iBAAiB,SAAS,WAC9D2C,EAAO6Y,iBAAmBzgB,KAAK/G,MAC/B2O,EAAOyY,gBAGX5wB,UAAUE,GAAG4B,UAAU,UAAU2P,EAAWtL,KAAKuE,OAAO,SACvDlJ,KAAK,SAASoe,GACXzH,EAAOuD,SAEP,IAAI2V,GAAQrsB,KAAKC,MACbqsB,EAAU,EACd1R,GAAYtF,QAAQ,SAASC,GACzBxY,IAAMwY,EAAcgX,KAAKvwB,KAAKwwB,QAAQ,GACtCrZ,EAAOuD,OAAO3Z,KAAOwY,EAAc7Y,MAChCyW,EAAOuD,OAAO3Z,KAAK0d,MAAQ4R,IAC1BC,EAAUvvB,OAGlBoW,EAAO7B,SACPvB,SAASM,eAAe,gBAAgB7L,MAAQ8nB,EAChDnZ,EAAO6Y,iBAAmBM,EAC1B5e,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAC5C7W,UAAUE,GAAG0B,IAAI,iBAChBJ,KAAK,SAASorB,GACXzU,EAAO/X,QACP,KAAI,GAAIoC,KAAKoqB,GACNA,EAAmBpqB,GAAGkI,QAAU+G,EAAWtL,KAAKuE,SAC/CyN,EAAO/X,MAAMoC,GAAKoqB,EAAmBpqB,GAC7CxC,WAAUE,GAAG0B,IAAI,gBAChBJ,KAAK,SAASmrB,GACX,IAAI,GAAInqB,KAAKmqB,GACNxU,EAAO/X,MAAMoC,KACZ2V,EAAO/X,MAAMoC,GAAGN,KAAOyqB,EAAkBnqB,GACjD2V,GAAOyY,cACPnf,EAAWE,SAAU,EACrBwG,EAAOyB,SAAU,EACjBzB,EAAO7B,WARXtW,SAUO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,UAlB9G7V,SAqBO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,UAxC9G7V,SA2CO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe;ACxI9GjF,IAAIM,WAAW,cAAe,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,GAEjF,IAAKA,EAAWG,WAEZ,WADAF,WAAU1Q,KAAK,SAInByQ,GAAWmD,QAAQtF,QACnBmC,EAAWE,SAAU,EAErBe,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,iBAAkBiP,kBAAkB,GAEzE,IAAIrJ,GAAiB,SAAU/Y,GAC3BgZ,WAAWC,MAAM,sBACbA,OACIC,OAAQ,QAEZC,OACIvP,KAAM,gCAEV2lB,UACI3lB,KAAMqM,EAAO4E,WAAWrS,OAAOtF,MAEnCkW,SACIC,SAAS,GAEbC,aACIC,QACIC,QACIC,MAAO,SAAUC,GACb/X,QAAQC,IAAI8X,EAAME,MAAM/T,KAAKC,QAK7CyT,SACIM,KAAM,WACN7Z,KAAMA,EACN8Z,kBAAkB,EAClBC,OAAQ,UACRC,YACI/I,OAAQ,eACRhC,QACIgL,SAAU,iBACVC,SAAU,IACV5S,MAAO,KAGf6S,SACQC,MAAO,EACPC,iBAAiB,EACjBL,YACI/K,QACIgL,SAAU,iBACVC,SAAU,IACV5S,MAAO,OAKf8S,MAAO,EACPE,WAAY,IAGZF,MAAO,EACPG,cAAc,IAEdH,MAAO,EACPI,gBACI3a,IAAK,aACL0I,IAAK,MAGT6R,MAAO,EACPI,gBACI3a,IAAK,aACL0I,GAAI,QAMpBkS,SACIC,aAAc,GACdC,YAAa,wEAKrBlT,EAAO,KAEP+nB,EAAa,SAAUxvB,GACV,OAATyH,IACAA,EAAKgoB,UACLhoB,EAAO,KAGX,IAAIioB,GAAY7c,SAASM,eAAe,kBACpCrF,GACAof,QACIyC,cACIC,UAAW,OAKvBnoB,GAAO,GAAIooB,KAAIC,QAAQJ,EAAW1vB,EAAM8N,GAExCrG,EAAK9H,KAAK,eAAgB,WACtB+vB,EAAU5Z,MAAMoD,OAAS,SAG7BzR,EAAKpI,GAAG,SAAU,SAAU6M,GACxB,GAAIrG,GAAO/H,UAAUK,MAAMyH,WAAWqQ,EAAO4E,WAAW3O,EAAOxE,MAAM,IACjEP,EAAMrJ,UAAUK,MAAM6I,SAASnB,EACnCkT,GAAe5R,KAIvBrJ,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,cAAlD5D,SAAsE,SAAUoG,GAC5EvC,QAAQC,IAAIsC,KAGhB+R,EAAO8Z,aAAe,WAClB,GAAItlB,GAAIoI,SAASM,eAAe,kBAAkB7L,KAC/CmD,IACO,IAAHA,GACCulB,EAAUvlB,GAGtB,IAAIulB,GAAY,SAASC,GACrB1gB,EAAWtL,KAAKuE,OAASynB,EACzBnyB,UAAUE,GAAG0B,IAAI,cAAgB6P,EAAWtL,KAAKuE,QAChDlJ,KAAK,SAAUU,GACZiW,EAAO4E,WAAa7a,CAEpB,IAAImH,GAAMrJ,UAAUK,MAAM6I,SAASiP,EAAO4E,YACtCqV,EAAKpyB,UAAUK,MAAMoJ,QAAQ0O,EAAO4E,WAExC9B,GAAe5R,GACfqoB,EAAWU,GAEXpyB,UAAUE,GAAG0B,IAAI,oBAChBJ,KAAK,SAAS6wB,GACXla,EAAOka,QAAUA,EACjB3iB,WAAW,WACPgD,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,eAC9C,KACFpF,EAAWE,SAAU,EACrBF,EAAW6E,WAPftW,SASO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,UArB9G7V,SAwBO,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,QAM3Bqc,GAAUzgB,EAAWtL,KAAKuE;ACvK9BkG,IAAIM,WAAW,UAAW,SAAS,aAAa,YAAY,sBAAuB,SAAUiH,EAAO1G,EAAWC,EAAUyH,GAErH,IAAI1H,EAAWG,WAEX,WADAF,GAAU1Q,KAAK,SAInByQ,GAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnB6I,EAAOma,OAAS,SAASvwB,GAErB,GAAIwwB,GAAcxd,SAASyd,cAAc,MACzCD,GAAYvqB,GAAK,QACjB+M,SAASM,eAAe,mBAAmB6C,UAAY,GACvDnD,SAASM,eAAe,mBAAmBod,YAAYF,GACvDG,EAAQ,GAAIC,OAAM,UACdC,SACIC,UACK,OAAQ,SAAU,YAAa,YAC7B/vB,MAAS,SAAS,EAAO,QAAS,YAClCoe,QAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,OAC7B4R,KAAQ,YAAcA,KAAQ,aAC9BC,OAAU,QAAUA,OAAU,YAC9BC,OAAU,OAASA,OAAU,SAC7BlB,UAAa,UACbhoB,WAAiBmpB,kBACjBhpB,YACA8kB,YACF,OAAQ,UACR,UAELmE,gBAEJhF,MAAO,SAEDnU,QAAPhY,GAICoW,EAAOgb,SAAW1hB,EAAW2C,MAAM+D,EAAOiC,KAAKrY,IAC/C2wB,EAAMd,UAAUwB,WAAWlb,UAAYC,EAAOgb,SAAS3Y,UAEvDkY,EAAMd,UAAUwB,WAAWlb,UAAY,GACvCC,EAAOgb,UACH9X,MAAO,GACPb,QAAS,GACT6Y,MAAOlb,EAAOiC,KAAKlO,OACnBgU,UAAW,EACXxF,OAAQjJ,EAAWtL,KAAKvC,MAKpC,IAAI0vB,GAAkB,WAClB,GAAIC,KAASA,GAAG9hB,EAAWtL,KAAKuE,QAAU1F,KAAKC,MAC/CjF,UAAUE,GAAGiC,OAAOoxB,EAAG,yBACtB/xB,KAAK,SAAS6B,GACXQ,QAAQC,IAAI,6BACZD,QAAQC,IAAIT,KAHhBrD,SAKO,SAASoG,GACZvC,QAAQC,IAAIsC,KAIpB+R,GAAOqb,eAAiB,WACpB/hB,EAAWE,SAAU,EACrB3R,UAAUE,GAAG+B,IAAI,KAAK,QAAQwP,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOgb,SAASpxB,KACxEP,KAAK,SAASC,GACX0W,EAAOiC,KAAKqI,OAAOtK,EAAOgb,SAASE,MAAM,EAEzC,IAAIjC,KACJ,KAAI5uB,IAAK2V,GAAOiC,KAAK,CACjBjC,EAAOiC,KAAK5X,GAAG6wB,MAAQjW,SAAS5a,EAChC,IAAI4uB,KACJA,GAAQ,QAAQ3f,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOiC,KAAK5X,GAAGT,IAAI,UAAYqb,SAAS5a,GAEvFxC,UAAUE,GAAGiC,OAAOivB,GACnB5vB,KAAK,SAASC,GACXiR,EAAEgD,OAAOC,KAAM,SAASC,QAAS,yBAAyBC,cAAe,MACzEpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAJXtW,SAMO,SAASoG,GACZqL,EAAWE,SAAU,EACrB9N,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,UAnB9G7V,SAuBO,SAASoG,GACZqL,EAAWE,SAAU,EACrB9N,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,QAE1Gyd,IACAzC,EAAavhB,SAGjB6I,EAAOsb,aAAe,SAASC,EAAG3xB,GAC9B,GAAG2xB,GACC,GAAG3xB,EAAM,EAAE,CACP8B,QAAQC,IAAIqU,EAAOiC,KAAKrY,GAAKA,KAC7B8B,QAAQC,IAAIqU,EAAOiC,KAAKrY,EAAI,GAAGA,KAC/B0P,EAAWE,SAAU,CACrB,IAAIyf,KACJA,GAAQ,QAAQ3f,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOiC,KAAKrY,GAAKA,IAAI,UAAYoW,EAAOiC,KAAKrY,GAAKsxB,MAAM,EACnGjC,EAAQ,QAAQ3f,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOiC,KAAKrY,EAAI,GAAGA,IAAI,UAAYoW,EAAOiC,KAAKrY,GAAKsxB,MAC/FrzB,UAAUE,GAAGiC,OAAOivB,GACnB5vB,KAAK,SAASC,GAEX0W,EAAOiC,KAAKrY,GAAKsxB,MAAQlb,EAAOiC,KAAKrY,GAAKsxB,MAAQ,EAClDlb,EAAOiC,KAAKrY,EAAI,GAAGsxB,MAAQlb,EAAOiC,KAAKrY,GAAKsxB,KAC5C,IAAIM,GAAOxb,EAAOiC,KAAKrY,EACvBoW,GAAOiC,KAAKrY,GAAOoW,EAAOiC,KAAKrY,EAAI,GACnCoW,EAAOiC,KAAKrY,EAAI,GAAK4xB,EACrBjhB,EAAEgD,OAAOC,KAAM,oBAAoBC,QAAS,yBAAyBC,cAAe,MACpFpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAVXtW,SAYO,SAASoG,GACZqL,EAAWE,SAAU,EACrB9N,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,aAI9G,IAAG9T,EAAMoW,EAAOiC,KAAKlO,OAAS,EAAE,CAC5BrI,QAAQC,IAAIqU,EAAOiC,KAAKrY,GAAKA,KAC7B8B,QAAQC,IAAIqU,EAAOiC,KAAKrY,EAAI,GAAGA,KAC/B0P,EAAWE,SAAU,CACrB,IAAIyf,KACJA,GAAQ,QAAQ3f,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOiC,KAAKrY,GAAKA,IAAI,UAAYoW,EAAOiC,KAAKrY,GAAKsxB,MAAM,EACnGjC,EAAQ,QAAQ3f,EAAWtL,KAAKuE,OAAO,IAAIyN,EAAOiC,KAAKrY,EAAI,GAAGA,IAAI,UAAYoW,EAAOiC,KAAKrY,GAAKsxB,MAC/FrzB,UAAUE,GAAGiC,OAAOivB,GAAS5vB,KAAK,SAASC,GAEvC0W,EAAOiC,KAAKrY,GAAKsxB,MAAQlb,EAAOiC,KAAKrY,GAAKsxB,MAAQ,EAClDlb,EAAOiC,KAAKrY,EAAI,GAAGsxB,MAAQlb,EAAOiC,KAAKrY,GAAKsxB,KAC5C,IAAIM,GAAOxb,EAAOiC,KAAKrY,EACvBoW,GAAOiC,KAAKrY,GAAOoW,EAAOiC,KAAKrY,EAAI,GACnCoW,EAAOiC,KAAKrY,EAAI,GAAK4xB,EACrBjhB,EAAEgD,OAAOC,KAAM,oBAAoBC,QAAS,yBAAyBC,cAAe,MACpFpE,EAAWE,SAAU,EACrBwG,EAAO7B,WATXtW,SAWO,SAASoG,GACZqL,EAAWE,SAAU,EACrB9N,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,QAIlHyd,KAGJnb,EAAOyb,aAAe,WAElB,GADAniB,EAAWE,SAAU,EAClBwG,EAAO0b,aAAa,CACnB,GAAI/qB,GAAOiM,SAASM,eAAe,iBAAiB7L,MAChD8J,EAAOyB,SAASM,eAAe,iBAAiB7L,MAChD0W,EAA4D,IAAhDpO,OAAOwB,EAAK,IAAIxK,EAAK,oBAAoByY,MACzD,KAAGrB,EAKC,MAFAxN,GAAEgD,OAAOC,KAAM,0CAA0CC,QAAS,cAAcC,cAAe,WAC/FpE,EAAWE,SAAU,EAHrBwG,GAAOgb,SAASjT,UAAYA,MAOhC/H,GAAOgb,SAASjT,UAAYlb,KAAKC,KAGrC,IADAkT,EAAOgb,SAAS3Y,QAAUkY,EAAMd,UAAUwB,WAAWlb,UAAUvN,QAAQ,GAAImpB,QAAO,YAAa,KAAM,oCAClG3b,EAAOgb,SAASpxB,IAAI,CAInB,GAAIA,GAAMoW,EAAOgb,SAASpxB,GAC1BoW,GAAOgb,SAASpxB,IAAM,KACtB/B,UAAUE,GAAGiC,OAAOgW,EAAOgb,SAAS,QAAQ1hB,EAAWtL,KAAKuE,OAAO,IAAI3I,GACtEP,KAAK,SAASC,GACX0W,EAAOgb,SAASpxB,IAAMA,EACtBoW,EAAOiC,KAAKrY,GAAO0P,EAAW2C,MAAM+D,EAAOgb,UAC3CzgB,EAAEgD,OAAOC,KAAM,yBAAyBC,QAAS,yBAAyBC,cAAe,OACzFuK,EAAU9Q,QACVmC,EAAWE,SAAU,EACrBwG,EAAO7B,WAPXtW,SASO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,uCAAuCC,QAAS,cAAcC,cAAe,MAC5FpE,EAAWE,SAAU,EACrBwG,EAAO7B,eAGX7E,GAAWE,SAAU,EACrB3R,UAAUE,GAAGkC,KAAK+V,EAAOgb,SAAS,QAAQ1hB,EAAWtL,KAAKuE,QACzDlJ,KAAK,SAASC,GACX0W,EAAOgb,SAASpxB,IAAMN,EAASM,IAC/BoW,EAAOiC,KAAKhY,KAAK+V,EAAOgb,UACxB/S,EAAU9Q,QACVmC,EAAWE,SAAU,EACrBwG,EAAO7B,WANXtW,SAQO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,uCAAuCC,QAAS,cAAcC,cAAe,MAC5FpE,EAAWE,SAAU,EACrBwG,EAAO7B,UAGfgd,MAMJ5gB,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eAAgBiP,kBAAkB,GACvE,IAAIuM,GAAene,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,kBAAmBiP,kBAAkB,EAAO9K,aAAa,IAC7G4G,EAAY1N,EAAE0C,MAAMN,KAAKC,SAASM,eAAe,eAAgBiP,kBAAkB,EAAO9K,aAAa,GAC3GrB,GAAOgb,YACPhb,EAAO0b,cAAe,CACtB,IAAInB,GAEAvY,EAAe,WACfhC,EAAOiC,OACP,IAAIC,KACJra,WAAUE,GAAG4B,UAAU,QAAQ2P,EAAWtL,KAAKuE,OAAO,SACrDlJ,KAAK,SAASC,GACXA,EAAS6Y,QAAQ,SAASC,GACtB,GAAI1X,GAAQ0X,EAAc7Y,KAC1BmB,GAAM2X,QAAUxa,UAAUK,MAAM8L,YAAYtJ,EAAM2X,SAClD3X,EAAMd,IAAMwY,EAAcxY,IACU,IAAjCsY,EAAQI,QAAQ5X,EAAM6X,SACrBL,EAAQjY,KAAKS,EAAM6X,QACvBvC,EAAOiC,KAAKhY,KAAKS,IAErB,IAAI+X,GAAQP,EAAQnO,MAEpB,IADAiM,EAAO/X,SACJia,EAAQnO,OAAS,EAChB,IAAI,GAAI1J,KAAK6X,GACTra,UAAUE,GAAG0B,IAAI,gBAAgByY,EAAQ7X,IACxChB,KAAK,SAASqZ,GACX1C,EAAO/X,MAAMia,EAAQ7X,IAAMqY,EAC3BD,IACY,GAATA,IACCE,GACIV,KAAMjC,EAAOiC,KACbC,QAASlC,EAAO/X,MAChB2a,YAAa/V,KAAKC,OAEtBkU,EAAoBlX,IAAI,YAAYwP,EAAWtL,KAAKuE,OAAOoQ,GAC3DrJ,EAAWE,SAAU,EACrBF,EAAW6E,YAZnBtW,SAeO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,YAI9GpE,GAAWE,SAAU,EACrBF,EAAW6E,WApCnBtW,SAuCO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,QAK9G7V,WAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAI,UAAjD5D,SAAiE,SAASoG,GAAKvC,QAAQC,IAAIsC,IAE3F,IAAI0U,GAAW3B,EAAoBvX,IAAI,YAAY6P,EAAWtL,KAAKuE,OAChEoQ,IACC3C,EAAOiC,KAAOU,EAASV,KACvBjC,EAAO/X,MAAQ0a,EAAST,QACxBra,UAAUE,GAAG0B,IAAI,yBAAyB6P,EAAWtL,KAAKuE,QACzDlJ,KAAK,SAAS8xB,GACRxY,EAASC,YAAcuY,EACtBnZ,KAEA1I,EAAWE,SAAU,EACrBF,EAAW6E,YANnBtW,SASO,SAASoG,GACZvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OAAOC,KAAM,iDAAiDC,QAAS,cAAcC,cAAe,SAG1GsE;ACrSRvJ,IAAIM,WAAW,WAAY,SAAU,aAAc,YAAa,SAAUiH,EAAQ1G,EAAYC,GAE1F,MAAKD,GAAWG,YAKhBmD,SAASM,eAAe,YAAYG,iBAAiB,SACjD,WACI/D,EAAWE,SAAU,EACrBwG,EAAO7B,QACP,IAAI3T,GAAOoS,SAASM,eAAe,YAAYlS,MAAM,GACjD4wB,EAAS,GAAIC,WACjBD,GAAOE,UAAY,WACf9b,EAAO+b,UAAYH,EAAOtvB,OAC1B0T,EAAOgc,WAAaxxB,EACpBwV,EAAOic,eAAgB,EACvB3iB,EAAWE,SAAU,EACrBwG,EAAO7B,UAEP3T,GAAMoxB,EAAOM,cAAc1xB,KAGvCwV,EAAOmc,UAAY,WACfvf,SAASM,eAAe,YAAYsG,SAGxCxD,EAAOoc,SAAW,WACd9iB,EAAWE,SAAU,CAGrB,IAAI6iB,IACApvB,KAAM2P,SAASM,eAAe,aAAa7L,MAC3CnE,WAAY0P,SAASM,eAAe,mBAAmB7L,MACvDjE,GAAIwP,SAASM,eAAe,WAAW7L,MACvClE,OAAQyP,SAASM,eAAe,eAAe7L,MAC/Cwb,YAIJ,IAAoB,IAAhBwP,EAAQpvB,MAAoC,IAAtBovB,EAAQnvB,YAAkC,IAAdmvB,EAAQjvB,IAA8B,IAAlBivB,EAAQlvB,OAQ9E,MAPAzB,SAAQC,IAAI,kCACZ4O,EAAEgD,OACEC,KAAM,4BACNC,QAAS,cACTC,cAAe,YAEnBpE,EAAWE,SAAU,EAKzB,IAAI8iB,GAAa,SAAUrvB,GACvB,IAAK,GAAI5C,KAAK2V,GAAO/X,MACjB,GAAI+X,EAAO/X,MAAMoC,GAAG4C,KAAO,IAAM+S,EAAO/X,MAAMoC,GAAG6C,YAAcD,EAC3D,MAAO5C,GAInB,IAAiD,IAA7CuS,SAASM,eAAe,YAAY7L,MAAa,CACjD,GAAIkrB,GAAUD,EAAW1f,SAASM,eAAe,YAAY7L,MAC7D,KAAIkrB,EASA,MANAhiB,GAAEgD,OACEC,KAAM,8BACNC,QAAS,cACTC,cAAe,YAEnBpE,EAAWE,SAAU,EAPrB6iB,GAAQxP,SAAS5iB,KAAKsyB,GAW9B,GAAiD,IAA7C3f,SAASM,eAAe,YAAY7L,MAAa,CACjD,GAAIkrB,GAAUD,EAAW1f,SAASM,eAAe,YAAY7L,MAC7D,KAAIkrB,EASA,MANAhiB,GAAEgD,OACEC,KAAM,8BACNC,QAAS,cACTC,cAAe,YAEnBpE,EAAWE,SAAU,EAPrB6iB,GAAQxP,SAAS5iB,KAAKsyB,GAW9B,GAA+B,GAA3BF,EAAQxP,SAAS9Y,QACbsoB,EAAQxP,SAAS,IAAMwP,EAAQxP,SAAS,GAOxC,MANAtS,GAAEgD,OACEC,KAAM,gCACNC,QAAS,cACTC,cAAe,YAEnBpE,EAAWE,SAAU,EAO7B,IAAIgjB,GAAgB,WAChB30B,UAAUE,GAAGiC,OAAOqyB,EAAS,gBAAkB/iB,EAAWtL,KAAKvC,KAC1DpC,KAAK,SAAU6B,GACZqP,EAAEgD,OACEC,KAAM,sBACNC,QAAS,yBACTC,cAAe,OAGnBpE,EAAWtL,KAAKf,KAAOovB,EAAQpvB,KAC/BqM,EAAWtL,KAAKd,WAAamvB,EAAQnvB,WACrCoM,EAAWtL,KAAKZ,GAAKivB,EAAQjvB,GAC7BkM,EAAWtL,KAAKb,OAASkvB,EAAQlvB,OACjCmM,EAAWtL,KAAK6e,SAAWwP,EAAQxP,SACnCvT,EAAWE,SAAU,EACrBwG,EAAOyc,MAAO,EACdzc,EAAO7B,WAfftW,SAiBW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,8CACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAInB,IAAI6B,EAAOic,cAAe,CACtB,GAAIS,GAAgB,WAChB,GAAIjyB,GAAW5C,UAAUK,MAAMuL,iBAAiB,IAAM,IAAMuM,EAAOgc,WAAW/uB,KAAK8d,MAAM,KAAK,EAC9FljB,WAAUG,QAAQuC,IAAIyV,EAAOgc,WAAY,SAAUvxB,GAC9CpB,KAAK,SAAU6B,GAEZmxB,EAAQhvB,OAASnC,EAAIJ,IACrBuxB,EAAQM,eAAiBlyB,EAEzB6O,EAAWtL,KAAKX,OAASnC,EAAIJ,IAC7BwO,EAAWtL,KAAK2uB,eAAiBlyB,EACjC+xB,MARR30B,SAUW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBpE,EAAWE,SAAU,EACrBwG,EAAO7B,WAIf7E,GAAWtL,KAAK2uB,eAChB90B,UAAUG,QAAVH,UAAyByR,EAAWtL,KAAK2uB,eAAgB,UACpDtzB,KAAK,SAAU6B,GACZwxB,MAFR70B,SAIW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,wCACNC,QAAS,cACTC,cAAe,OAEnBgf,MAGRA,QAGJF,MAMRljB,EAAWE,SAAU,EACrBF,EAAWmD,QAAQtF,QAEnB6I,EAAOyc,MAAO,EACdzc,EAAOic,eAAgB,EACvBjc,EAAO4c,QAAUtjB,EAAWtL,KAAKgQ,SAAW,EAAIrE,OAAOL,EAAWtL,KAAKgQ,UAAUhD,OAAO,oBAAsB,oBAC9GgF,EAAO+b,UAAYziB,EAAWtL,KAAKX,OAEnCkN,EAAEsiB,QAAQlgB,KAAKC,SAAS8B,iBAAiB,mBAEzC7W,UAAUK,MAAM+L,aAAaqF,EAAWtL,KAAKvC,IAAK,WAAlD5D,SAAmE,SAAUoG,GACzEvC,QAAQC,IAAIsC,SAGhBpG,WAAUE,GAAG0B,IAAI,gBACZJ,KAAK,SAAUmrB,GACZxU,EAAO/X,MAAQusB,CAEf,IAAIsI,KACJ,KAAK,GAAIzyB,KAAK2V,GAAO/X,MACjB60B,EAAS9c,EAAO/X,MAAMoC,GAAG4C,KAAO,IAAM+S,EAAO/X,MAAMoC,GAAG6C,YAAc8S,EAAO/X,MAAMoC,GAAGgD,MACxFkN,GAAE8R,aAAa1P,KAAKC,SAAS8B,iBAAiB,kBAC1C3U,KAAM+yB,IAIVlgB,SAASM,eAAe,aAAa7L,MAAQiI,EAAWtL,KAAKf,KAC7D2P,SAASM,eAAe,mBAAmB7L,MAAQiI,EAAWtL,KAAKd,WACnE0P,SAASM,eAAe,WAAW7L,MAAQiI,EAAWtL,KAAKZ,GAC3DwP,SAASM,eAAe,eAAe7L,MAAQiI,EAAWtL,KAAKb,OAC3DmM,EAAWtL,KAAK6e,WACZvT,EAAWtL,KAAK6e,SAAS,KACzBjQ,SAASM,eAAe,YAAY7L,MAAQ2O,EAAO/X,MAAMqR,EAAWtL,KAAK6e,SAAS,IAAI5f,KAAO,IAAM+S,EAAO/X,MAAMqR,EAAWtL,KAAK6e,SAAS,IAAI3f,YAC7IoM,EAAWtL,KAAK6e,SAAS,KACzBjQ,SAASM,eAAe,YAAY7L,MAAQ2O,EAAO/X,MAAMqR,EAAWtL,KAAK6e,SAAS,IAAI5f,KAAO,IAAM+S,EAAO/X,MAAMqR,EAAWtL,KAAK6e,SAAS,IAAI3f,aAGrJqN,EAAEkE,WAAW9B,KAAKC,SAAS8B,iBAAiB,cAC5CnE,EAAEwG,mBACFzH,EAAWE,SAAU,EACrBwG,EAAO7B,WA1BftW,SA4BW,SAAUoG,GACbvC,QAAQC,IAAIsC,GACZsM,EAAEgD,OACEC,KAAM,iDACNC,QAAS,cACTC,cAAe,aAhOvBnE,GAAU1Q,KAAK","file":"main-28dd157847.js","sourcesContent":["window.Cipressus = (function () {\n    // Libreria para el control de la base de datos, storage, metodos utiles de la app y de comunicacion con hardware\n\n    var core = { // Instancia de la clase\n        db: {}, // Operaciones de base de datos\n        storage: {}, // Almacenamiento de archivos\n        users: {}, // Operaciones de autenticacion\n        utils: {}, // Utilidades\n        hardware: {} // Metodos de control de hardware (probador de circuitos)\n    };\n\n    //// BASE DE DATOS /////\n\n    core.db.config = { // Configuracion de la base de datos\n        apiKey: \"AIzaSyAHpgtsZeQbcoCbKNE1dNjd7gUbSIFWz6M\",\n        authDomain: \"cipressus-0000.firebaseapp.com\",\n        databaseURL: \"https://cipressus-0000.firebaseio.com\",\n        projectId: \"cipressus-0000\",\n        storageBucket: \"cipressus-0000.appspot.com\",\n        messagingSenderId: \"927588929794\",\n        publicvapidkey: \"BF0sMjIt0y1H_3oyJzmkBmPkrG9UK7HL5ekgRXj50jEYc3MZSfpjCd051A0tNkNfEtLmmVlYILFvi8PQ0BDXRNM\"\n    };\n\n    core.db.listen = function (path) { // Escuchar cambios\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).on('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot.val());\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.db.get = function (path) { // Descargar informacion de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot.val());\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.db.getSorted = function (path, key) { // Obtener lista ordenada por key\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        })\n    };\n\n    core.db.set = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).set(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.db.update = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).update(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.db.push = function (data, path) { // Nueva entrada (retorna id)\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).push(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.db.pushMultiple = function (dataArray, path) { // Subir multiples entradas a un mismo directorio\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in dataArray) // Para cada objeto \n                job.push(firebase.database().ref(path).push(dataArray[k])); // TODO: usar multiples paths \n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot es un array que contiene los keys\n                    return fulfill(snapshot); // Del otro lado se puede hacer un for para retornar\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n\n    //// ALMACENAMIENTO ////\n\n    core.storage.put = function (file, path, filename) { // Subir archivo\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).put(file)\n                .then(function (snapshot) {\n                    var size = snapshot.totalBytes; // Tamanio de archivo\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill({\n                            size: size,\n                            url: url\n                        }); // Devolver tamanio y url del archivo\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    core.storage.putMultiple = function (files, path, filenames) { // Subir muchos archivos\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in files) // Para cada archivo                \n                job.push(firebase.storage().ref().child(path + \"/\" + filenames[k]).put(files[k]));\n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot devuelve las url de manera asincrona pero en este caso es un array\n                    var res = []; // Nuevamente generar promesas\n                    var sizes = []; // Lista de tamanios de archivos\n                    for (var k in snapshot) {\n                        sizes.push(snapshot[k].totalBytes);\n                        res.push(snapshot[k].ref.getDownloadURL());\n                    }\n                    Promise.all(res) // Ejecutar promise para obtener urls\n                        .then(function (results) { // Results es un array con los urls                    \n                            return fulfill({\n                                sizes: sizes,\n                                urls: results\n                            }); // Mandar tamanio y urls\n                        });\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    core.storage.putString = function (str, path, filename) { // Guardar string\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).putString(str)\n                .then(function (snapshot) {\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill(url); // Devolver url de descarga\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    core.storage.delete = function (filename, path) { // Borrar un archivo de storage\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).delete()\n                .then(function () {\n                    return fulfill(\"Borrado: \" + path + \"/\" + filename);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n    //// USUARIOS /////\n\n    core.users.onUserSignedIn = function (uid) { // Overridable - inicio de sesion\n        console.log(\"default -- logged in \" + uid);\n    };\n\n    core.users.onUserSignedOut = function () { // Overridable - cierre de sesion\n        console.log(\"default -- logged out\");\n    };\n\n    core.users.signIn = function (form) { // Iniciar sesión\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/wrong-password':\n                            errorMessage = \"La contraseña es incorrecta.\";\n                            break;\n                        case 'auth/user-disabled':\n                            errorMessage = \"El usuario se haya inhabilitado momentáneamente.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Quizá esté mal escrito o no exista.\";\n                            break;\n                        case 'auth/user-not-found':\n                            errorMessage = \"El usuario no existe.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó.. revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    return fulfill(\"Logeado correctamente.\");\n                });\n        });\n    };\n\n    core.users.signOut = function () {\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signOut()\n                .then(function () {\n                    return fulfill(\"Ha salido de Cipressus.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    }\n\n    core.users.signUp = function (form) { // Registrarse como nuevo usuario\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/weak-password':\n                            errorMessage = \"La contraseña es demasiado débil. Intenta con una más segura.\";\n                            break;\n                        case 'auth/email-already-in-use':\n                            errorMessage = \"Éste email ya existe en nuestra base de datos.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Revisa lo ingresado.\";\n                            break;\n                        case 'auth/operation-not-allowed':\n                            errorMessage = \"No se puede crear la cuenta para ese usuario. Ponete en contacto con los administradores.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó... revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    // Guardar informacion del usuario en la db\n                    var users_public = { // Informacion editable por usuarios\n                        activity: {\n                            last_login: Date.now(),\n                            browser: {}, // Contador de navegadores\n                            os: {} // Contador de sistemas operativos\n                        },\n                        name: form.name,\n                        secondName: form.secondName,\n                        email: form.email,\n                        degree: form.degree,\n                        lu: form.lu,\n                        avatar: \"images/avatar_0.png\" // Imagen por defecto (luego se carga una base64)\n                    };\n                    // Inicializar contadores de navegador y so\n                    users_public.activity.browser[is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))))] = 1;\n                    users_public.activity.os[is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')))] = 1;\n\n                    core.db.set(users_public, 'users_public/' + result.user.uid)\n                        .then(function (res) {\n                            return fulfill(\"Datos de nuevo usuario registrados.\");\n                        })\n                        .catch(function (err) {\n                            return reject([err, \"Ocurrió un problema al guardar los datos.\"]);\n                        });\n                });\n        });\n    };\n\n    core.users.resetPwd = function (email) { // Restablecer contrasenia\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().sendPasswordResetEmail(email)\n                .then(function () {\n                    return fulfill(\"Listo. Revisa tu correo electrónico.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n\n    ///// INICIALIZACION /////\n\n    core.initialize = function () { // Instrucciones de inicializacion de las utilidades        \n        return new Promise(function (fulfill, reject) {\n            firebase.initializeApp(core.db.config); // Inicializar base de datos\n\n            // Configurar mensajeria y notificaciones push\n            var messaging = firebase.messaging();\n            \n            messaging.usePublicVapidKey(core.db.config.publicvapidkey);\n            \n            messaging.requestPermission()\n                .then(function () {\n                    console.log('Permisos de notificación otorgados.');\n                })\n                .catch(function (err) {\n                    console.log('No es posible habilitar notificaciones.', err);\n                });\n\n            /* Importar el script de notifications\n            firebase.notifications().onNotification((notification) => {\n                console.log('Notificacion: ',notification);\n                //firebase.notifications().displayNotification(notification);\n            });\n            */\n\n            messaging.onMessage(function(payload) {\n                console.log('Message received: ', payload);\n                // Mostrar notificacion popup\n                const opts = {\n                    body: 'Se actualizó tu calificación \"Informe laboratorio 1\"',\n                    icon: '/images/mainlogo.png',\n                    sound: '/sounds/notification.mp3' // No soportado\n                };\n                core.registration.showNotification(\"Cipressus\", opts);\n            });\n\n            messaging.getToken().then(function (currentToken) {\n                if (currentToken) \n                    console.log(\"Current token\", currentToken);\n                else \n                    console.log('No Instance ID token available. Request permission to generate one.');\n            }).catch(function (err) {\n                console.log('An error occurred while retrieving token. ', err);\n            });\n\n            messaging.onTokenRefresh(function () {\n                messaging.getToken().then(function (refreshedToken) {\n                    console.log('Token refreshed.');\n                    // Indicate that the new Instance ID token has not yet been sent to the\n                    // app server.\n                    //setTokenSentToServer(false);\n                    // Send Instance ID token to app server.\n                    //sendTokenToServer(refreshedToken);\n                    // ...\n                }).catch(function (err) {\n                    console.log('Unable to retrieve refreshed token ', err);\n                    showToken('Unable to retrieve refreshed token ', err);\n                });\n            });\n\n            navigator.serviceWorker.getRegistration().then(function(reg){\n                core.registration = reg; // Nuevo atributo\n                // messaging.useServiceWorker(reg); //\n            });\n\n            // Autenticacion\n            firebase.auth().onAuthStateChanged(function (user) { // Escuchar cambios de logeo de usuario\n                if (user) // El usuario esta logeado\n                    core.users.onUserSignedIn(user.uid); // Pasar uid a los callbacks\n                else // Si cerro sesión, se llama al callback\n                    core.users.onUserSignedOut();\n            });\n\n            return fulfill();\n        });\n    };\n\n    return core;\n})();","(function (core) { //// UTILIDADES ////\n\n    core.utils.searchNode = function (node, id) { // Obtener el objeto de un nodo a partir del id\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = null;\n        if (node.id == id) // Coincidencia\n            return node;\n        else\n        if (node.children) // Si el nodo tiene hijos, recorrer buscando\n            for (var k in node.children) { // Para cada hijo del nodo\n                result = core.utils.searchNode(node.children[k], id); // Buscar\n                if (result)\n                    return result;\n            }\n        return result;\n    };\n\n    core.utils.defaultCostFunction = function (submitMs, deadlineMs, param) { // Funcion de costo por perdida de vencimiento de una actividad\n        // Entradas:\n        //\t\t- submitMs: es la fecha de entrega expresada en unix time\n        //\t\t- deadlineMs: es la fecha de vencimiento (debe ser menor que submitMs)\n        //\t\t- param: contiene el o los parametros de la funcion de costo (extender a vector si hace falta)\n        return Math.ceil((submitMs - deadlineMs) / 86400000) * param; // Desgaste lineal por dia\n    };\n\n    core.utils.eval = function (student, node) { // Computar nota de un alumno en puntaje absoluto\n        // Entradas:\n        //\t\t- student: contiene la informacion de entregas y notas asignadas por los profesores\n        //\t\t- node: es el nodo del arbol de actividades al que se le quiere calcular el puntaje total \n\n        if (node.children) { // Si el nodo tiene hijos, calcular suma ponderada de los hijos\n            var sum = 0; // Contador de puntajes\n            for (var k in node.children) // Para cada hijo del nodo\n                sum += core.utils.eval(student, node.children[k]); // Sumar nota obtenida de los hijos\n            if (node.deadline) // Si la actividad tiene fecha de vencimiento\n                if (student.submits) // Si el alumno tiene alguna entrega\n                    if (student.submits[node.id]) // Y si esta actividad ya fue entregada por el alumno y recibida por el profesor\n                        if (student.submits[node.id].submitted > node.deadline.date) { // Si se paso el vencimiento, hay que descontar puntos segun funcion de desgaste\n                            var cost = core.utils.defaultCostFunction(student.submits[node.id].submitted, node.deadline.date, node.deadline.param);\n                            if (cost > node.score) cost = node.score; // Habria que considerar la nota puesta\n                            sum -= cost; // Restar costo\n                            if (sum < 0) sum = 0; // La nota no puede ser negativa\n                        }\n            return sum;\n        } else { // Es hoja\n            if (student.scores[node.id]) // Si ya esta evaluado este campo\n                return student.scores[node.id].score * node.score / 100; // Retornar el valor de la nota multiplicado por el puntaje de la actividad\n            else\n                return 0; // Si no tiene nota, devolver 0\n        }\n    };\n\n    core.utils.getArray = function (root) { // Convertir el arbol en arreglo referenciado\n        // Sirve para exportar a formato de highcharts y para listar actividades en vista de alumnos\n\n        var getArrRec = function (node, arr, parent) { // Recorrido recursivo\n            if (node.children) {\n                for (var k in node.children) // Para cada hijo del nodo\n                    getArrRec(node.children[k], arr, node.id); // Obtener arreglo de los hijos\n                \n                arr.push({ // Agregar el nodo actual \n                    id: node.id,\n                    parent: parent, // Referencias hacia atras\n                    name: node.name,\n                    score: node.score, // Higcharts calcula este valor y por eso se llama value en las hojas\n                    dl: node.deadline // Vencimiento va si existe\n                });\n            } else { // Es hoja, agregar hoja y retornar\n                arr.push({\n                    id: node.id,\n                    parent: parent,\n                    name: node.name,\n                    value: node.score // Este dato lo usa highcarts (se calcula para los nodos padres)\n                });\n            }\n        }\n\n        var arr = [];\n\n        getArrRec(root, arr, ''); // Iniciar\n        \n        return arr;\n    };\n\n    core.utils.getTree = function(root){ // Obtener arbol como nodos y lazos\n        \n        var treeRec = function(tree, nodes, edges, color){ // Funcion recursiva para recorrer el arbol\n            \n            nodes.push({\n                id: tree.id,\n                label: tree.name+\"\\nPuntaje: \"+tree.score,\n                shape: \"box\",\n                color: color ? color : \"#555555\",                \n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            });\n\n            if(tree.children){ \n                var color = '#'+Math.floor(Math.random()*16777215).toString(16);\n                for(var k in tree.children){\n                    treeRec(tree.children[k], nodes, edges, color);\n                    edges.push({\n                        from: tree.id,\n                        to: tree.children[k].id\n                    });\n                }\n            }else{                \n                return;\n            }\n        };\n\n        // Hay que crear un nodo root con un solo children para que funcione con la libreria vis.js\n        var nodes = [\n            {\n                id: \"main\", \n                label: root.course.name.replace(/\\s/g,\"\\n\"),\n                shape: \"box\",\n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            }\n        ]; \n\n        var edges = [{from: \"main\", to: root.id}];\n\n        treeRec(root, nodes, edges); // Iniciar\n\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n\n    core.utils.sendEmail = function (data) { // Enviar email (requiere script php en hosting)\n        return new Promise(function (fulfill, reject) {\n            /*\n            var uriData = 'nombre=' + data.name + '&email=' + data.email + '&cc=' + data.cc.join() + '&asunto=' + data.subject + '&mensaje=' + data.message;\n            var ajax_url = 'https://cipressus.uns.edu.ar/mail.php';\n            var ajax_request = new XMLHttpRequest();\n            ajax_request.onreadystatechange = function () {\n                if (ajax_request.readyState === 4)\n                    return fulfill({\n                        response: ajax_request.responseText,\n                        type: \"success\",\n                        status: ajax_request.status\n                    });\n            };\n            try {\n                ajax_request.open(\"POST\", ajax_url, false);\n                ajax_request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                ajax_request.send(encodeURI(uriData));\n            } catch (err) {\n                return reject(err);\n            }\n            */\n            return reject(\"Email no implementado\");\n        });\n    };\n\n    core.utils.sendNotification = function (data) { // Enviar notificaciones por FCM\n        var xhr = new XMLHttpRequest();\n        var url = \"https://fcm.googleapis.com/fcm/send\";\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", \"key=AAAA1_ib0QI:APA91bHVFpFU4-CAibNhNmCriYbWcqbmhQuuCZa1sITD4BgF2wBBYZ8-WPc30NI0n_HfPFHEIzG1THqKgtWS8gd1bUROftZpW_o2OqBP64IgciaQMNnp4_nKU5vysZmAACjToKWFsPGe\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                var json = JSON.parse(xhr.responseText);\n                console.log(json);\n            }\n        };\n\n        /*var data = {\n            \"notification\": {\n                \"title\": \"Cipressus\",\n                \"body\": \"Hola mundo\",\n                \"icon\": \"images/mainlogo.png\"\n            },\n            \"to\": \"eY9vq-H4hws:APA91bHwMxWW5K6jEySnJGpkOEHc9RiY6aCjEUl1yK0xqf4LHeOmgGMUYlYlBYDiN7inFJjz1vMHeb3GGAg-yQPYJphveS_Q7q_i2JY1VKgSv7HqGMY3mUW4uKqph7NQt48b4KXyh5B-\" // Token que devuelve\n        };*/\n\n        var msg = JSON.stringify(data);\n        xhr.send(msg);\n    };\n\n    core.utils.generateFileName = function (len) { // Nombres aleatorios para archivos\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < len; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n\n    core.utils.quillToHTML = function (str) { // Hacer la adaptacion del formato quill al formato html de home\n        return str.replace(/ql-align-center/g, \"center-align\"); // Por ahora solo este, buscar otros\n    };\n\n    core.utils.activityCntr = function (userUid, item) { // Incrementador de contadores para monitoreo de actividad de usuarios\n        return new Promise(function (fulfill, reject) {\n            core.db.get(\"users_public/\" + userUid + \"/activity/items/\" + item)\n                .then(function (activity_data) {\n                    var data = {};\n                    if (activity_data) // Tiene valores en este item de actividad\n                        data[item] = activity_data + 1;\n                    else // Aun no registra actividad en este item\n                        data[item] = 1;\n                    core.db.update(data, \"users_public/\" + userUid + \"/activity/items\")\n                        .then(function (res) {\n                            return fulfill(res);\n                        })\n                        .catch(function (err) {\n                            return reject(err);\n                        });\n                })\n                .catch(function (err) {\n                    return reject(err);\n                });\n        });\n    };\n\n    core.utils.getPrimeImplicants = function (data) { // Obtener implicantes primos a partir de los miniterminos\n        // Autor del metodo: Janus Troelsen (https://gist.github.com/ysangkok/5707171)\n        /*\n        var minterms = ['1101', '1100', '1110', '1111', '1010', '0011', '0111', '0110'];\n        var minterms2 = ['0000', '0100', '1000', '0101', '1100', '0111', '1011', '1111'];\n        var minterms3 = ['0001', '0011', '0100', '0110', '1011', '0000', '1000', '1010', '1100', '1101'];\n        console.log( 'PI(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms)));\n        console.log( 'PI2(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms2)));\n        console.log( 'PI3(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms3)));\n        */\n\n        var combine = function (m, n) {\n            var a = m.length,\n                c = '',\n                count = 0,\n                i;\n            for (i = 0; i < a; i++) {\n                if (m[i] === n[i]) {\n                    c += m[i];\n                } else if (m[i] !== n[i]) {\n                    c += '-';\n                    count += 1;\n                }\n            }\n            if (count > 1)\n                return \"\";\n            return c;\n        };\n\n        var repeatelem = function (elem, count) {\n            var accu = [],\n                addOneAndRecurse = function (remaining) {\n                    accu.push(elem);\n                    if (remaining > 1) {\n                        addOneAndRecurse(remaining - 1);\n                    }\n                };\n            addOneAndRecurse(count);\n            return accu;\n        };\n\n        var newList = [].concat(data),\n            size = newList.length,\n            IM = [],\n            im = [],\n            im2 = [],\n            mark = repeatelem(0, size),\n            mark2, m = 0,\n            i, j, c, p, n, r, q;\n        for (i = 0; i < size; i++) {\n            for (j = i + 1; j < size; j++) {\n                c = combine(newList[i], newList[j]);\n                if (c !== \"\") {\n                    im.push(c);\n                    mark[i] = 1;\n                    mark[j] = 1;\n                }\n            }\n        }\n\n        mark2 = repeatelem(0, im.length);\n        for (p = 0; p < im.length; p++) {\n            for (n = p + 1; n < im.length; n++) {\n                if (p !== n && mark2[n] === 0 && im[p] === im[n]) {\n                    mark2[n] = 1;\n                }\n            }\n        }\n\n        for (r = 0; r < im.length; r++) {\n            if (mark2[r] === 0) {\n                im2.push(im[r]);\n            }\n        }\n\n        for (q = 0; q < size; q++) {\n            if (mark[q] === 0) {\n                IM.push(newList[q]);\n                m = m + 1;\n            }\n        }\n\n        if (m !== size && size !== 1)\n            IM = IM.concat(Cipressus.utils.getPrimeImplicants(im2));\n\n        IM.sort();\n        return IM;\n    };\n})(Cipressus);","(function (core) { ////// HARDWARE /////\n    var socket; // Objeto privado para comunicarse con el server\n    var timerId = null; // Timer para temporizar los llamados al socket\n    var serialPorts = []; // Lista de puertos serie disponibles (objeto privado)\n\n    core.hardware.initServer = function (params) { // Inicializar conexion con WebSocketServer      \n        /*\n            params: {\n                io: array con estados de entradas/salidas (para hacer binding con objetos de controllers)\n                sp: periodo de muestreo (ms) de envio de salidas\n                ci: periodo de intento de reconexion con server (ms)\n                onUpdate(): funcion que se llama en cada actualizacion de la entrada (para hacer apply por ej)\n            }\n        */\n\n        core.hardware.status = \"CONNECTING\"; // Inicialmente, el estado es de conectando (intenta cada tanto volver a abrir la conexion)\n        core.hardware.sample_period = params.sp; // Periodo de actualizacion de salidas\n        core.hardware.io = params.io; // Binding con view\n        core.hardware.onUpdate = params.onUpdate;\n\n        socket = new WebSocket(\"ws://localhost:8081\"); // Conectarse al server por web socket\n\n        socket.onerror = function (error) {\n            console.log(error);\n        };\n\n        socket.onopen = function () { // Puerto conectado\n            if (timerId) {\n                clearInterval(timerId);\n                timerId = null;\n            }\n            core.hardware.onSocketOpen(); // Ejecutar el callback\n        };\n\n        socket.onclose = function () { // Server no disponible (seguir intentando conectar)\n            if (core.hardware.status == \"CONNECTED\" || core.hardware.status == \"IDLE\") // Si la conexion con server estaba abierta significa que se cerro el server\n                core.hardware.status = \"CONNECTING\"; // Pasar a estado conectando\n            if (!timerId) {\n                timerId = setInterval(function () {\n                    socket = null;\n                    core.hardware.initServer(params);\n                }, params.ci);\n            }\n            core.hardware.onSocketClose(); // Ejecutar el callback\n        };\n\n        socket.onmessage = function (message) { // Respuesta del server\n            serialPorts = JSON.parse(message.data); // El primer mensaje que manda el server es la lista de puertos\n            core.hardware.status = \"IDLE\"; // Una vez que recibe la lista de puertos, espera conexion\n            socket.onmessage = function (message) { // Redefinir la funcion a partir de aqui                                        \n                for (var k = 0; k < 8; k++) // Debe mandar siempre un string de 8 caracteres \n                    core.hardware.io[k].input = (message.data[k] == \"1\"); // Configurar inputs segun caracter sea 1 o 0\n                core.hardware.onUpdate();\n            };\n        };\n    };\n\n    core.hardware.stopServer = function () { // Desconectarse del server (para liberar el uso de recursos)\n        core.hardware.status = \"DISCONNECTED\";\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n        }\n        socket.onclose = function () {}; // Borrar la funcion para que no se vuelva a conectar\n        socket.close();\n        socket = null;\n    };\n\n    core.hardware.ioUpdate = function () { // Envio de string al server para actualizar salidas\n        var outputs = \"\";\n        for (var k in core.hardware.io)\n            outputs += core.hardware.io[k].output ? \"1\" : \"0\";\n        socket.send(outputs);\n        if (core.hardware.status == \"CONNECTED\")\n            setTimeout(core.hardware.ioUpdate, core.hardware.sample_period);\n    };\n\n    core.hardware.connectTo = function (portIndex) { // Conectarse con un puerto de la lista    \n        if (serialPorts.length > 0) {\n            socket.send(portIndex); // Esto solo funciona mientras no se haya iniciado el streaming con el probador\n            core.hardware.status = \"CONNECTED\";\n            setTimeout(core.hardware.ioUpdate, 500); // Esperar 500ms e iniciar envio de comandos\n        } else\n            console.log(\"El listado de puertos no está disponible\");\n    };\n\n    core.hardware.getSerialPorts = function () { // Se puede pedir la lista de puertos en cualquier momento\n        return serialPorts; // Puede que un puerto ya no este disponible\n    };\n\n    core.hardware.onSocketOpen = function () { // Overridable - al conectarse con server\n        console.log(\"Socket abierto.\");\n    };\n\n    core.hardware.onSocketClose = function () { // Overridable - cuando se detiene el server\n        console.log(\"Socket cerrado.\");\n    }\n})(Cipressus);","(function (core) { ///// Test Felder-Silverman de estilos de aprendizaje\n    core.test_FS = {\n        questions: [{\n                text: \"Entiendo mejor algo\",\n                options: [\"si lo practico.\", \"si pienso en ello.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"realista.\", \"innovador.\"]\n            },\n            {\n                text: \"Cuando pienso acerca de lo que hice ayer, es más probable que lo haga sobre la base de\",\n                options: [\"una imagen.\", \"palabras.\"]\n            },\n            {\n                text: \"Tengo tendencia a\",\n                options: [\"entender los detalles de un tema pero no ver claramente su estructura completa\", \"entender la estructura completa pero no ver claramente los detalles.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo algo nuevo, me ayuda\",\n                options: [\"hablar de ello.\", \"pensar en ello.\"]\n            },\n            {\n                text: \"Si yo fuera profesor, yo preferiría dar un curso\",\n                options: [\"que trate sobre hechos y situaciones reales de la vida.\", \"que trate con ideas y teorías.\"]\n            },\n            {\n                text: \"Prefiero obtener información nueva de\",\n                options: [\"imágenes, diagramas, gráficas o mapas.\", \" instrucciones escritas o información verbal.\"]\n            },\n            {\n                text: \"Una vez que entiendo\",\n                options: [\"todas las partes, entiendo el total.\", \"el total de algo, entiendo como encajan sus partes.\"]\n            },\n            {\n                text: \"En un grupo de estudio que trabaja con un material difícil, es más probable que\",\n                options: [\"participe y contribuya con ideas.\", \"no participe y solo escuche.\"]\n            },\n            {\n                text: \"Es más fácil para mí\",\n                options: [\"aprender hechos.\", \"aprender conceptos.\"]\n            },\n            {\n                text: \"En un libro con muchas imágenes y gráficas es más probable que\",\n                options: [\"revise cuidadosamente las imágenes y las gráficas.\", \" me concentre en el texto escrito.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas de matemáticas\",\n                options: [\"generalmente trabajo sobre las soluciones con un paso a la vez.\", \"frecuentemente sé cuales son las soluciones, pero luego tengo dificultad para imaginarme los pasos para llegar a ellas.\"]\n            },\n            {\n                text: \"En las clases a las que he asistido\",\n                options: [\"he llegado a saber como son muchos de los estudiantes.\", \"raramente he llegado a saber como son muchos estudiantes.\"]\n            },\n            {\n                text: \"Cuando leo temas que no son de ficción, prefiero\",\n                options: [\"algo que me enseñe nuevos hechos o me diga como hacer algo.\", \"algo que me dé nuevas ideas en que pensar.\"]\n            },\n            {\n                text: \"Me gustan los maestros\",\n                options: [\"que utilizan muchos esquemas en el pizarrón.\", \"que toman mucho tiempo para explicar.\"]\n            },\n            {\n                text: \"Cuando estoy analizando un cuento o una novela\",\n                options: [\"pienso en los incidentes y trato de acomodarlos para configurar los temas.\", \"me doy cuenta de cuales son los temas cuando termino de leer y luego tengo que regresar y encontrar los incidentes que los demuestran.\"]\n            },\n            {\n                text: \"Cuando comienzo a resolver un problema de tarea, es más probable que\",\n                options: [\"comience a trabajar en su solución inmediatamente.\", \"primero trate de entender completamente el problema.\"]\n            },\n            {\n                text: \"Prefiero la idea de\",\n                options: [\"certeza.\", \"teoría.\"]\n            },\n            {\n                text: \"Recuerdo mejor\",\n                options: [\"lo que veo.\", \"lo que oigo.\"]\n            },\n            {\n                text: \"Es más importante para mí que un profesor\",\n                options: [\"exponga el material en pasos secuenciales claros.\", \"me dé un panorama general y relacione el material con otros temas.\"]\n            },\n            {\n                text: \"Prefiero estudiar\",\n                options: [\"en un grupo de estudio.\", \"solo.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"cuidadoso en los detalles de mi trabajo.\", \"creativo en la forma en la que hago mi trabajo.\"]\n            },\n            {\n                text: \"Cuando alguien me da direcciones de nuevos lugares, prefiero\",\n                options: [\"un mapa.\", \"instrucciones escritas.\"]\n            },\n            {\n                text: \"Aprendo\",\n                options: [\"a un paso constante. Si estudio con ahínco consigo lo que deseo.\", \"en inicios y pausas. Me llego a confundir y súbitamente lo entiendo.\"]\n            },\n            {\n                text: \"Prefiero primero\",\n                options: [\"hacer algo y ver que sucede.\", \"pensar como voy a hacer algo.\"]\n            },\n            {\n                text: \"Cuando leo por diversión, me gustan los escritores que\",\n                options: [\"dicen claramente los que desean dar a entender.\", \"dicen las cosas en forma creativa e interesante.\"]\n            },\n            {\n                text: \"Cuando veo un esquema o bosquejo en clase, es más probable que recuerde\",\n                options: [\"la imagen.\", \"lo que el profesor dijo acerca de ella.\"]\n            },\n            {\n                text: \"Cuando me enfrento a un cuerpo de información\",\n                options: [\"me concentro en los detalles y pierdo de vista el total de la misma.\", \"trato de entender el todo antes de ir a los detalles.\"]\n            },\n            {\n                text: \"Recuerdo más fácilmente\",\n                options: [\"algo que he hecho.\", \"algo en lo que he pensado mucho.\"]\n            },\n            {\n                text: \"Cuando tengo que hacer un trabajo, prefiero\",\n                options: [\"dominar una forma de hacerlo.\", \"intentar nuevas formas de hacerlo.\"]\n            },\n            {\n                text: \"Cuando alguien me enseña datos, prefiero\",\n                options: [\"gráficas.\", \"resúmenes con texto.\"]\n            },\n            {\n                text: \"Cuando escribo un trabajo, es más probable que\",\n                options: [\"lo haga (piense o escriba) desde el principio y avance.\", \" lo haga (piense o escriba) en diferentes partes y luego las ordene.\"]\n            },\n            {\n                text: \"Cuando tengo que trabajar en un proyecto de grupo, primero quiero\",\n                options: [\"realizar una 'tormenta de ideas' donde cada uno contribuye con ideas.\", \"realizar la 'tormenta de ideas' en forma personal y luego juntarme con el grupo para comparar las ideas.\"]\n            },\n            {\n                text: \"Considero que es mejor elogio llamar a alguien\",\n                options: [\"sensible.\", \"imaginativo.\"]\n            },\n            {\n                text: \"Cuando conozco gente en una fiesta, es más probable que recuerde\",\n                options: [\"cómo es su apariencia.\", \"lo que dicen de sí mismos.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo un tema, prefiero\",\n                options: [\"mantenerme concentrado en ese tema, aprendiendo lo más que pueda de él.\", \"hacer conexiones entre ese tema y temas relacionados.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"abierto.\", \"reservado.\"]\n            },\n            {\n                text: \"Prefiero cursos que dan más importancia a\",\n                options: [\"material concreto (hechos, datos).\", \" material abstracto (conceptos, teorías).\"]\n            },\n            {\n                text: \"Para divertirme, prefiero\",\n                options: [\"ver televisión.\", \"leer un libro.\"]\n            },\n            {\n                text: \"Algunos profesores inician sus clases haciendo un bosquejo de lo que enseñarán. Esos bosquejos son\",\n                options: [\"algo útiles para mí.\", \"muy útiles para mí.\"]\n            },\n            {\n                text: \"La idea de hacer una tarea en grupo con una sola calificación para todos\",\n                options: [\"me parece bien.\", \"no me parece bien.\"]\n            },\n            {\n                text: \"Cuando hago grandes cálculos\",\n                options: [\"tiendo a repetir todos mis pasos y revisar cuidadosamente mi trabajo.\", \"me cansa hacer su revisión y tengo que esforzarme para hacerlo.\"]\n            },\n            {\n                text: \"Tiendo a recordar lugares en los que he estado\",\n                options: [\"fácilmente y con bastante exactitud.\", \"con dificultad y sin mucho detalle.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas en grupo, es más probable que yo\",\n                options: [\"piense en los pasos para la solución de los problemas.\", \"piense en las posibles consecuencias o aplicaciones de la solución en un amplio rango de campos.\"]\n            }\n        ],\n        evalMatrix: [ // Puntajes: evalMatrix[escala][pregunta][opcion]\n            [\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Act\n            [\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Refl\n            [\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0]\n            ], // Sens\n            [\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0]\n            ], // Int\n            [\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0]\n            ], // Vis\n            [\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0]\n            ], // Ver\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0]\n            ], // Sec\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1]\n            ] // Glo\n        ],\n        profileDesc: [\n            [\n                \"Aprende por interacción directa con el material de estudio. Prefiere la comunicación visual.\", // Activo\n                \"Le gusta reflexionar sobre el material de estudio. Prefiere el trabajo individual y comunicación grupal mínima.\" // Reflexivo\n            ],\n            [\n                \"Detallista y práctico con preferencia por hechos concretos y aplicaciones del mundo real.\", // Sensitivo\n                \"Creativo y se siente atraído por el contenido teórico y abstracto.\" // Intuitivo\n            ],\n            [\n                \"Recuerda fácilmente imágenes que se le presenta (gráficos, fotos, esquemas, etc.).\", // Visual   \n                \"Recuerda fácilmente frases escritas o habladas.\" // Verbal\n            ],\n            [\n                \"Prefiere aprender de manera lineal, mediante secuencia de pasos lógicos.\", // Secuencial\n                \"Prefiere que se le presente un esquema general y luego aprende y entiende las partes por separado sin seguir un orden específico.\" // Global\n            ],\n        ],\n        eval: function (answers) { // Computo de escalas (metodo general escalas PsiMESH [http://www.psimesh.com])\n            var var_sum = []; // Arreglo de puntajes sumados para cada escala\n            for (var vble = 0; vble < 8; vble++) {\n                var sum = []; // Arreglo con valores de puntajes de cada resepuesta\n                for (var quest in answers) // Para cada pregunta\n                    sum[quest] = this.evalMatrix[vble][quest][answers[quest]]; // Puntaje que otorga cada pregunta a la escala actual\n                var_sum[vble] = sum.reduce(function(a, b){return a + b}, 0); // Sumar arreglo de puntajes de la escala actual\n            }\n            var scales = [];\n            for (var sc = 0; sc < 8; sc += 2)\n                scales[sc / 2] = var_sum[sc + 1] - var_sum[sc];\n            return scales;\n        }\n    }\n})(Cipressus);","var app = angular.module('cipressus', ['ngRoute', 'ngSanitize','LocalStorageModule'])\n.config(function ($routeProvider) {\n    $routeProvider\n        .when(\"/\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/login\", {\n            templateUrl: \"views/login.html\",\n            controller: \"login\"\n        })\n        .when(\"/dashboard\", {\n            templateUrl: \"views/dashboard.html\",\n            controller: \"dashboard\"\n        })\n        .when(\"/calendar\", {\n            templateUrl: \"views/calendar.html\",\n            controller: \"calendar\"\n        })\n        .when(\"/sources\", {\n            templateUrl: \"views/sources.html\",\n            controller: \"sources\"\n        })\n        .when(\"/submissions\", {\n            templateUrl: \"views/submissions.html\",\n            controller: \"submissions\"\n        })\n        .when(\"/hardware\", {\n            templateUrl: \"views/hardware.html\",\n            controller: \"hardware\"\n        })\n        .when(\"/analizer\", {\n            templateUrl: \"views/analizer.html\",\n            controller: \"analizer\"\n        })        \n        .when(\"/simulator\", {\n            templateUrl: \"views/simulator.html\",\n            controller: \"simulator\"\n        })\n        .when(\"/kMaps\", {\n            templateUrl: \"views/kMaps.html\",\n            controller: \"kMaps\"\n        })\n        .when(\"/tables\", {\n            templateUrl: \"views/tables.html\",\n            controller: \"tables\"\n        })\n        .when(\"/users\", {\n            templateUrl: \"views/users.html\",\n            controller: \"users\"\n        })\n        .when(\"/stats\", {\n            templateUrl: \"views/stats.html\",\n            controller: \"stats\"\n        })\n        .when(\"/attendance\", {\n            templateUrl: \"views/attendance.html\",\n            controller: \"attendance\"\n        })\n        .when(\"/activities\", {\n            templateUrl: \"views/activities.html\",\n            controller: \"activities\"\n        })\n        .when(\"/editor\", {\n            templateUrl: \"views/editor.html\",\n            controller: \"editor\"\n        })\n        .when(\"/profile\", {\n            templateUrl: \"views/profile.html\",\n            controller: \"profile\"\n        });\n})\n.filter('trusted', ['$sce', function ($sce) {\n    // Ver: https://stackoverflow.com/questions/39480969/angular-interpolateinterr-error-when-adding-url-from-variable\n    return $sce.trustAsResourceUrl;\n }])\n.config(['$locationProvider', function($locationProvider) {\n    // Ver: https://stackoverflow.com/questions/41272314/angular-all-slashes-in-url-changed-to-2f\n    $locationProvider.hashPrefix('');\n  }])\n.run(function ($rootScope, $location) {\n\n    $rootScope.loading = true; // Preloader\n    $rootScope.userLogged = false; // Indicador de usuario logeado para habilitar componentes de ventana\n    $location.path(\"/login\"); // Ir a vista de logeo #TODO: cambiar modelo por uno que admita acceso sin login\n    $rootScope.bodyClass = \"\"; // Clase del body (para poner fondos)\n\n    // Configuracion de moment.js\n    moment.locale('es', {\n        relativeTime : {\n            future: \"dentro de %s\",past: \"hace %s\",s: \"pocos segundos\",ss: \"%d segundos\",m: \"un minuto\",mm: \"%d minutos\",\n            h: \"una hora\",hh: \"%d horas\",d: \"un día\",dd: \"%d días\",M: \"un mes\",MM: \"%d meses\",y: \"un año\",yy: \"%d años\"\n        }\n    });\n\n    //// Utilidades ////\n    $rootScope.greetings = function(){ // Retorna saludo de bienvenida\n        var split_afternoon = 12;\n        var split_evening = 19; \n        var currentHour = parseFloat(moment().format(\"HH\"));\n        if(currentHour >= split_afternoon && currentHour <= split_evening)\n            return \"Buenas tardes\";\n        else if(currentHour >= split_evening)\n            return \"Buenas noches\";\n        else\n            return \"Buenos días\";\n    };\n\n    $rootScope.getTime = function(code,stamp){ // Para ejecutar moment en view\n        var time;\n        switch(code){\n            case 0: // Estampa de tiempo en view\n                time = Date.now();\n                break;\n            case 1: // Fecha y hora actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 2: // Solo fecha actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY\");\n                break;\n            case 3: // Fecha y hora de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 4: // Solo fecha de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY\");\n                break;\n            case 5: // Relativo al actual\n                time = moment(stamp).fromNow();\n                break;\n            default:\n                time = null;\n        }\n        return time;\n    };\n\n    $rootScope.getUserNames = function (users, userUids) { // Devuelve los apellidos de los usuarios cuyos uid se pasa como arreglo\n        if (users) { // Se puede llamar a esta funcion cuando aun no hay datos porque se ejecuta en view\n            var names = [];\n            for (var k in userUids)\n                names.push(users[userUids[k]].secondName);\n            return names.join(\", \"); // Apellidos separados por coma\n        }\n    };\n\n    $rootScope.readableFileSize = function(bytes, si) { // Devuelve tamanio de archivo en formato legible\n        var thresh = si ? 1000 : 1024;\n        if(Math.abs(bytes) < thresh) {\n            return bytes + ' B';\n        }\n        var units = si\n            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n        var u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while(Math.abs(bytes) >= thresh && u < units.length - 1);\n        return bytes.toFixed(1)+' '+units[u];\n    };\n\n    $rootScope.clone = function(obj) { // Para copiar atributos de objetos sin que queden referenciados\n        var copy;\n        if (null == obj || \"object\" != typeof obj) return obj;\n        if (obj instanceof Array) {\n            copy = [];\n            for (var i = 0, len = obj.length; i < len; i++)\n                copy[i] = $rootScope.clone(obj[i]);\n            return copy;\n        }\n        if (obj instanceof Object) {\n            copy = {};\n            for (var attr in obj) \n                if (obj.hasOwnProperty(attr) && attr != \"$$hashKey\") \n                    copy[attr] = $rootScope.clone(obj[attr]);\n            return copy;\n        }\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    };\n\n    // Inicializacion componentes de materialize\n    $rootScope.sidenav = M.Sidenav.init(document.querySelector('.sidenav'), {\n        side: \"left\", \n        inDuration:400,  \n    });\n\n    M.Collapsible.init(document.querySelector('.collapsible_1'));\n    M.Collapsible.init(document.querySelector('.collapsible_2'));\n    M.Collapsible.init(document.querySelector('.collapsible_3'));\n    \n    M.Modal.init(document.getElementById(\"about_modal\"),{});\n    var usb_modal = M.Modal.init(document.getElementById(\"usb_modal\"),{});\n    var help_modal = M.Modal.init(document.getElementById(\"help_modal\"),{});\n\n    window.addEventListener(\"resize\", function(){\n        if($rootScope.resizeEvent)\n            $rootScope.resizeEvent()\n    });\n\n    $rootScope.signOut = function(){ // Callback para el boton de salir\n        $location.path(\"/login\"); // #TODO: navigation no debe forzar ir a login\n        $rootScope.userLogged = false;\n        Cipressus.users.signOut()\n        .then(function(res){\n            console.log(res);\n            $rootScope.user = null;\n            M.toast({html: \"Hasta pronto!\",classes: 'rounded green darken-3',displayLength: 1500});\n        })\n        .catch(function(err){\n            console.log(err[0]);\n            M.toast({html: err[1],classes: 'rounded green darken-3',displayLength: 1500});\n        });\n    };\n\n    $rootScope.sendHelp = function(){ // Enviar mensaje de ayuda a los usuarios administradores\n        // #TODO: enviar email con el mensaje de auyda\n        console.log($rootScope.helpMessage);\n        M.toast({html: \"Listo! Te enviaremos una respuesta\",classes: 'rounded green darken-3',displayLength: 2500});\n        help_modal.close();\n    };\n\n    Cipressus.users.onUserSignedIn = function(uid){ // Cuando el usuario se logea o si estaba logeado al actualizar pagina\n        $rootScope.loading = true;\n        Cipressus.db.get('users_public/'+uid) // Descargar datos publicos de usuario\n        .then(function(public_data){\n            $rootScope.user = public_data;\n            $rootScope.user.uid = uid;\n            Cipressus.db.get('users_private/'+uid) // Descargar informacion dde usuario para el sistema\n            .then(function(private_data){\n                if(private_data){ // Usuario aceptado por admin\n                    $rootScope.user.admin = private_data.admin;\n                    // #TODO: enrolled y course deberia ser lo mismo\n                    $rootScope.user.enrolled = private_data.enrolled;\n                    $rootScope.user.course = private_data.course;\n                }else{ // Usuario visitante\n                    $rootScope.user.admin = false;\n                    $rootScope.user.enrolled = null;\n                    $rootScope.user.course = null;\n                }\n\n                // Monitoreo de actividad\n                var browser = is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))));\n                var OS = is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')));\n                var update_activity = public_data.activity; // Variable de monitoreo de actividad\n                if(!update_activity)\n                    update_activity = {\n                        browser: {},\n                        os: {},\n                        last_login: 0\n                    }\n                update_activity.last_login = Date.now();\n                if(update_activity.browser){ // Esta registrado la variable de navegador?\n                    if(update_activity.browser[browser]) // Contar si existe\n                        update_activity.browser[browser]++;\n                    else // Si es la primera vez que usa este navegador, iniciar\n                        update_activity.browser[browser] = 1;\n                }else{ // Si no tiene variable de navegadores, inicializar\n                    update_activity.browser = {};\n                    update_activity.browser[browser] = 1;\n                }\n                if(update_activity.os){ // Puede que no este registrado este campo\n                    if(update_activity.os[OS]) // Verificar si tiene este os contado\n                        update_activity.os[OS]++; \n                    else // Si no tiene el os, inicializar\n                        update_activity.os[OS] = 1;                \n                }else{\n                    update_activity.os = {};\n                    update_activity.os[OS] = 1;\n                }\n                \n                Cipressus.db.update(update_activity,'users_public/'+uid+'/activity').then(function(res){console.log(\"Actividad actualizada\")}); // Actualizar logeo y dispositivo usado\n\n                if($location.path() == \"/login\"){ // Si se acaba de logear en la vista de login\n                    $location.path(\"/\"); // Ir a vista de home\n                    $rootScope.bodyClass = \"\";\n                }\n                $rootScope.userLogged = true;\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    Cipressus.users.onUserSignedOut = function(){ // Cuando cierra la sesion (puede ser desde otro lugar)\n        $rootScope.sidenav.close();\n        $rootScope.userLogged = false;\n        $location.path(\"/login\"); // #TODO: Ir a vista de login?\n        $rootScope.loading = false; // Preloader\n        $rootScope.$apply();\n    };\n\n    Cipressus.initialize() // Inicializar libreria principal de la app\n    .then(function(){ // Inicializacion exitosa\n        console.log(\"Cipressus inicializado.\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    })\n    .catch(function(){ // Error en inicializacion\n        console.log(\"Error de incialización de Cipressus\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    });  \n\n\n\n    /////// Funciones para conexion con websocket server ///////\n    Cipressus.hardware.status = \"DISCONNECTED\";\n    $rootScope.usbStatus = \"DISCONNECTED\"; // Esto es copia del status anterior, pero para no hacer binding\n    $rootScope.wssIconColor = 'red-text'; // Color del icono\n\n    // Callbacks de estado de conexion con probador para que las vistas ejecuten acciones\n    $rootScope.onWssConnect = function(){};\n    $rootScope.onWssDisconnect = function(){};\n\n    var hardwareConfig = { // Configuracion de la interface con probador        \n        io:[ // Se redefine en cada vista que use el probador\n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true}, \n            {output: false, input: true}, \n            {output: false, input: false}, \n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true},\n        ],\n        ci: 5000, // Tiempo de espera para reconexion con server\n        sp: 50, // Intervalo de actualizacion de salidas\n        onUpdate:function(){} // Funcion a ejecutar cuando se actualizan las entradas\n    };\n\n    Cipressus.hardware.onSocketClose = function(){ // Definir funcion a ejecutar si se cierra la conexion con el server (cuando se cierra el server de node)\n        // Este callback no se ejecuta si se desconecta el server desde esta misma app (con disconnectFromServer())\n        console.log(\"Socket cerrado. Reconectando...\");\n        //M.toast({html: \"Reconectando con Web Socket...\",classes: 'rounded red',displayLength: 2000});        \n        M.toast({html: \"Reconectando con server...\",classes: 'rounded blue darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"CONNECTING\";\n        $rootScope.wssIconColor = 'blue-text'; // Color del icono    \n        $rootScope.$apply();        \n    };\n\n    Cipressus.hardware.onSocketOpen = function(){ // Esto se ejecuta al iniciarse la conexion con el server\n        console.log(\"Socket abierto.\");\n        $rootScope.usbStatus = 'IDLE'; // Habilitar boton de conectar\n        $rootScope.wssIconColor = 'yellow-text'; // Color del icono\n        $rootScope.$apply();        \n        \n        M.toast({html: \"Server conectado\",classes: 'rounded blue darken-3',displayLength: 2000});\n        setTimeout(function(){ // Espera a que se envie la lista de puertos serie\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();        \n            $rootScope.$apply();\n            M.FormSelect.init(document.querySelectorAll('select'), {});            \n            M.toast({html: \"Puertos disponibles\",classes: 'rounded green darken-3',displayLength: 2000});\n        },500);\n    };\n\n    $rootScope.openUSBModal = function(){\n        if(Cipressus.hardware.status == \"IDLE\"){ // Si esta esperando puerto, actualizar lista de puertos\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();    \n            M.FormSelect.init(document.querySelectorAll('select'), {}); // Si es default-browser no se si hace falta correr esto           \n        }   \n        usb_modal.open();\n    };\n\n    $rootScope.connectToServer = function(){ // Abrir conexion con server\n        if(Cipressus.hardware.status == \"DISCONNECTED\") // Solo si esta desconectado\n            Cipressus.hardware.initServer(hardwareConfig); \n    };\n\n    $rootScope.disconnectFromServer = function(){ // Cerrar la conexion con el server\n        Cipressus.hardware.stopServer();\n        $rootScope.enableConnect = false; // Habilitar boton de conectar\n        M.toast({html: \"Server desconectado\",classes: 'rounded green darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"DISCONNECTED\";\n        $rootScope.wssIconColor = 'red-text'; // Color del icono\n        $rootScope.onWssDisconnect(); // Ejecutar callback que despues emplean las vistas\n        usb_modal.close();\n    };\n\n    $rootScope.connectToSerialPort = function(){ // Cuando se elige dispositivo y se presiona \"conectar\"\n        Cipressus.hardware.connectTo(document.getElementById(\"portSelect\").value); // Port Connection Request                \n        $rootScope.usbStatus = \"CONNECTED\";\n        $rootScope.wssIconColor = 'green-text'; // Color del icono\n        $rootScope.onWssConnect(); // Ejecutar callback que despues emplean las vistas\n        M.toast({html: \"Probador conectado!\",classes: 'rounded green darken-3',displayLength: 2000});\n        usb_modal.close();\n    }; \n    \n    ///////////\n\n\n\n\n    /////// PWA ///////\n\n    // #TODO: agregar boton para permitir instalar aunque haya cancelado la primera vez\n\n    var isInStandaloneMode = function() { return ('standalone' in window.navigator) && (window.navigator.standalone); };\n    \n    if (is.ios() && !isInStandaloneMode()) {\n       this.setState({ showInstallMessage: true });\n    }\n\n    window.addEventListener('beforeinstallprompt', function(e) {\n        e.userChoice.then(function(choiceResult) {\n            console.log(choiceResult.outcome);\n            if(choiceResult.outcome == 'dismissed') {\n                console.log('User cancelled home screen install');\n            }\n            else {\n                console.log('User added to home screen');\n            }\n        });\n    });\n});","app.directive(\"testResults\",function(){ // Evalua el test de Felder-Silverman\n    return {\n        restrict: 'E',\n        templateUrl : function() {\n            return \"views/testResults.html\";\n        },\n        scope: {\n            answers: '@'\n        },\n        link: function(scope){\n            scope.$watch('answers', function () {   \n                if (scope.answers){\n                    var scales = Cipressus.test_FS.eval(JSON.parse(scope.answers)); // Toma la funcion de la libreria\n                    for (var k = 0; k < 4; k++) {\n                        var elem = document.getElementById(\"scale_\" + k);\n                        var width = Math.abs(scales[k]) * 50 / 11;\n                        elem.style.width = width + '%';\n                        if (scales[k] < 0) {\n                            elem.style.marginLeft = 50 - width + '%';\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\n                        } else {\n                            elem.style.marginLeft = \"50%\";\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\n                        }\n                        elem.innerHTML = Math.abs(scales[k]);\n                    }\n                }    \n            }, true);\n        }\n    };\n});\n    ","app.controller(\"login\", ['$scope', '$rootScope', function ($scope, $rootScope) {\n\n    $scope.keypressed = function (code) { // Al oprimir enter hacer login con los datos de autenticacion\n        if (code === 13) // Verificar codigo de tecla\n            $scope.btn_click();\n    };\n\n    $scope.loginAttempt = function () { // Intentar logear usuario\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            $rootScope.loading = true;\n            Cipressus.users.signIn($scope.userForm).then(function (res) {\n                console.log(res);                \n                setTimeout(function(){\n                    if($rootScope.user) // Si ya se realizo el chequeo y descarga de datos\n                        M.toast({\n                            html: $rootScope.greetings()+\" \"+$rootScope.user.name+\"!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 5000\n                        });\n                },2000);\n                $rootScope.$apply();\n            }).catch(function (err) {                \n                $scope.userForm.password = null;\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            });\n        } else {\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.retrievePassword = function () {\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            Cipressus.users.resetPwd($scope.userForm.email).then(function (res) {\n                console.log(res);\n                M.toast({\n                    html: \"Listo! Te enviamos el formulario a tu correo electrónico\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2500\n                });\n            }).catch(function (err) {\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n            });\n        }else{\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.registerNewUser = function () {\n        var formOk = false; // Chequeo de formulario\n        if (typeof($scope.userForm) != 'undefined'){ // Al menos un dato\n            $scope.userForm.degree = document.getElementById(\"degreeSelect\").value; // No funciona el ng-model\n            if($scope.userForm.name != \"\" && $scope.userForm.secondName != \"\" && typeof($scope.userForm.lu) != 'undefined' && $scope.userForm.degree != \"\") // Chequeo de campos\n                formOk = true;\n        }\n        if (formOk) { // Registrar usuario\n            if($scope.userForm.password == $scope.passwordConfirm){ // Contraseñas ingresadas deben coincidir\n                Cipressus.users.signUp($scope.userForm).then(function (res) {\n                    console.log(res);\n                    M.toast({\n                        html:  $rootScope.greetings()+\" \"+$scope.userForm.name+\"!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                }).catch(function (err) {\n                    console.log(err[0]);\n                    M.toast({\n                        html: err[1],\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                });\n            }else{ // Si no coinciden, avisar\n                console.log(\"Confirmación de contraseña fallida\");                \n                M.toast({\n                    html: \"Verificación de contraseña incorrecto!\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            }\n        }else{ \n            console.log(\"Formulario incompleto\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.updateButtons = function () { // De acuerdo al modo, cambia el texto de los botones y los callbacks\n        switch ($scope.login_mode) {\n            case 0: // login\n                $scope.btn_text = \"Iniciar sesión\";\n                $scope.menu_left = \"Registrarse\";\n                $scope.menu_right = \"¿Olvidó su contraseña?\";\n                $scope.btn_click = $scope.loginAttempt;\n                $scope.welcomeText = \"Iniciar sesión en \";\n                break;\n            case 1: // registro\n                $scope.btn_text = \"Registrarse\";\n                $scope.menu_left = \"¿Olvidó su contraseña?\";\n                $scope.menu_right = \"Iniciar sesión\";\n                $scope.btn_click = $scope.registerNewUser;\n                $scope.welcomeText = \"Registrarse en \";\n                break;\n            case 2: // recuperacion\n                $scope.btn_text = \"Recuperar contraseña\";\n                $scope.menu_left = \"Iniciar sesión\";\n                $scope.menu_right = \"Registrarse\";\n                $scope.btn_click = $scope.retrievePassword;\n                $scope.welcomeText = \"Recuperar contraseña de \";\n                break;\n        }\n    };\n\n    $scope.login_mode = 0; // 0->login; 1->registro; 2->recuperacion de clave\n    $scope.updateButtons();\n    $rootScope.bodyClass = \"body-login\";\n    M.FormSelect.init(document.querySelectorAll('select'), {});    \n    setTimeout(function(){M.updateTextFields();},1500); // Esto no funciona \n}]);","app.controller(\"home\", ['$scope', '$rootScope', '$location', 'localStorageService', function ($scope, $rootScope, $location, localStorageService) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    $scope.testFSAnswers = []; // Objeto auxiliar para mostrar las respuestas del tests (esta con un watch dentro de la directiva)\r\n\r\n    ///// Cuestionario Felder-Silvermann\r\n    $scope.testStatus = 0; // 0->Espera inicio, 1->Espera completar respuestas, 2->Respuestas completas, espera \"Finalizar\", 3->Respuestas enviados\r\n    if(!$rootScope.user.test_fs && !$rootScope.user.admin && $rootScope.user.enrolled){ // Si el usuario no es admin y aun no responde el test de FS, mostrar modal\r\n        var test_modal = M.Modal.init(document.getElementById(\"test_modal\"), {\r\n            dismissible: false\r\n        });\r\n\r\n        $scope.loadTest = function () { // Mostrar preguntas\r\n            $scope.test_FS = Cipressus.test_FS.questions;\r\n            $scope.results = localStorageService.get(\"testFS\");\r\n            if (!$scope.results)\r\n                $scope.results = {\r\n                    startTime: Date.now(),\r\n                    answers: [],\r\n                    timeline: [],\r\n                    changes: []\r\n                };\r\n            $scope.testStatus = 1; // Mostrar test\r\n        };\r\n\r\n        $scope.putOption = function (quest, opt) {\r\n            if ($scope.results.answers[quest] != undefined) { // Si ya existia la respuesta, registrar cambio\r\n                $scope.results.changes.push({\r\n                    quest: quest,\r\n                    prev: $scope.results.answers[quest],\r\n                    next: opt\r\n                });\r\n            }\r\n            $scope.results.answers[quest] = opt; // Respuesta\r\n            $scope.results.timeline[quest] = (Date.now() - $scope.results.startTime) / 1000; // Tiempo de respuesta en segundos\r\n            localStorageService.set(\"testFS\", $scope.results); // Actualizar en LS\r\n            if ($scope.results.answers.filter(function (value) {\r\n                    return value !== undefined && value !== null\r\n                }).length == 44) // Cantidad de preguntas contestadas\r\n                $scope.testStatus = 2; // Habilitar boton \"finalizar\"\r\n        };\r\n\r\n        $scope.saveTestResults = function () { // Guardar los resultados del test y mostrar resultados\r\n            $rootScope.loading = true;\r\n            console.log($scope.results);\r\n            $scope.testFSAnswers = $scope.results.answers; // Copio en otra variable para que se ejecute la fc de la directiva\r\n            Cipressus.db.set($scope.results, \"users_public/\" + $rootScope.user.uid + \"/test_fs\")\r\n                .then(function (res) {\r\n                    //console.log(res);\r\n                    M.toast({\r\n                        html: \"Gracias por tu tiempo!\",\r\n                        classes: 'rounded green darken-3',\r\n                        displayLength: 2000\r\n                    });                    \r\n                    $scope.testStatus = 3; // Para mostrar resultados, pasar al modo 3\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al guardar resultados\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                })\r\n        };\r\n\r\n        test_modal.open();\r\n    }\r\n\r\n    var downloadNews = function () { // Descargar noticias y usuarios de la db\r\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\r\n        var authors = []; // Uids de usuarios que hicieron publicaciones\r\n        if($rootScope.user.course){ // Si tiene asignado un curso, descargar noticias\r\n            Cipressus.db.getSorted('news/'+$rootScope.user.course, 'order') // Descargar lista de novedades\r\n                .then(function (snapshot) {\r\n                    snapshot.forEach(function (childSnapshot) { // Lista ordenada\r\n                        var child = childSnapshot.val();\r\n                        child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\r\n                        if (authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\r\n                            authors.push(child.author); // Agregar a la lista\r\n                        $scope.news.unshift(child); // Sentido inverso para que las nuevas noticias queden arriba\r\n                    });\r\n                    var ready = authors.length; // Cantidad de descargas que hay que hacer\r\n                    $scope.users = {};\r\n                    if(authors.length > 0){\r\n                        for (var k in authors) {\r\n                            Cipressus.db.get('users_public/' + authors[k]) // Descargar datos de los autores de publicaciones solamente\r\n                                .then(function (user_data) {\r\n                                    $scope.users[authors[k]] = user_data;\r\n                                    ready--; // Contar descarga\r\n                                    if (ready == 0) { // Si no quedan mas, terminar\r\n                                        newsData = { // Objeto a guardar en localStorage\r\n                                            news: $scope.news,\r\n                                            authors: $scope.users,\r\n                                            last_update: Date.now()\r\n                                        };\r\n                                        localStorageService.set(\"newsData_\"+$rootScope.user.course, newsData);\r\n                                        $rootScope.loading = false;\r\n                                        $rootScope.$apply();\r\n                                    }\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                });\r\n                            }\r\n                    }else{\r\n                        $rootScope.loading = false;\r\n                        $rootScope.$apply();\r\n                    }\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                });\r\n        }else{ // Si el usuario no tiene curso asignado\r\n            $rootScope.loading = false;\r\n        }\r\n    };\r\n\r\n\r\n    // Monitoreo de actividad\r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"home\").catch(function (err) {\r\n        console.log(err);\r\n    });\r\n\r\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\r\n    if (newsData) { // Si hay datos en local storage\r\n        $scope.news = newsData.news;\r\n        $scope.users = newsData.authors;\r\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\r\n            .then(function (news_update) {\r\n                if (newsData.last_update < news_update) // Hay cambios en la base de datos\r\n                    downloadNews(); // Descargar de db y guardar en localstorage\r\n                else { // Si no hay cambios, terminar\r\n                    $rootScope.loading = false;\r\n                    $rootScope.$apply();\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al acceder a la base de datos\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 2000\r\n                });\r\n                $rootScope.loading = false;\r\n                $rootScope.$apply();\r\n            });\r\n    } else { // Si no hay datos, descargar si o si\r\n        downloadNews();\r\n    }\r\n}]);","app.controller(\"dashboard\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged) $location.path(\"/login\");\n    \n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function(data){ // Actualiza el grafico de proporciones de notas\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '100%'},\n            title: {\n                text: 'Proporción de calificaciones'\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions:{\n                series:{\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            updatePolarPlot(event.point.node.id);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",data: data, allowDrillToNode: true,cursor: 'pointer',\n                dataLabels: {format: '{point.name}',filter: {property: 'innerArcLength',operator: '>',value: 16}},\n                levels: [\n                    {level: 1,levelIsConstant: false,dataLabels: {filter: {property: 'outerArcLength',operator: '>',value: 64}}},\n                    {level: 2,colorIndex: 1},\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}}\n                ]\n            }],\n            tooltip: {headerFormat: \"\",pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'}\n        });\n    };\n\n    var updatePolarPlot = function(id){ // Actualizar grafico de notas\n        if($scope.user){ // Si el alumno no esta habilitado por el docente no se muestra nada\n            var data = []; // Datos para mostrar en el grafico polar\n            // Buscar nodo de la actividad seleccionada\n            $scope.currentNode = Cipressus.utils.searchNode($scope.activities,id); \n            var value = Cipressus.utils.eval($scope.user,$scope.currentNode)/$scope.currentNode.score*100;\n            $scope.currentActivityScores = { // Para detallar textualmente\n                name: $scope.currentNode.name,\n                points: ($scope.currentNode.score*value/100).toFixed(2), \n                score: value.toFixed(2),\n                children:[] // Asjuntar los nodos hijos\n            };\n            for(k in $scope.currentNode.children){ // Para cada sub actividad\n                // Calcular nota de las sub actividades\n                var subValue = Cipressus.utils.eval($scope.user,$scope.currentNode.children[k])/$scope.currentNode.children[k].score*100;\n                // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n                $scope.currentActivityScores.children.push({\n                    name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                    points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                    score: subValue.toFixed(2) // Nota en porcentaje\n                });\n                data.push({ // Agregar nota de esa actividad a los datos para el chart\n                    y: $scope.currentNode.children[k].score,\n                    z: parseInt(subValue.toFixed(2)),\n                    name: $scope.currentNode.children[k].name\n                })\n            }\n            $scope.$apply();\n            Highcharts.chart('variable_pie_container', {\n                chart: {type: 'variablepie',height: '100%'},\n                credits:{enabled:false},\n                title: {text: 'Mis calificaciones'},\n                tooltip: {\n                    headerFormat: '',\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                        'Nota actividad: <b>{point.z}%</b><br/>'\n                },\n                series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n            });\n        }\n    };\n\n    var updateProgressPlot = function(){ // Generar grafico polar de progreso de la materia\n        var progressData = [ // Progreso de la materia\n            {\n                name: 'Avance programa',\n                y: totalEvents-futureEvents,\n                color: \"#8181F7\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Restantes',\n                y: futureEvents,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        var attendanceData = [ // Porcentaje de asistencia\n            {\n                name: 'Presente',\n                y: $scope.user.scores.asistencia.score,\n                color: \"#FF4444\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Ausente',\n                y: 100-$scope.user.scores.asistencia.score,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        \n        Highcharts.chart('progress_pie_container', {\n            chart: {\n                type: \"pie\",\n                plotBorderWidth: 0\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: 'Mi participación'\n            },\n            tooltip: {\n                pointFormat: '<b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {                    \n                    startAngle: -90,\n                    endAngle: 90,\n                    center: ['50%', '50%']\n                }\n            },\n            series: [\n                {name: 'Asistencia',size: '70%',data: attendanceData},\n                {name: 'Progreso',innerSize: '70%',data: progressData},\n            ]\n        });        \n    };\n\n    var updateBarPlot = function () { // Genera los arreglos de calificaciones\n\n        var seriesData = [];\n        var drillDownData = [];\n\n        for (var k in $scope.users) { // Para cada usuario\n            if(!$scope.users[k].admin && $scope.users[k].scores && $scope.users[k].course == $rootScope.user.course){ // Si tiene notas, no es admin y coincide con el curso\n                seriesData.push({ // Evaluar e insertar resultado en array\n                    name: k,\n                    y: Cipressus.utils.eval($scope.users[k],$scope.activities),\n                    color: k==$rootScope.user.uid ? \"#FF0000\":\"#AAAAAA\",                    \n                    drilldown: k\n                });\n\n                var tempData = []; // Arreglo temporal con notas del alumno\n                for(var j in $scope.activities.children){ // Evaluar tambien las principales actividades\n                    tempData.push([\n                        $scope.activities.children[j].id,\n                        Cipressus.utils.eval($scope.users[k],$scope.activities.children[j])/$scope.activities.children[j].score*100\n                    ]);\n                }\n\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\n                    name: k==$rootScope.user.uid ? \"Yo\" : \"#\"+(seriesData.length+1),\n                    id: k,\n                    data:tempData\n                })\n            }\n        }\n\n        // Ordenar datos por nota\n        seriesData.sort( function(a,b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0)}); \n        // Renombrar datos por sus ordenes excepto mi nota\n        for(var k in seriesData)\n            seriesData[k].name = seriesData[k].name == $rootScope.user.uid ? \"Yo\" : \"#\"+(parseInt(k)+1);\n\n        \n        Highcharts.setOptions({\n            lang: {\n                drillUpText: '<< Volver a {series.name}'\n            }\n        });\n\n        Highcharts.chart('barplot_container', {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Calificaciones del curso'\n            },\n            xAxis: {\n                type: 'category'\n            },\n            yAxis: {\n                title: {\n                    text: 'Puntaje acumulado'\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.y:.1f} pts'\n                    }\n                }\n            },\n\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f} pts</b>'\n            },\n\n            series: [{\n                name: \"Alumno\",                \n                data:seriesData\n            }],\n            drilldown:{\n                series: drillDownData\n            }\n        });\n    };\n\n    $scope.drillUp = function () {\n        $(\"#barplot_container\").highcharts().drillUp();\n    };\n\n    var updateAttendancePlot = function(){\n        var categories = []; // Lista de fechas de los eventos\n\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\n\n        if($scope.user.attendance){\n            var data = []; // Asistencia acumulada por clase\n            var evCnt = 0; // Contador de eventos\n            var evAtt = 0; // Contador de eventos asistidos\n            for(var k in $scope.eventsAll){\n                if($scope.eventsAll[k].start < Date.now() && $scope.eventsAll[k].attendance){\n                    evCnt++; // Contar evento\n                    if($scope.user.attendance[k]) // Si asistio a esta clase\n                        evAtt++; \n                    if(evAtt != 0)\n                        data.push(evAtt/evCnt*100);\n                    else \n                        data.push(0);\n                    if(first) // Primera pasada\n                        categories.push($rootScope.getTime(3,$scope.eventsAll[k].start)); // Agregar evento a la lista\n                }\n            }\n            first = false;\n\n            Highcharts.chart('attendance_container', {\n                chart: {\n                    type: 'spline'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: 'Asistencia a clases'\n                },\n                xAxis: {\n                    categories: categories\n                },\n                series: [{\n                    name:'Mi asistencia',\n                    data: data\n                }]\n            });\n        }\n    };\n\n    // Inicializacion \n    var totalEvents=0, futureEvents=0, attendableEvents=0;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"dashboard\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar arbol de actividades del curso actual\n        .then(function(activities_data){\n            $scope.activities = activities_data; // Nodo root del arbol de notas\n            Cipressus.db.get('users_private') // Descargar datos de todos los usuarios #TODO: filtrar a los del curso actual\n                .then(function(user_data){\n                    $scope.users = user_data;\n                    $scope.user = user_data[$rootScope.user.uid];\n                    if($scope.user){ // Si ya fue aprobado por admin\n                        // Si aun no fue evaluado en nada, dejar arreglos vacios (porque en DB no se guardan)\n                        if(typeof($scope.user.scores) == 'undefined')\n                            $scope.user.scores = [];\n                        if(typeof($scope.user.submits) == 'undefined')\n                            $scope.user.submits = [];\n                    }\n                    // Actualizar graficos al nodo root\n                    var arr = Cipressus.utils.getArray($scope.activities);\n                    $scope.$apply(); // Este es para que actualice la vista antes de graficar\n                    updateSunburst(arr);                    \n                    updatePolarPlot($scope.activities.id);                    \n                    $rootScope.$apply(); \n                    // Descargar lista de eventos para linea del tiempo y para evaluar asistencia del usuario\n                    $scope.events=[];                    \n                    Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                    .then(function(events_data){\n                        $scope.eventsAll = {};\n                        events_data.forEach(function(childSnapshot){\n                            $scope.eventsAll[childSnapshot.key] = childSnapshot.val();\n                            var ev = childSnapshot.val();\n                            totalEvents++; // Contar actividad (se usa para asistencia y avance del programa)\n                            if(ev.start > Date.now()){ // Si es un evento futuro\n                                futureEvents++; // Contar los que faltan\n                                if($scope.events.length < 5){ // Agregar solamente 5\n                                    // Asignar lado de linea del tiempo alternados\n                                    ev.side = $scope.events.length%2 ? \"tl-right\" : \"tl-left\";\n                                    $scope.events.push(ev); // Agregar evento al arreglo  \n                                }\n                            }else{ // Si es evento que ya paso\n                                if(ev.attendance) // Y si tiene asistencia habilitada\n                                    attendableEvents++; // Contar para calcular porcentaje de asistencia\n                            }\n                        });\n                        for(var k in $scope.users) // Calcular asistencia para todos\n                            if($scope.users[k]){ // Si es alumno inscripto, existe este objeto\n                                if($scope.users[k].scores){ // Si tiene alguna calificacion\n                                    if($scope.users[k].attendance){ // Si tiene asistencia a algun evento\n                                        var userAttendedEvents = Object.getOwnPropertyNames($scope.users[k].attendance).length; // Cantidad de clases asistidas por el usuario\n                                        var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0; // Calcular porcentaje de asistencia\n                                        $scope.users[k].scores.asistencia = {\n                                            score: att, \n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };  \n                                    }else{ // Si no asistio a nada, le dejo la asitencia en 0\n                                        $scope.users[k].scores.asistencia = {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };    \n                                    }\n                                }else{ // Si no tiene puntajes, crear al menos la asistencia para el progreso                             \n                                    $scope.users[k].scores = {\n                                        asistencia: {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        }\n                                    };\n                                }            \n                            }\n                        if($scope.user)\n                            if($scope.user.scores)\n                                $scope.user.scores.asistencia = $scope.users[$rootScope.user.uid].scores.asistencia; // Copiar para el usuario actual\n                        updateProgressPlot(); // Actualizar el grafico de avance de la materia\n                        updatePolarPlot($scope.activities.id); // Actualizar nuevamente el grafico de notas ya que tiene asistencia\n                        updateBarPlot();\n                        updateAttendancePlot();\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    })\n                    .catch(function(err){ // events\n                        console.log(err);\n                        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    });\n                    \n                })\n                .catch(function(err){ // users_private\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                });        \n        })\n        .catch(function(err){ // activities\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n            $rootScope.$apply(); \n        });\n}]);","app.controller(\"calendar\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.events = []; // Arreglo de eventos (clases, labs, parciales)\n\n    // Componentes materialize\n    var viewModal = M.Modal.init(document.getElementById(\"view_modal\"), {});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {});\n    var confirmDeleteModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {});\n    var confirmMoveModal = M.Modal.init(document.getElementById(\"confirm_move_modal\"), {});\n    M.FormSelect.init(document.querySelectorAll('select'), {});\n\n    $scope.refreshCalendar = function(){ // Sincroniza arreglo de eventos con lo que se muestra\n        $('#calendar').fullCalendar('removeEvents'); // Para que no duplique\n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Renderizar todos\n    };\n\n    // Inicializar calendar\n    $('#calendar').fullCalendar({\n        weekends: false,\n        editable: $rootScope.user.admin,\n        locale: 'es-us',\n        lang: 'es',\n        allDaySlot:false,\n        minTime:\"08:00\",\n        maxTime:\"22:00\",\n        timeFormat: \"HH:mm\",\n        dateFormat: \"DD/MM\",\n        slotLabelInterval:\"01:00\",\n        slotLabelFormat: 'HH:mm',\n        header: { center: 'month,agendaWeek' },\n        eventSources: [{\n            events: $scope.events\n        }],\n        eventDrop: function( event ) { // Al soltar evento en otro casillero\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventResize: function(event){ // Extender o acortar horario de evento\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventClick: function(event) {\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: event.timestamp, // Esto hay que editarlo despues\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000, // GMT+3 (cosa de calendar)\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: event.timestamp, // Esto se edita despues\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB\n                id: event.id,\n                idx: event.idx,\n                startDay: moment(event.start).format(\"DD/MM\"),\n                startTime: moment(event.start).format(\"HH:mm\"),\n                endTime: moment(event.end).format(\"HH:mm\"),\n                fromNow: moment(event.start).fromNow()\n            };\n            viewModal.open();\n            $scope.$apply();\n        },\n        viewRender: function(view,element){\n            $scope.refreshCalendar();\n        }\n    });\n\n    $scope.confirmDeleteEvent = function(){\n        viewModal.close();\n        setTimeout(function(){confirmDeleteModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.editEvent = function(newEvent){ // Editar evento o crear nuevo\n        if(newEvent){ // Crear nuevo (click en +)\n            $scope.selectedEvent = {};\n            $scope.selectedEventExtras = null; // No tengo id ni idx y se deben definir\n            document.getElementById(\"event_date\").value = null;\n            document.getElementById(\"event_start_time\").value = null;\n            document.getElementById(\"event_end_time\").value = null;\n            document.getElementById(\"tag_select\").value = \"#aaaaaa\";\n        }else{ // Editar existente (click en evento del calendario)\n            viewModal.close();\n            document.getElementById(\"event_date\").value = moment($scope.selectedEvent.start).format(\"YYYY-MM-DD\");\n            document.getElementById(\"event_start_time\").value =  moment($scope.selectedEvent.start).format(\"HH:mm\");\n            document.getElementById(\"event_end_time\").value = moment($scope.selectedEvent.end).format(\"HH:mm\");\n            document.getElementById(\"tag_select\").value = $scope.selectedEvent.color;\n            setTimeout(function(){\n                M.updateTextFields();\n            },200);\n        }        \n        setTimeout(function(){editModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.saveEvent = function(){ // Guardar evento en DB\n        $rootScope.loading = true;\n        $scope.selectedEvent.author = $rootScope.user.uid;\n        $scope.selectedEvent.timestamp = Date.now();\n        $scope.selectedEvent.color = document.getElementById(\"tag_select\").value;\n        var date = document.getElementById(\"event_date\").value;\n        var startTime = document.getElementById(\"event_start_time\").value;\n        var endTime = document.getElementById(\"event_end_time\").value;\n        var start = moment(startTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        var end = moment(endTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        // Chequeo de formulario\n        var formStatus = 0;\n        if($scope.selectedEvent.title){\n            if($scope.selectedEvent.title == \"\")\n                formStatus = 1;\n        }else\n            formStatus = 2;\n        if(start && end){ // Si se pudo procesar fecha y hora\n            if(start < end){ // Si lo ingresado es coherente\n                $scope.selectedEvent.start = start;\n                $scope.selectedEvent.end = end;\n            }else\n                formStatus = 3;\n        }else\n            formStatus = 4;\n        if($scope.selectedEvent.info == 'undefined')\n            $scope.selectedEvent.info = \"\";\n        if(formStatus != 0){ // Si algo no estaba bien, mostrar error y salir\n            console.log(\"Error \"+formStatus);\n            console.log(\"Titulo\", $scope.selectedEvent.title);\n            console.log(\"Fecha y hora\",date,startTime,endTime);\n            M.toast({html: \"No se ingresó fecha u horarios correctamente\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            return;\n        }\n        // Si todo esta bien, guardar\n        if($scope.selectedEventExtras) // Si esta este objeto, hay que actualizar\n            Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n                $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n                $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n                $scope.refreshCalendar();\n                M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEvent = null; // Para que no se vuelva a utilizar por error\n                $scope.selectedEventExtras = null;\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        else // Si es nuevo evento, insertar en DB\n            Cipressus.db.push($scope.selectedEvent,\"events/\"+$rootScope.user.course)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.idx = $scope.events.length;\n                $scope.selectedEvent.id = snapshot.key;\n                $scope.events.push($scope.selectedEvent); // Insertar en arreglo\n                $('#calendar').fullCalendar('renderEvent',$scope.selectedEvent);\n                M.toast({html: \"Nuevo evento registrado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.deleteEvent = function(){ // Borrar el ultimo evento clickeado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            $scope.events.splice($scope.selectedEventExtras.idx,1); // Quitar del arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n            M.toast({html: \"Evento eliminado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmDeleteModal.close();      \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"No se pudo eliminar, intente en otro momento\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n    $scope.moveEvent = function(){ // Mover el elemento arrastrado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            // Agregarle los atributos de indice e identificador para que quede en local\n            $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n            $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n            $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n            $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n            $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null;\n            M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmMoveModal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };    \n    \n    Cipressus.utils.activityCntr($rootScope.user.uid,\"calendar\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get(\"events/\"+$rootScope.user.course) // Descargar todos los eventos del curso y renderizar en calendar\n    .then(function(events_data){\n        var idx = 0; // Guardo los indices del arreglo\n        for(k in events_data){ // Convertir las actividades en eventos de calendar\n            var ev = events_data[k];\n            ev.start = moment(ev.start).format();\n            ev.end = moment(ev.end).format();\n            ev.id = k;\n            ev.idx = idx; // El indice me sirve para ubicarlo al editar evento\n            ev.durationEditable = $rootScope.user.admin;\n            $scope.events.push(ev);\n            idx++;\n        }   \n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Mostrar todos\n        $rootScope.loading = false;\n        $scope.$apply();\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });\n}]);","app.controller(\"sources\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n\n    $scope.pushFiles = function (folderName) { // Agregar archivos a un directorio\n        \n        var uploadFiles = function(folderKey){ // Subir los archivos al storage (es metodo porque se llama de distintos lugares)\n            if (document.getElementById(\"filesInput\").files.length > 0) { // Si se cargaron las fotos al storage        \n                var fileList = [];\n                var filenames = [];\n                var uploadingFiles = document.getElementById(\"filesInput\").files; // Lo copio para usar mas adelante fuera de scope            \n                for (var k in uploadingFiles) {\n                    if (typeof (uploadingFiles[k]) == \"object\") {\n                        fileList.push(uploadingFiles[k]);\n                        filenames.push(Cipressus.utils.generateFileName(25) + \".\" + uploadingFiles[k].name.split(\".\")[1]); // Nombre aleatorio mas formato de archivo\n                    }\n                }\n    \n                Cipressus.storage.putMultiple(fileList, \"Files\", filenames)\n                    .then(function (res) { // res contiene el arreglo de urls asignadas por firebase y los pesos\n                        $scope.fileListQueue = []; // LIsta de archivos que hay que guardar en database\n                        for (var k in res.urls) { // Para cada url\n                            $scope.fileListQueue.push({\n                                name: uploadingFiles[k].name.split(\".\")[0], // Extraer nombre de archivo\n                                size: res.sizes[k], // Tamanio de archivo\n                                format: uploadingFiles[k].name.split(\".\")[1], // Extension del archivo\n                                link: res.urls[k], // Url de los archivos\n                                filename: filenames[k], // Nombre de archivo en el storage\n                                uploaded: Date.now(),\n                                downloads: 0\n                            });\n                        }\n                        Cipressus.db.pushMultiple($scope.fileListQueue, \"sources/\" + folderKey + \"/files\")\n                            .then(function (res2) {\n                                // Actualizar tablas (carpetas) de archivos\n                                var idx = 0; // Contador para items de carpeta o directorio\n                                if(!$scope.sources){ // Para la primera vez cuando no hay ningun directorio\n                                    $scope.sources = {};\n                                    $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                }else{ // Existen directorios\n                                    if(!$scope.sources[folderKey]){ // Si se creo el directorio por primera vez\n                                        $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                    }\n                                    if(!$scope.sources[folderKey].files) // Puede existir el directorio pero no tener archivos (En caso de que se hayan borrado todos)\n                                    $scope.sources[folderKey].files = {}; // Crear solo el objeto vacio\n                                }\n                                for(var k in res2){ // Para cada key   \n                                    $scope.sources[folderKey].files[res2[k].key]=$scope.fileListQueue[idx];\n                                    idx++;\n                                }\n                                // Cerrar dialogo\n                                M.toast({\n                                    html: \"Direcetorio actualizado.\",\n                                    classes: 'rounded green darken-3',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                document.getElementById(\"filesInput\").value = null;\n                                document.getElementById(\"filesInputText\").value = null;\n                                $scope.$apply();\n                            })\n                            .catch(function (err) {\n                                console.log(err);\n                                M.toast({\n                                    html: \"Ocurrio un error guardar archivos.\",\n                                    classes: 'rounded red',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                $scope.$apply();\n                            });\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al subir archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n    \n            } else {\n                M.toast({\n                    html: \"Debe seleccionar los archivos primero\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                return;\n            }\n        };\n\n        if(!folderName){ // Si no eligio nombre de carpeta, no continuar\n            M.toast({\n                html: \"Debe indicar el nombre del directorio\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }else{ // Si hay al menos algun caracter, continuar\n            \n            $rootScope.loading = true;\n\n            /// Buscar el key del directorio que tenga este name\n            var folderKey = \"\";\n            for(var k in $scope.sources)\n                if(folderName == $scope.sources[k].name) // Coincidencia\n                    folderKey = k; // Identificador a donde van los archivos subidos\n\n            if(folderKey == \"\"){ // Si no se encontro, crear nueva entrada                \n                Cipressus.db.push({name:folderName},\"sources\")\n                .then(function(res){\n                    folderKey = res.key;\n                    uploadFiles(folderKey); // Continuar con la carga de archivos\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({\n                        html: \"Error al generar directorio\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });    \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si la entrada ya existe\n                uploadFiles(folderKey);  // Continuar con la carga de archivos\n            }\n        }\n    };\n\n    $scope.deleteFile = function(folder,key){ // Marcar el archivo a borrar para que el usuario confirme        \n        fileKeyToDelete = [folder,key];\n        $scope.fileToDelete = $scope.sources[folder].files[key];\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.fileToDelete.filename, \"Files\")\n            .then(function (res) {\n                // Ahora hay que borrar la referencia de la db\n                Cipressus.db.set(null, \"sources/\"+fileKeyToDelete[0]+\"/files/\"+fileKeyToDelete[1]) // #TODO: Eliminar carpeta si ya no quedan mas archivos en la entrada\n                    .then(function (res2) {\n                        // Eliminar los elementos de la vista                                        \n                        delete $scope.sources[fileKeyToDelete[0]].files[fileKeyToDelete[1]];\n                        fileKeyToDelete = [];\n                        M.toast({\n                            html: \"Archivo eliminado!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        confirm_delete_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al eliminar archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al eliminar archivos\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n    $scope.openImage = function (link) { // Abrir archivos de imagen en modal\n        document.getElementById(\"image_viewer\").src = link;\n        image_viewer_modal.open();\n    };\n\n    $scope.openPdfViewer = function(url){ // Abrir el pdf en un modal\n        $scope.pdfURL = url;\n        pdf_viewer_modal.open();\n    };\n\n    ///// Inicialización controller\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {});\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var pdf_viewer_modal = M.Modal.init(document.getElementById(\"pdf_viewer_modal\"), {preventScrolling: false});\n    var image_viewer_modal = M.Modal.init(document.getElementById(\"image_viewer_modal\"), {preventScrolling: false});\n\n    var fileKeyToDelete = [];\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"sources\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('sources') // Descargar lista de novedades\n        .then(function (snapshot) {\n            //console.log(snapshot);\n            $scope.sources = snapshot;\n            // Lista de carpetas para autocompletador\n            var folderList = {};\n            for(var k in $scope.sources)\n                folderList[$scope.sources[k].name] = null;\n            M.Autocomplete.init(document.querySelector('.autocomplete'), {data: folderList}); \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"submissions\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $scope.resetForm = function(){ // Restablecer el formulario\n        $scope.selectedActivity = null;\n    };\n\n    $scope.pushFile = function () { // Agregar archivos de entrega\n        \n        if($scope.selectedActivity){ // Si eligio el nombre de la actividad correctamente, continuar\n            var file = document.getElementById(\"fileInput\").files[0];\n            if(file){ // Si el input tiene archivos\n                $rootScope.loading = true;\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + file.name.split(\".\")[1];\n                var observs = document.getElementById(\"obsTextarea\").value; // Observaciones\n                if(!observs) observs = \"\"; // Evitar que la variable sea undefined o null\n                Cipressus.storage.put(file,\"Submissions\",filename)\n                .then(function (res) {\n                    console.log(res);\n                    var reference = {\n                        name: file.name.split(\".\")[0], // Extraer nombre de archivo\n                        activityId: $scope.selectedActivity.id,\n                        activityName: $scope.selectedActivity.name,\n                        size: res.size, // Tamanio de archivo\n                        format: file.name.split(\".\")[1] ? file.name.split(\".\")[1] : \"indef.\", // Extension del archivo\n                        link: res.url, // Url \n                        filename: filename, // Nombre de archivo en el storage\n                        authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n                        status: [{ // Estados de la evaluacion (se concatenan)\n                            timestamp: Date.now(),\n                            action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                            display: \"Archivo subido\",\n                            user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                            obs: observs // Cada status lleva un mensaje opcional\n                        }]\n                    };\n                    Cipressus.db.push(reference,\"submissions/\"+$rootScope.user.course)\n                    .then(function (res2) {\n                        console.log(res2);\n                        $scope.submissions[res2.key] = reference;\n                        $scope.submCnt++;\n                        document.getElementById(\"fileInput\").files[0] = null;\n                        document.getElementById(\"fileInputText\").value = \"\";\n                        M.toast({\n                            html: \"Entrega realizada correctamente\",\n                            classes: 'rounded green',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        files_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al subir el archivo\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al subir el archivo\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si no ingreso ningun archivo\n                console.log(\"Problema con el archivo\");\n                M.toast({\n                    html: \"Debe seleccionar un archivo!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });            \n            }\n        }else{ // Si no eligio nombre de actividad, no continuar\n            console.log(\"Identificador de actividad desconocido\");\n            M.toast({\n                html: \"Debe seleccionar una actividad!\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }\n    };\n\n    $scope.downloaded = function(key){ // Agregar registro de movimiento sobre este archivo\n        if($scope.submissions[key].status[$scope.submissions[key].status.length-1].action == 0){ // Solo la primera vez\n            var newStatus = { // Nuevo estado del envio a registrar\n                timestamp: Date.now(),\n                action: 1, // 0 -> subido, 1 -> evaluando (descargado), 2 -> revisar, 3 -> evaluado\n                display: \"Archivo en revisión\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                obs: $scope.submissions[key].status[$scope.submissions[key].status.length-1].obs // Copiar original\n            };\n            $scope.submissions[key].status.push(newStatus); // Agrego el estado al objeto local\n            Cipressus.db.update($scope.submissions[key],\"submissions/\"+$rootScope.user.course+\"/\"+key) // Registrar accion\n            .then(function (res) {\n                M.toast({\n                    html: \"Movimiento registrado\",\n                    classes: 'rounded green',\n                    displayLength: 1000\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al registrar movimiento\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            });\n        }else{\n            console.log($scope.submissions[key].status);\n            M.toast({\n                html: \"El archivo ya está siendo evaluado!\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });\n        }\n    };\n\n    $scope.viewSubm = function(key){ // Seleccionar entrega para ver detalles\n        $scope.submKeyView = key;\n        submission_modal.open();\n    };\n\n    $scope.evaluated = function(key){ // Seleccion de entrega para marcar como evaluada (para confirmar accion)\n        $scope.evaluatingKey = key;\n        confirm_evaluate_modal.open();\n    };\n\n    $scope.confirmEvaluate = function(){ // Marcar entrega como evaluada\n        var action = parseInt(document.getElementById(\"evaluation_select\").value);\n        var obs = document.getElementById(\"obsTextarea2\").value;\n        if(obs == \"\") obs = \"Sin observaciones\"; // Forzar valor de resultado\n        if(action){\n            if($scope.submissions[$scope.evaluatingKey].status[$scope.submissions[$scope.evaluatingKey].status.length-1].action == 1){ // Solo la primera vez\n                $rootScope.loading = true;\n                var newStatus = { // Nuevo estado del envio a registrar\n                    timestamp: Date.now(),\n                    action: action, // 2 -> revisar, 3 -> aprobado\n                    display: action == 2 ? \"Revisar\" : action == 3 ? \"Aprobado\" : \"?\",\n                    user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                    obs: obs // Mensaje del evaluador\n                };\n                $scope.submissions[$scope.evaluatingKey].status.push(newStatus); // Agrego el estado al objeto local\n                Cipressus.db.update(JSON.parse(angular.toJson($scope.submissions[$scope.evaluatingKey])),\"submissions/\"+$rootScope.user.course+\"/\"+$scope.evaluatingKey) // Registrar accion\n                .then(function (res) {\n                    M.toast({\n                        html: \"Movimiento registrado\",\n                        classes: 'rounded green',\n                        displayLength: 1000\n                    });\n                    $rootScope.loading = false;\n                    confirm_evaluate_modal.close();\n                    document.getElementById(\"evaluation_select\").value = \"\";\n                    document.getElementById(\"obsTextarea2\").value = \"\";\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrio un error al registrar movimiento\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                });\n            }else{\n                console.log($scope.submissions[key].status);\n                M.toast({\n                    html: \"El archivo ya fue evaluado!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            }\n        }else{\n            console.log(\"Input select con opcion por defecto.\");\n            M.toast({\n                html: \"Seleccione resultado de evaluación\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });\n        }\n\n        \n    };\n\n    $scope.deleteFile = function(key){ // Marcar el archivo a borrar para que el usuario confirme        \n        $scope.fileKeyToDelete = key;\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.submissions[$scope.fileKeyToDelete].filename, \"Submissions\")\n            .then(function (res) {\n                // Ahora hay que borrar la referencia de la db\n                Cipressus.db.set(null, \"submissions/\"+$rootScope.user.course+\"/\"+$scope.fileKeyToDelete) \n                    .then(function (res2) {\n                        // Eliminar entrada de la tabla y decrementar contador de elementos\n                        delete $scope.submissions[$scope.fileKeyToDelete];\n                        $scope.fileKeyToDelete = \"\";\n                        $rootScope.loading = false;\n                        $scope.submCnt--;\n                        confirm_delete_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al eliminar archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al eliminar archivos\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n\n    ///// Inicialización controller\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var confirm_evaluate_modal = M.Modal.init(document.getElementById(\"confirm_evaluate_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var submission_modal = M.Modal.init(document.getElementById(\"submission_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n\n    $scope.fileKeyToDelete = \"\"; // Identificador del archivo seleccionado para elliminar previo confirmacion\n    $scope.selectedActivity = null; // Actividad seleccionada en el input del formulario antes de elegir archivo\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"submissions\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('submissions/'+$rootScope.user.course) // Descargar lista de archivos entregados por todos los alumnos\n        .then(function (submissions_data) { // Nota: No hay filtrado de archivos descargados -> usuarios pueden leer entregas de otros alumnos\n            $scope.submissions = {};\n            $scope.submCnt = 0; // Contador de entregas\n            if($rootScope.user.admin && submissions_data){ // Si es admin, bajar todas las entregas\n                $scope.submissions = submissions_data; // Lista de entregas realizadas\n                $scope.submCnt = Object.getOwnPropertyNames($scope.submissions).length\n            }else // Si no es admin, descargar las realizadas por este usuario o por comision\n                for(var k in submissions_data){ // Buscar entregas realizadas \n                    if(submissions_data[k].authors.indexOf($rootScope.user.uid) > -1){\n                        $scope.submissions[k] = submissions_data[k]; // Agregar entrega a la lista\n                        $scope.submCnt++;\n                    }\n                }\n            Cipressus.db.get('users_public') // Descargar lista de usuarios para tener info de las comisiones\n            .then(function (users_data) {\n                $scope.users = users_data; // Lista de usuarios\n                Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar datos de la materia para tener info de vencimientos\n                .then(function (activities_data) {\n                    $scope.activities = Cipressus.utils.getArray(activities_data);          \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                    M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                    document.getElementById(\"activity_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                        var sel = document.getElementById(\"activity_select\"); // Se puede usar this?\n                        var actIdx = $scope.activities.findIndex(function(x){ return x.id == sel.options[sel.selectedIndex].value}); // Buscar la actividad seleccionada\n                        $scope.selectedActivity = { // Objeto con info de la actividad sobre la que se entrega el trabajo\n                            id: sel.options[sel.selectedIndex].value, // Identificador de la actividad\n                            name: sel.options[sel.selectedIndex].text, // Nombre legible de la actividad\n                            deadline: $scope.activities[actIdx].dl.date // Vencimiento\n                        };\n                        $scope.$apply(); // Ver si hace falta\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al acceder a la base de datos\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"hardware\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.sidenav.close();        \r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"hardware\").catch(function (err) {console.log(err)});\r\n    \r\n    var initTester = function(){ // Inicializar controladores de la vista\r\n        if(Cipressus.hardware.status == \"CONNECTED\"){\r\n            \r\n            $scope.tester = [ // Entrada/salida del probador\r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}\r\n            ];\r\n        \r\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\r\n\r\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar la vista\r\n                $scope.$apply(); \r\n            };\r\n        }\r\n    };\r\n\r\n    var stopTester = function(){ // Al desconectar, borrar objeto para que no muestre nada\r\n        if($scope.tester)\r\n            $scope.tester = null;\r\n    };\r\n    \r\n    // Inicializar\r\n    initTester();\r\n\r\n    // Conectar callbacks\r\n    $rootScope.onWssDisconnect = function(){\r\n        stopTester();\r\n    };\r\n\r\n    $rootScope.onWssConnect = function(){\r\n        initTester();\r\n    };\r\n    \r\n}]);","app.controller(\"analizer\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();        \n    Cipressus.utils.activityCntr($rootScope.user.uid, \"analizer\").catch(function (err) {console.log(err)});\n\n    $scope.running = false; // Controlar encendido/apagado del analizador (inicialmente apagado)\n\n    var chart = Highcharts.chart('chart_container', {\n        chart: {\n            type: 'line',\n            animation: false,\n            height: \"50%\"\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: 'Analizador lógico'\n        },  \n        yAxis: {\n            title: {\n                text: 'Voltaje'\n            }\n        },        \n        tooltip: {\n            headerFormat: '<b>{series.name}</b><br/>',\n            pointFormat: '{point.y:.2f}'\n        },\n        legend: {\n            enabled: false\n        },\n        exporting: {\n            enabled: false\n        },\n        series: [{\n            name: 'Entrada 1',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 2',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 3',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 4',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 5',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 6',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 7',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 8',\n            data: [[Date.now(),0]]\n        }]\n    });\n\n    var series = chart.series; // Series de datos (inicialmente todo en 0 con un solo dato)\n\n    var initAnalizer = function(){ // Inicializar controladores de la vista\n        if(Cipressus.hardware.status == \"CONNECTED\"){\n        \n            $scope.tester = [ // Entrada/salida del probador\n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}\n            ];\n\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\n\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar el grafico   \n                var timestamp = Date.now(); \n                for(var k = 0; k < 8; k++)\n                    series[k].addPoint([timestamp, $scope.tester[k].input ? 5:0], false, series[k].data.length>300);\n            };\n        }\n    };\n\n    var startChartUpdater = function(){ // Esta funcion dispara el refresco continuo del grafico\n        chart.redraw(); // Redibujar\n        if($scope.running) // Si esta corriendo, disparar el timeout\n            setTimeout(startChartUpdater,100); // El periodo es de 100ms fijo\n    };\n\n    $scope.toggleStartStop = function(){// Iniciar-detener el analizador\n        $scope.running = !$scope.running;\n        if($scope.running)\n            startChartUpdater(); // Al iniciar, hay que disparar el evento por primera vez\n    };\n    \n    // Conectar callbacks\n    $rootScope.onWssDisconnect = function(){\n        if($scope.tester) $scope.tester = null;\n    };\n\n    $rootScope.onWssConnect = function(){\n        initAnalizer();\n    };\n\n    // Inicializar analizador logico\n    initAnalizer();\n    \n}]);","app.controller(\"simulator\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    $scope.updateFields = function(){ // Funcion auxiliar\n        setTimeout(function(){\n            M.updateTextFields();\n        },200);\n    };\n\n    $scope.getSimulations = function () { // Descargar lista de archivos de simulacion del usuario\n        if(!$scope.simulations){ // Si no se descargaron los archivos, bajar\n            $rootScope.loading = true;\n            Cipressus.db.get(\"users_public/\"+$rootScope.user.uid+\"/simulations\")\n            .then(function(simulations_data){\n                if(simulations_data){\n                    $scope.simulations = simulations_data;\n                    load_modal.open();\n                }else\n                    M.toast({html: \"No hay circuitos guardados!\",classes: 'rounded green darken-3',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al mostrar archivos\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si ya se habia descargado la info de la db, abrir directamente modal\n            load_modal.open();\n        }\n    };\n\n    $scope.loadCircuit = function(key){ // Cargar circuito\n        var data = JSON.parse($scope.simulations[key].data);\n        \n        simcir.clearDevices(); // Borrar caches de managers\n\n        // Poner barra de herramientas\n        data.showToolbox = true;\n        data.width = document.getElementById(\"simcir\").clientWidth;\n        data.height = document.getElementById(\"simcir\").clientHeight\n        data.toolbox = [\n          {\"type\":\"In\"},\n          {\"type\":\"Out\"},\n          {\"type\":\"Joint\"},\n          {\"type\":\"DC\"},\n          {\"type\":\"LED\"},\n          {\"type\":\"PushOff\"},\n          {\"type\":\"PushOn\"},\n          {\"type\":\"Toggle\"},\n          {\"type\":\"BUF\"},\n          {\"type\":\"NOT\"},\n          {\"type\":\"AND\"},\n          {\"type\":\"NAND\"},\n          {\"type\":\"OR\"},\n          {\"type\":\"NOR\"},\n          {\"type\":\"XOR\"},\n          {\"type\":\"XNOR\"},\n          {\"type\":\"OSC\"},\n          {\"type\":\"7seg\"},\n          {\"type\":\"16seg\"},\n          {\"type\":\"4bit7seg\"},\n          {\"type\":\"RotaryEncoder\"},\n          {\"type\":\"BusIn\"},\n          {\"type\":\"BusOut\"},\n          {\"type\":\"RS-FF\"},\n          {\"type\":\"JK-FF\"},\n          {\"type\":\"T-FF\"},\n          {\"type\":\"D-FF\"},\n          {\"type\":\"8bitCounter\"},\n          {\"type\":\"HalfAdder\"},\n          {\"type\":\"FullAdder\"},\n          {\"type\":\"4bitAdder\"},\n          {\"type\":\"2to4BinaryDecoder\"},\n          {\"type\":\"3to8BinaryDecoder\"},\n          {\"type\":\"4to16BinaryDecoder\"},\n          {\"type\":\"Virtual-In\"},\n          {\"type\":\"Virtual-Out\"},\n          {\"type\":\"Test-In\"},\n          {\"type\":\"Test-Out\"},\n          {\"type\":\"Audio-Out\"}\n        ];\n        simcir.setupSimcir($('#simcir'), data);\n        currentSim = {\n            key: key,\n            name: $scope.simulations[key].name\n        };\n        $scope.circuitFileName = $scope.simulations[key].name;\n        load_modal.close();\n    };\n\n    $scope.saveCircuit = function () {\n        $rootScope.loading = true;\n\n        // Verificar si el nombre existe para saber si hay que actualizar o crear nuevo\n        currentSim = {};\n        if($scope.simulations)\n            for(var k in $scope.simulations)\n                if($scope.simulations[k].name == $scope.circuitFileName) // Coincidencia\n                    currentSim = { // Guardar datos de actualizacion\n                        key: k,\n                        name: $scope.simulations[k].name\n                    };\n\n        // Crear objeto a guardar en db\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data(); // Objeto con datos de simulacion\n        //var data = JSON.stringify((({ devices, connectors }) => ({ devices, connectors }))(model)); // Solo guardar dos propiedades\n        // Metodo alternativo para sintaxis de bundle-assets 3\n        var data = JSON.stringify((function(model){return {devices:model.devices, connectors:model.connectors};})(model));\n\n        if(model.devices.length == 0){ // No guardar si no hay componentes\n            M.toast({html: \"No hay componentes!\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n        }else{ // Si hay al menos un componente, guardar en db\n            var sim = {\n                timestamp: Date.now(),\n                size: model.devices.length,\n                data: data, \n                name: $scope.circuitFileName\n            };\n    \n            if(currentSim.key){ // Si se esta trabajando sobre un modelo existente\n                Cipressus.db.update(sim,\"users_public/\"+$rootScope.user.uid+\"/simulations/\"+currentSim.key)\n                .then(function(res){\n                    //console.log(res);   \n                    $scope.simulations[currentSim.key] = sim; // Actualizar local\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si se creo un nuevo modelo\n                Cipressus.db.push(sim,\"users_public/\"+$rootScope.user.uid+\"/simulations\")\n                .then(function(res){\n                    //console.log(res);    \n                    currentSim = {\n                        key: res.key,\n                        name: sim.name\n                    };\n                    if(!$scope.simulations)\n                        $scope.simulations = {};\n                    $scope.simulations[res.key] = sim; // Agregar nueva\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }\n        }\n    };\n\n\n    $scope.analizeCircuit = function(){ // Analisis combinacional del circuito\n        // Las funciones declaradas mas abajo se ejecutan desde el final hacia arriba\n\n        // Obtener nombres de las entradas y salidas\n        var inputs = simcir.getExternalLabels(\"input\");\n        var outputs = simcir.getExternalLabels(\"output\");\n\n        // Si no hay, retornar\n        if(inputs.length == 0){\n            M.toast({html: \"El circuito no tiene entradas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n        if(outputs.length == 0){\n            M.toast({html: \"El circuito no tiene salidas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n\n        // Iniciar\n        $rootScope.loading = true;\n\n        // Cantidad de entradas y salidas (para calcular cantidad de dispositivos) \n        // (Antes de eliminar nodos repetidos)\n        var ioDevices = inputs.length + outputs.length;\n\n        // Eliminar nombres repetidos (externalPortManager sigue teniendo duplicados si se carga varias veces)\n        inputs = inputs.filter(function(value, index, self){ return self.indexOf(value) === index}); \n        //outputs = outputs.filter((value, index, self) => self.indexOf(value) === index); \n\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data();\n\n        // Objeto para mostrar resultados en modal\n        $scope.circuitDetails = {\n            model: model,\n            deviceCnt: model.devices.length - ioDevices, // Cantidad de componentes sin contar entradas y salidas\n            connectorCnt: model.connectors.length,\n            truthTable: { // Objeto para genrar la tabla de verdad en la vista\n                header:{ // Nombres de las variables de entrada y salida\n                    inputs:inputs,\n                    outputs:outputs\n                },\n                rows:[] // Combinaciones de entrada\n            },\n            expressions: [], // Funciones de salida minimizadas\n            canonMinTerm: [], // Funciones de salida canonicas suma de productos\n            canonMaxTerm: [] // Funciones de salida canonicas producto de sumas\n        };\n\n        var combMax = Math.pow(2,inputs.length); // Cantidad de combinaciones\n        var minterms = []; // Miniterminos de cada salida\n        var maxterms = []; // Maxiterminos de cada salida\n        var primeImplicants = [];\n        var minifiedExpresions = [];\n        var canonMinExpressions = [];\n        var canonMaxExpressions = [];\n\n\n        var getCanonicalExpressions = function(){ // Obtener las expresiones canonicas a partir de miniterminos y maxiterminos\n            \n            for(var k in outputs){ // Para cada funcion de salida                \n                if(!minterms[k]){ // Si no hay minterms, la funcion es siempre nula                    \n                    canonMinExpressions[k] = \"0\";\n                    canonMaxExpressions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(!maxterms[k]){ // Si no hay maxterms, la salida es siempre 1\n                    canonMinExpressions[k] = \"1\";\n                    canonMaxExpressions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n            \n                /////// Minterms\n                for(var j in minterms[k]){ // Para cada minitermino\n                    for(var t in minterms[k][j]){ // Para cada variable dentro del termino\n                        switch(minterms[k][j][t]){\n                            case \"1\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t];\n                                else\n                                    canonMinExpressions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t]+\"'\";\n                                else\n                                    canonMinExpressions[k] = inputs[t]+\"'\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMinExpressions[k] += \" + \";\n                }\n                canonMinExpressions[k] = canonMinExpressions[k].substring(0,canonMinExpressions[k].length-3);// Remover el ultimo \"+\"\n            \n                /////// Maxterms\n                for(var j in maxterms[k]){ // Para cada minitermino\n                    if(canonMaxExpressions[k])\n                        canonMaxExpressions[k] += \"(\";\n                    else\n                        canonMaxExpressions[k] = \"(\";\n                    for(var t in maxterms[k][j]){ // Para cada variable dentro del termino\n                        switch(maxterms[k][j][t]){\n                            case \"0\":\n                                canonMaxExpressions[k] += inputs[t]+\"+\";                                \n                                break;\n                            case \"1\":\n                                canonMaxExpressions[k] += inputs[t]+\"'+\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-1);// Remover el ultimo \"+\"    \n                    canonMaxExpressions[k] += \") · \";\n                }\n                canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-3);// Remover el ultimo \"·\"\n            }\n            \n\n            // Generar expresiones para mostrar en vista de analisis\n            for(var k in canonMinExpressions) \n                $scope.circuitDetails.canonMinTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMinExpressions[k];\n            for(var k in canonMaxExpressions) \n                $scope.circuitDetails.canonMaxTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMaxExpressions[k];\n            \n            // Para terminar, ocultar el preloader y mostrar el modal con resultados\n            $rootScope.loading = false;\n            results_modal.open();\n            $scope.$apply();\n        };\n\n        var getBooleanExpressions = function(){ // A partir de miniterminos y maxiterminos, devuelve las expresiones logicas\n\n            for(var k in outputs){\n                //if(minterms[k].length == 0){ // Si no hay miniterminos, la funcion es siempre nula\n                if(!minterms[k]){              // Si no hay miniterminos, la funcion es siempre nula                    \n                    minifiedExpresions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(minterms[k].length == combMax){ // Si hay tantos miniterminos como combinaciones, la salida es siempre 1\n                    minifiedExpresions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n                \n                // Si ninguno de los casos anteriores se dio, obtener implicantes primos con el metodo QMC\n                primeImplicants[k] = Cipressus.utils.getPrimeImplicants(minterms[k]);\n                for(var j in primeImplicants[k]){ // Para cada implicante                  \n                    for(var t in primeImplicants[k][j]){ // Para cada variable del implicante\n                        switch(primeImplicants[k][j][t]){\n                            case \"1\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t];\n                                else\n                                    minifiedExpresions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t]+\"'\";\n                                else\n                                    minifiedExpresions[k] = inputs[t]+\"'\";\n                                break;\n                            case \"-\":\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    minifiedExpresions[k] += \" + \";\n                }\n                minifiedExpresions[k] = minifiedExpresions[k].substring(0,minifiedExpresions[k].length-3);// Remover el ultimo \"+\"\n            }\n            //console.log($scope.circuitDetails);\n            for(var k in minifiedExpresions) // Generar expresiones para mostrar en vista de analisis\n                $scope.circuitDetails.expressions[k] = \"<b>\" + outputs[k] + \"</b>= \" + minifiedExpresions[k];\n            \n            getCanonicalExpressions();\n        };\n  \n        var evalInput = function(k){ // Evaluar entrada k-esima (en binario) (esta es una funcion recursiva)\n            var inputBin = k.toString(2).padStart(inputs.length,\"0\"); // Convertir numero de combinacion a binario\n            $scope.circuitDetails.truthTable.rows[k] = { \n                inputs: inputBin.split(\"\"), // Separar bits en arreglo\n                outputs: [] // Completar salidas despues\n            }\n            for(var j in $scope.circuitDetails.truthTable.rows[k].inputs) // Escribir entrada en el circuito del simulador\n                simcir.setInputStatus(inputs[j], $scope.circuitDetails.truthTable.rows[k].inputs[j] == \"1\");\n\n            // Esperar un poco antes de leer la salida\n            setTimeout(function(){\n                // Leer cada una de las salidas de la simulacion\n                for(var n in outputs){\n                    $scope.circuitDetails.truthTable.rows[k].outputs[n] = simcir.getOutputStatus(outputs[n]) == 1 ? \"1\":\"0\";\n                    if($scope.circuitDetails.truthTable.rows[k].outputs[n] == \"1\"){ // Si la salida es H (alto), agregar minitermino\n                        if(minterms[n])\n                            minterms[n].push(inputBin);\n                        else\n                            minterms[n] = [inputBin];\n                    }else{\n                        if(maxterms[n])\n                            maxterms[n].push(inputBin);\n                        else\n                            maxterms[n] = [inputBin];\n                    }\n                }\n                k++; // Siguiente combinacion\n                if(k < combMax) // Si quedan, pasar a la siguiente\n                    evalInput(k);\n                else // Sino, pasar a calcular las funciones\n                    getBooleanExpressions();\n            },50);    \n        };\n        evalInput(0); // Empezar por la primera\n    };\n\n\n    ///// Inicializacion del controller\n    $scope.circuitFileName = \"\";\n    var currentSim = {}; // Datos de la simulacion actual (se crean al abrir o guardar nuevo)\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n    var load_modal = M.Modal.init(document.getElementById(\"load_modal\"), {preventScrolling: false});\n    var save_modal = M.Modal.init(document.getElementById(\"save_modal\"), {preventScrolling: false});\n    var results_modal = M.Modal.init(document.getElementById(\"results_modal\"), {preventScrolling: false});\n\n    // Inicializar simulador\n    simcir.setupSimcir($('#simcir'), {\n        width: document.getElementById(\"simcir\").clientWidth,\n        height: document.getElementById(\"simcir\").clientHeight\n    });\n\n    window.onresize = function(ev){ // Simulador responsive\n        // Dimensiones del card (que es responsive)\n        var w = document.getElementById('simcir').clientWidth;\n        var h = document.getElementById('simcir').clientHeight;\n        //console.log(h,w);\n        var el = document.getElementsByClassName(\"simcir-workspace\")[0]; // Div contenedor (generado por simcir)\n        el.setAttribute(\"viewBox\", \"0 0 \"+w+\" \"+h); // Dimensiones del svg\n        el.setAttribute(\"width\", w); // Escala\n        el.setAttribute(\"height\", h); \n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"simulator\").catch(function (err) {console.log(err)});\n}]);","app.controller(\"kMaps\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    qmc = new QuineMcCluskey(\"\", 2, 4, 0);\n    qmc.init();\n    karnaugh = new KarnaughMap(\"myKarnaughMap\", qmc);\n    karnaugh.init();\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n        karnaugh.setNoOfVars($scope.varsNum);\n    };\n\n    $scope.dCareChange = function() {\n        karnaugh.allowDontCares($scope.showDCares);\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"kMap\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"tables\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n\n    };\n\n    $scope.dCareChange = function() {\n\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"tables\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"users\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n    $scope.selectedKey = null;\n    $scope.showAll = true;\n    var attendableEvents=0; // Contador de eventos para calcular asistencia\n\n    // Los inputs date no funcionan con ng-change entonces la actualizacion\n    // la hago programaticamente. Este es el callback de cambios\n    var onInputDateChange = function () {\n        $scope.auxiliarySubmits[this.id] = {\n            submitted: moment(this.value).unix() * 1000,\n            timestamp: Date.now(),\n            evaluator: $rootScope.user.uid\n        };\n        $scope.$apply();\n    };\n\n    $scope.viewUser = function (key) { // Selecciona un usuario de la lista para ver detalles\n        // Tambien se abre el modal con detalles desde la vista\n        $scope.selectedKey = key; // Recordar limpiar esta variable despues de usar\n        evalAttendance();\n        updatePolarPlot();\n    };\n\n    $scope.selectUser = function(key) { // Seleccionar usuario para aprobar inscripcion a un curso\n        $scope.selectedKey = key;\n        confirmEnrollModal.open();\n    };\n\n    var evalAttendance = function(){ // Calcular asistencia del alumno seleccionado\n        if($scope.users[$scope.selectedKey].scores){\n            if($scope.users[$scope.selectedKey].attendance){ // Calcular asistencia aquí (solo se usa para mostrar pero no se guarda en db)\n                var userAttendedEvents = Object.getOwnPropertyNames($scope.users[$scope.selectedKey].attendance).length; // Cantidad de clases asistidas por el usuario\n                var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0;\n                $scope.users[$scope.selectedKey].scores.asistencia = {\n                    score: parseInt(att.toFixed(2)), // Calcular porcentaje de asistencia\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };                                \n            }else{ // Si no asistió a nada, entonces la asistencia queda en 0\n                $scope.users[$scope.selectedKey].scores.asistencia = {\n                    score: 0,\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };\n            }   \n        }\n    };\n\n    var updatePolarPlot = function(){ // Actualizar grafico de notas del alumno seleccionado\n        var data = []; // Datos para mostrar en el grafico polar\n        // Buscar nodo de la actividad seleccionada\n        $scope.currentNode = Cipressus.utils.searchNode($scope.activitiesTree,\"final\");         \n        var value = Cipressus.utils.eval($scope.users[$scope.selectedKey],$scope.currentNode)/$scope.currentNode.score*100;        \n        $scope.currentActivityScores = { // Para detallar textualmente\n            name: $scope.currentNode.name,\n            points: ($scope.currentNode.score*value/100).toFixed(2), \n            score: value.toFixed(2),\n            children:[] // Asjuntar los nodos hijos\n        };\n        for(k in $scope.currentNode.children){ // Para cada sub actividad\n            // Calcular nota de las sub actividades\n            var subValue = Cipressus.utils.eval($scope.users[$scope.selectedKey],$scope.currentNode.children[k])/$scope.currentNode.children[k].score*100;\n            // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n            $scope.currentActivityScores.children.push({\n                name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                score: subValue.toFixed(2) // Nota en porcentaje\n            });\n            data.push({ // Agregar nota de esa actividad a los datos para el chart\n                y: $scope.currentNode.children[k].score,\n                z: parseInt(subValue.toFixed(2)),\n                name: $scope.currentNode.children[k].name\n            })\n        }\n        Highcharts.chart('variable_pie_container', {\n            chart: {type: 'variablepie',height: '100%'},\n            title: {text: 'Calificaciones'},\n            tooltip: {\n                headerFormat: '',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                    'Nota actividad: <b>{point.z}%</b><br/>'\n            },\n            series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n        });\n    };\n\n    $scope.sendMessage = function () { // Enviar mensaje al usuario seleccionado\n        console.log($scope.message);\n        console.log($scope.selectedKey);\n        $scope.selectedKey = null;\n        messageModal.close();\n    };\n\n    $scope.enrollUser = function () { // Aprobar usuario como alumno\n        var user_private = { // Objeto a subir\n            admin: false,\n            course: $rootScope.user.course, // El ID del curso del admin que esta dando de alta\n            enrolled: Date.now()\n            // scores y submits se completan a medida que apruebe actividades\n        };\n        if($scope.selectedKey){ // Habria que agrega un mejor control de la key que se esta escribiendo\n            $rootScope.loading = true;\n            Cipressus.db.update(user_private, \"users_private/\" + $scope.selectedKey)\n                .then(function (snapshot) {\n                    // Copiar atributos para actualizar vista\n                    $scope.users[$scope.selectedKey].admin = false;\n                    $scope.users[$scope.selectedKey].enrolled = user_private.enrolled;\n                    M.toast({\n                        html: \"Listo!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2000\n                    });\n                    confirmEnrollModal.close();\n                    $scope.selectedKey = null; // Deseleccionar user\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n        }\n    };\n\n    $scope.evalUser = function (key) { // Preparar para ingresar calificaciones al usuario seleccionado\n        $scope.selectedKey = key;\n\n        evalAttendance(); // Calcular asistencia automáticamente\n\n        // Generar arreglos auxiliares para no sobreescribir el original\n        $scope.auxiliaryScores = {};\n        for (var k in $scope.users[key].scores) // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliaryScores[k] = {\n                evaluator: $scope.users[key].scores[k].evaluator,\n                score: $scope.users[key].scores[k].score,\n                timestamp: $scope.users[key].scores[k].timestamp\n            };\n        $scope.auxiliarySubmits = {};\n        for (var k in $scope.users[key].submits) { // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliarySubmits[k] = {\n                evaluator: $scope.users[key].submits[k].evaluator,\n                submitted: $scope.users[key].submits[k].submitted,\n                timestamp: $scope.users[key].submits[k].timestamp\n            };\n        }\n\n        // Inicializo los listeners de inputs date aca porque no pude usar ni ng-model ni ng-change\n        for (var k in $scope.activities)\n            if ($scope.activities[k].dl) { // Si la actividad tiene vencimiento\n                if ($scope.auxiliarySubmits[$scope.activities[k].id]) // Si la actividad fue entregada/evaluada\n                    document.getElementById($scope.activities[k].id).value = moment($scope.auxiliarySubmits[$scope.activities[k].id].submitted).format(\"YYYY-MM-DD\");\n                else // Si no borrarla\n                    document.getElementById($scope.activities[k].id).value = '';\n                document.getElementById($scope.activities[k].id).removeEventListener(\"change\", onInputDateChange); // Lo quito para no duplicar\n                document.getElementById($scope.activities[k].id).addEventListener(\"change\", onInputDateChange);\n            }\n        scoresModal.open(); // Lo hago aca porque se hace lio con los trigger de materialize\n    };\n\n    $scope.getCost = function (key) { // Calcular el costo por perdida de vencimiento de una actividad\n        if ($scope.activities[key] && $scope.auxiliarySubmits) { // Si ya existen los arreglos, usarlos\n            if ($scope.auxiliarySubmits[$scope.activities[key].id]) { // Control de coherencia\n                if ($scope.auxiliarySubmits[$scope.activities[key].id].submitted > $scope.activities[key].dl.date) { // Si paso el vencimiento\n                    // Calcular costo\n                    var cost = Cipressus.utils.defaultCostFunction($scope.auxiliarySubmits[$scope.activities[key].id].submitted, $scope.activities[key].dl.date, $scope.activities[key].dl.param);\n                    if (cost > $scope.activities[key].score) // El costo no puede superar el puntaje maximo\n                        return $scope.activities[key].score;\n                    else // Si no supera, retornar el valor\n                        return cost.toFixed(2);\n                } else // Si no paso el vencimiento, el costo es nulo\n                    return 0;\n            }\n        }\n    };\n\n    $scope.deleteSubmit = function (key) { // Esta se llama al eliminar una nota oprimiendo en el logo de usuario\n        // Para el caso de notas puedo quitar con instrucciones dentro del ng-click pero para este no\n        document.getElementById(key).removeEventListener(\"change\", onInputDateChange); // Lo quito para que no dispare al cambiar valor\n        document.getElementById(key).value = ''; // Limpiar input date\n        $scope.auxiliarySubmits[key] = null; // Borrar timestamp, evaluator y submitted\n        document.getElementById(key).addEventListener(\"change\", onInputDateChange); // Vuelvo a habilitar\n    }\n\n    $scope.saveScores = function () { // Guardar el formulario de notas\n        $rootScope.loading = true;\n        var obj = {}; // Objeto a actualizar en DB\n        obj.scores = $scope.auxiliaryScores;\n        obj.submits = $scope.auxiliarySubmits;\n        Cipressus.db.update(obj, \"users_private/\" + $scope.selectedKey)\n            .then(function (snapshot) {\n                $scope.users[$scope.selectedKey].scores = $scope.auxiliaryScores;\n                $scope.users[$scope.selectedKey].submits = $scope.auxiliarySubmits;\n                scoresModal.close();\n                // Borrar los datos temporales\n                $scope.selectedKey = null;\n                $scope.auxiliaryScores = null;\n                $scope.auxiliarySubmits = null;\n                M.toast({\n                    html: \"Calificaciones actualizadas\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"No se pudo guardar\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n    ///// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {\n        preventScrolling: false\n    });\n    var messageModal = M.Modal.init(document.getElementById(\"message_modal\"), {\n        preventScrolling: false\n    });\n    var confirmEnrollModal = M.Modal.init(document.getElementById(\"confirm_enroll_modal\"), {\n        preventScrolling: false\n    });\n    var scoresModal = M.Modal.init(document.getElementById(\"scores_modal\"), {\n        preventScrolling: false,\n        dismissible: false\n    });\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"users\").catch(function (err) {\n        console.log(err)\n    });\n\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\n        .then(function (users_public_data) {\n            $scope.users = users_public_data;\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\n                .then(function (users_private_data) {\n                    // Mezclar los atributos\n                    // #TODO: listar solo usuarios del curso actual\n                    for (var k in users_private_data)\n                        for (var j in users_private_data[k]) // Dos niveles de entrada\n                            $scope.users[k][j] = users_private_data[k][j];\n                    // Descargar lista de actividades\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\n                        .then(function (activities_data) {\n                            $scope.activitiesTree = activities_data;\n                            $scope.activities = Cipressus.utils.getArray(activities_data);                            \n                            Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                            .then(function(events_data){\n                                events_data.forEach(function(childSnapshot){\n                                    var ev = childSnapshot.val();                                    \n                                    if(ev.start <= Date.now() && ev.attendance) // Si es un evento pasado y con asistencia obligatoria\n                                        attendableEvents++; // Contar para calcular porcentaje de asistencia \n                                });                                \n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            })\n                            .catch(function(err){ // events\n                                console.log(err);\n                                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            });\n                        })\n                        .catch(function (err) {\n                            console.log(err);\n                            M.toast({\n                                html: \"Ocurrió un error al acceder a la base de datos\",\n                                classes: 'rounded red',\n                                displayLength: 2000\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                        });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n\n}]);","app.controller(\"stats\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    var scatter_data = {}; // Arreglo de datos para graficos de correlacion\r\n\r\n    var updateScoreBarPlot = function () { // Genera los arreglos de calificaciones\r\n\r\n        var seriesData = [];\r\n        var drillDownData = [];\r\n\r\n        for (var k in $scope.users) { // Para cada usuario\r\n            if (!$scope.users[k].admin && $scope.users[k].scores && !$scope.users[k].excludeStat) { // Si tiene notas y no es admin y no queda excluido\r\n                var sc = Cipressus.utils.eval($scope.users[k], $scope.activities) / $scope.activities.score * 100;\r\n                scatter_data[k] = { // Este dato se emplea luego para el grafico de correlacion de notas vs actividad\r\n                    score: sc,\r\n                    activity: 0,\r\n                    attendance: $scope.users[k].scores.asistencia.score\r\n                };\r\n                seriesData.push({ // Evaluar e insertar resultado en array\r\n                    name: $scope.users[k].secondName,\r\n                    y: sc,\r\n                    drilldown: k\r\n                });\r\n\r\n                var tempData = []; // Arreglo temporal con notas del alumno\r\n                for (var j in $scope.activities.children) { // Evaluar tambien las principales actividades\r\n                    tempData.push([\r\n                        $scope.activities.children[j].id,\r\n                        Cipressus.utils.eval($scope.users[k], $scope.activities.children[j]) / $scope.activities.children[j].score * 100\r\n                    ]);\r\n                }\r\n\r\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\r\n                    name: $scope.users[k].secondName,\r\n                    id: k,\r\n                    data: tempData\r\n                })\r\n            }\r\n        }\r\n\r\n        seriesData.sort(function(a, b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0) });\r\n\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                drillUpText: '<< Volver a {series.name}'\r\n            }\r\n        });\r\n\r\n        Highcharts.chart('score_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '75%'\r\n            },\r\n            title: {\r\n                text: 'Calificaciones del curso'\r\n            },\r\n            xAxis: {\r\n                type: 'category'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Puntaje acumulado'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y:.1f}%'\r\n                    }\r\n                }\r\n            },\r\n\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b>'\r\n            },\r\n\r\n            series: [{\r\n                name: \"Alumno\",\r\n                colorByPoint: true,\r\n                data: seriesData\r\n            }],\r\n            drilldown: {\r\n                colorByPoint: true,\r\n                series: drillDownData\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    $scope.drillUp = function () {\r\n        $(\"#score_barplot_container\").highcharts().drillUp();\r\n    };\r\n\r\n    var updateAttendancePlot = function () {\r\n        var seriesData = [];\r\n        var categories = []; // Lista de fechas de los eventos\r\n\r\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\r\n        for (var j in $scope.users) { // Para cada usuario, calcular progreso de asistencia\r\n            if ($scope.users[j].attendance && !$scope.users[j].excludeStat) {\r\n                var data = []; // Asistencia acumulada por clase\r\n                var evCnt = 0; // Contador de eventos\r\n                var evAtt = 0; // Contador de eventos asistidos\r\n                for (var k in $scope.events) {\r\n                    if ($scope.events[k].start < Date.now() && $scope.events[k].attendance) { // Solo eventos pasados y de asistencia obligatoria\r\n                        evCnt++; // Contar evento\r\n                        if ($scope.users[j].attendance[k]) // Si asistio a esta clase\r\n                            evAtt++;\r\n                        if (evAtt != 0)\r\n                            data.push(Math.round(evAtt / evCnt * 10000) / 100); // Redondear a dos digitos\r\n                        else\r\n                            data.push(0);\r\n                        if (first) // Primera pasada\r\n                            categories.push($rootScope.getTime(3,$scope.events[k].start)); // Agregar evento a la lista\r\n                    }\r\n                }\r\n                first = false;\r\n                seriesData.push({\r\n                    data: data,\r\n                    name: $scope.users[j].secondName\r\n                })\r\n            }\r\n        }\r\n\r\n        Highcharts.chart('attendance_container', {\r\n            chart: {\r\n                type: 'spline',\r\n                height: '70%'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: 'Asistencia a clases'\r\n            },\r\n            xAxis: {\r\n                categories: categories\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateTechPie = function () { // Tecnologias utilizadas mas frecuentemente\r\n        // Calcular uso de navegadores        \r\n        var totalBr = 0; // Cantidad total de datos naveg.\r\n        var totalOs = 0; // Cantidad total de datos so\r\n        var br = { // Contadores de accesos con navegadores\r\n            Firefox: 0,\r\n            Chrome: 0,\r\n            IE: 0,\r\n            Opera: 0,\r\n            Safari: 0,\r\n            Otro: 0\r\n        };\r\n        var os = { // Contadores de accesos con navegadores\r\n            Windows: 0,\r\n            Linux: 0,\r\n            IOS: 0,\r\n            Android: 0,\r\n            Otro: 0\r\n        };\r\n        for (var k in $scope.users)\r\n            if (!$scope.users[k].admin && !$scope.users[k].excludeStat) {\r\n                for (var j in $scope.users[k].activity.browser) {\r\n                    br[j] += $scope.users[k].activity.browser[j];\r\n                    totalBr += $scope.users[k].activity.browser[j];\r\n                }\r\n                for (var j in $scope.users[k].activity.os) {\r\n                    os[j] += $scope.users[k].activity.os[j];\r\n                    totalOs += $scope.users[k].activity.os[j];\r\n                }\r\n            }\r\n\r\n        /* // Esta porcion da error cuando se ejecuta por segunda vez (al cambiar de vista y volver)\r\n        Highcharts.setOptions({ // Gradiente de colores\r\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n                return {\r\n                    radialGradient: {\r\n                        cx: 0.5,\r\n                        cy: 0.3,\r\n                        r: 0.7\r\n                    },\r\n                    stops: [\r\n                        [0, color],\r\n                        [1, Highcharts.Color(color).brighten(-0.3).get('rgb')]\r\n                    ]\r\n                };\r\n            })\r\n        });\r\n        */\r\n\r\n        Highcharts.chart('browser_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de navegadores'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Chrome',\r\n                        y: br.Chrome / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Firefox',\r\n                        y: br.Firefox / totalBr\r\n                    },\r\n                    {\r\n                        name: 'IE',\r\n                        y: br.IE / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Opera',\r\n                        y: br.Opera / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Safari',\r\n                        y: br.Safari / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: br.Otro / totalBr\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('so_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de S.O.'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Windows',\r\n                        y: os.Windows / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Linux',\r\n                        y: os.Linux / totalOs\r\n                    },\r\n                    {\r\n                        name: 'IOS',\r\n                        y: os.IOS / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Android',\r\n                        y: os.Android / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: os.Otro / totalOs\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateMenuAccessPlot = function () {\r\n\r\n        var itemCntr = { // Nombres de las secciones en db\r\n            home: 'Inicio',\r\n            dashboard: 'Dashboard',\r\n            calendar: 'Cronograma',\r\n            sources: 'Material',\r\n            submissions: 'Entregas',\r\n            simulator: 'Simulador',\r\n            hardware: 'Probador',\r\n            profile: 'Perfil'\r\n        };\r\n\r\n        // Secciones\r\n        var categoriesData = []; // Nombres de los alumnos\r\n        var seriesData = []; // Datos a graficar\r\n        var first = true; // Primera pasada por lista de usuarios\r\n        for (var j in itemCntr) { // Para cada seccion\r\n            var data = []; // Accesos a la seccion actual por usuario\r\n            for (var k in $scope.users) // Para cada usuario\r\n                if (!$scope.users[k].admin && !$scope.users[k].excludeStat) { // Usuarios sobre los que se realiza estadistica\r\n                    if (first) // En la primera pasada, agregar la lista de nombres\r\n                        categoriesData.push($scope.users[k].secondName); // Agregar alumno a la lista\r\n                    if ($scope.users[k].activity.items[j]) { // Si tiene accesos a esta seccion\r\n                        data.push($scope.users[k].activity.items[j]) // Agregar valor\r\n                    } else { // Sino, el contador es 0\r\n                        data.push(0);\r\n                    }\r\n                    // Registrar cantidad de accesos (solo usuarios con nota)\r\n                    if (j == 'home' && $scope.users[k].scores) // Los accesos a home equivale a la cantidad de logueos\r\n                        scatter_data[k].activity = $scope.users[k].activity.items.home;\r\n                }\r\n            seriesData.push({\r\n                name: itemCntr[j],\r\n                data: data\r\n            });\r\n            first = false;\r\n        }\r\n\r\n        Highcharts.chart('items_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '150%'\r\n            },\r\n            title: {\r\n                text: 'Uso de herramientas'\r\n            },\r\n            xAxis: {\r\n                categories: categoriesData,\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: 'Accesos',\r\n                    align: 'high'\r\n                },\r\n                labels: {\r\n                    overflow: 'justify'\r\n                }\r\n            },\r\n            tooltip: {\r\n                valueSuffix: ' accesos'\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    dataLabels: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'top',\r\n                x: -40,\r\n                y: 80,\r\n                floating: true,\r\n                borderWidth: 1,\r\n                backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n                shadow: true\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateScatterPlot = function () { // Espacio para variables correlacionadas\r\n        var seriesData1 = [];\r\n        var seriesData2 = [];\r\n        for (var k in scatter_data){\r\n            seriesData1.push([scatter_data[k].score,scatter_data[k].activity]);\r\n            seriesData2.push([scatter_data[k].score,scatter_data[k].attendance]);\r\n        }\r\n\r\n        Highcharts.chart('scatterplot_container1', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs actividad'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Accesos'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} accesos'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(223, 83, 83, .5)',\r\n                data: seriesData1\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('scatterplot_container2', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs asistencia'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Asistencia'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} %'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(83, 83, 223, .5)',\r\n                data: seriesData2\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateProfilesPlot = function(){ // Mostrar un grafico de barras para el test de FS con los datos promedios\r\n        var avgScales = [0,0,0,0]; // Valores promedios de las escalas\r\n        var dataCnt = 0; // Cantidad de individuos\r\n        for(var k in $scope.users){ // Calcular promedio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes\r\n                        avgScales[j] += scales[j];\r\n                }\r\n        }\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            avgScales[j] = Math.round(avgScales[j]/dataCnt*100)/100;\r\n\r\n        // Calcular desvio estandar\r\n        var stdScales = [0,0,0,0];\r\n        for(var k in $scope.users){ // Calcular desvio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes de la ecuacion de desvio\r\n                        stdScales[j] += (scales[j]-avgScales[j])*(scales[j]-avgScales[j]); // Suma de diferencias cuadraticas\r\n                }\r\n        }\r\n\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            stdScales[j] = Math.round(Math.sqrt(stdScales[j]/dataCnt)*100)/100; // Formula std (redondeo 2 decimales)\r\n\r\n        for (var k = 0; k < 4; k++) {\r\n            var elem = document.getElementById(\"scale_\" + k);\r\n            var width = 2*Math.abs(avgScales[k]) * 50 / 11; //(50% hacia los costados dividido 11 puntaje max)\r\n            elem.style.width = width + '%';\r\n            if (avgScales[k] < 0) {\r\n                elem.style.marginLeft = 50 - width + '%';\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\r\n            } else {\r\n                elem.style.marginLeft = \"50%\";\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\r\n            }\r\n            elem.innerHTML = Math.abs(avgScales[k])+\" &#177;\"+stdScales[k];\r\n        }\r\n    };\r\n\r\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\r\n        .then(function (users_public_data) {\r\n            $scope.users = users_public_data;\r\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\r\n                .then(function (users_private_data) {\r\n                    // Mezclar los atributos\r\n                    // #TODO listar solo usuarios del curso actual\r\n                    for (var k in users_private_data) // Para cada usuario\r\n                        for (var j in users_private_data[k]) // Para cada atributo del usuario actual\r\n                            $scope.users[k][j] = users_private_data[k][j];\r\n                    // Descargar lista de actividades\r\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\r\n                        .then(function (activities_data) {\r\n                            $scope.activities = activities_data;\r\n                            Cipressus.db.get('events/'+$rootScope.user.course) // Descargar la lista de clases\r\n                                .then(function (events_data) {\r\n                                    $scope.events = events_data;\r\n                                    updateScoreBarPlot(); // Cargar los datos al grafico de barras                    \r\n                                    updateAttendancePlot(); // Actualizar grafico de asistencia\r\n                                    updateTechPie(); // Mostrar estadisticas de uso                            \r\n                                    updateMenuAccessPlot(); // Estadisticas de uso de alumnos\r\n                                    updateScatterPlot(); // Grafico de correlacion entre variables\r\n                                    updateProfilesPlot(); // Perfil promedio y desvio\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                });                            \r\n                        })\r\n                        .catch(function (err) { // activities\r\n                            console.log(err);\r\n                            M.toast({\r\n                                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                classes: 'rounded red',\r\n                                displayLength: 2000\r\n                            });\r\n                            $rootScope.loading = false;\r\n                            $scope.$apply();\r\n                        });\r\n                })\r\n                .catch(function (err) { // users_private\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n        })\r\n        .catch(function (err) { // users_public\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                classes: 'rounded red',\r\n                displayLength: 2000\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n}]);","app.controller(\"attendance\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.updateLists = function(){ // En base a la fecha seleccionada se generan las listas de ausentes y presentes\n        if($scope.changes){ // Si hubo cambios, preguntar si guardar antes de borrar\n            confirmModal.open();\n            return;\n        } \n        \n        $scope.absents = []; // Lista con id de usuarios ausentes al evento actual\n        $scope.presents = []; // Lista de presentes\n        for(var k in $scope.users){ // Recorrer lista de usuarios\n            if(!$scope.users[k].admin){ // A los usuarios admin no se les computa asistencia\n                if($scope.users[k].attendance){ // Si el usuario asistio a alguna clase\n                    if($scope.users[k].attendance[$scope.selectedEventKey]) // Si tiene el evento actual\n                        $scope.presents.push(k); // Marcar alumno como presente\n                    else // Si no tiene el evento actual\n                        $scope.absents.push(k); // Agregar a lista de ausentes\n                }else // Si no asistio a ningun evento, marcar como ausente \n                    $scope.absents.push(k); // Agregar a lista de ausentes\n            }\n        }\n\n        $scope.$apply();\n    };\n\n    $scope.isPresent = function(idx){ // Mover el user key a lista de ausentes\n        $scope.changes = true;\n        $scope.presents.push($scope.absents[idx]); // Agregar a prsentes\n        $scope.absents.splice(idx,1); // Quitar de ausentes\n    };\n\n    $scope.isAbsent = function(idx){ // Mover el user key a la lista de presentes\n        $scope.changes = true;\n        $scope.absents.push($scope.presents[idx]); // Agregar a ausentes\n        $scope.presents.splice(idx,1); // Quitar de presentes\n    };\n\n    $scope.saveList = function(){ // Guardar la lista de presentes\n        var updates = {};\n        for(var k in $scope.presents){ // Guardar referencia al evento actual en la entrada del usuario\n            var value = { // A insertar para marcar asistencia\n                evaluator: $rootScope.user.uid,\n                timestamp: Date.now()\n            };\n            updates[\"users_private/\"+$scope.presents[k]+\"/attendance/\"+$scope.selectedEventKey] = value;\n            // Actualizar objeto local\n            if(!$scope.users[$scope.presents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.presents[k]].attendance = {}\n            $scope.users[$scope.presents[k]].attendance[$scope.selectedEventKey] = value;\n        }\n        for(var k in $scope.absents){ // Quitar referencia en la entrada del usuario\n            updates[\"users_private/\"+$scope.absents[k]+\"/attendance/\"+$scope.selectedEventKey] = null;\n            if(!$scope.users[$scope.absents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.absents[k]].attendance = {}\n            $scope.users[$scope.absents[k]].attendance[$scope.selectedEventKey] = null;\n        }\n\n        // Guardar cambios\n        Cipressus.db.update(updates)\n        .then(function(snapshot){\n            M.toast({html: \"Cambios guardados!\",classes: 'rounded green darken-3 darken-3',displayLength: 1500});        \n            $rootScope.loading = false;\n            $scope.changes = false;\n            $scope.$apply();\n            confirmModal.close();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al actualizar cambios\",classes: 'rounded red',displayLength: 2000});        \n        });\n\n    };\n    \n    //// Inicializacion //// \n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"attendance\").catch(function(err){console.log(err)});\n\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false});\n    document.getElementById(\"event_select\").addEventListener(\"change\",function(){ // No se puede poner en ng-change\n        $scope.selectedEventKey = this.value;\n        $scope.updateLists();\n    });\n    \n    Cipressus.db.getSorted(\"events/\"+$rootScope.user.course,\"start\") // Descargar todos los eventos ordenados por fecha\n    .then(function(events_data){\n        $scope.events = {}; // Lista de eventos que completo dentro del iterator\n        // Tengo que buscar el evento que acaba de empezar (para usar en la clase actual por ejemplo)\n        var today = Date.now(); // Ahora\n        var nextKey = \"\"; // En esta variable dejo el key del evento que pongo por defecto        \n        events_data.forEach(function(childSnapshot){ // Lista ordenada de menor a mayor (esto no es asincrono)            \n            key = childSnapshot.ref_.path.pieces_[2]; // Esto seria el key (#HARDCODED el 2 es porque son dos niveles de keys dentro del arbol\n            $scope.events[key] = childSnapshot.val(); // Hago push del evento (no se puede mandar todos de una)\n            if($scope.events[key].start < today) // Los eventos futuros ya no los guardo\n                nextKey = key; // Guardo el key del evento\n            \n        });        \n        $scope.$apply(); // Hay que actualizar dom antes de inicializar el select\n        document.getElementById(\"event_select\").value = nextKey; // Seleccionar el valor defecto del select\n        $scope.selectedEventKey = nextKey; // Para actualizar la tabla una vez que tenga los usuarios\n        M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n        Cipressus.db.get(\"users_private\") // Descargar lista de usuarios\n        .then(function(users_private_data){\n            $scope.users = {};\n            for(var k in users_private_data) \n                if(users_private_data[k].course == $rootScope.user.course) // Solo tomo los del curso actual\n                    $scope.users[k] = users_private_data[k];\n            Cipressus.db.get(\"users_public\") // Descargar datos de usuario\n            .then(function(users_public_data){\n                for(var k in users_public_data) // Los datos de usuario para listar\n                    if($scope.users[k]) // Si este usuario esta en lista de habilitados\n                        $scope.users[k].data = users_public_data[k]; \n                $scope.updateLists(); // Como ya tengo el selectedEventKey, puedo generar las listas para ese dia\n                $rootScope.loading = false;\n                $scope.changes = false; // Para habilitar el boton de guardar\n                $scope.$apply();    \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            });        \n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n        });        \n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });    \n\n}]);","app.controller(\"activities\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n    $rootScope.loading = true;\n\n    M.Modal.init(document.getElementById(\"course_modal\"), {preventScrolling: false});    \n\n    var updateSunburst = function (data) { // Graficar sunburst\n        Highcharts.chart('sunburst_container', {\n            chart: {\n                height: '100%'\n            },\n            title: {\n                text: 'Proporción de calificaciones'\n            },\n            subtitle: {\n                text: $scope.activities.course.name\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            console.log(event.point.node.id);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",\n                data: data,\n                allowDrillToNode: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    format: '{point.name}',\n                    filter: {\n                        property: 'innerArcLength',\n                        operator: '>',\n                        value: 16\n                    }\n                },\n                levels: [{\n                        level: 1,\n                        levelIsConstant: false,\n                        dataLabels: {\n                            filter: {\n                                property: 'outerArcLength',\n                                operator: '>',\n                                value: 64\n                            }\n                        }\n                    },\n                    {\n                        level: 2,\n                        colorIndex: 1\n                    },\n                    {\n                        level: 3,\n                        colorByPoint: true\n                    }, {\n                        level: 4,\n                        colorVariation: {\n                            key: 'brightness',\n                            to: -0.5\n                        }\n                    }, {\n                        level: 5,\n                        colorVariation: {\n                            key: 'brightness',\n                            to: 0.5\n                        }\n                    }\n                ]\n\n            }],\n            tooltip: {\n                headerFormat: \"\",\n                pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'\n            }\n        });\n    };\n\n    var tree = null; // Global\n\n    var updateTree = function (data) {\n        if (tree !== null) {\n            tree.destroy();\n            tree = null;\n        }\n\n        var container = document.getElementById('tree_container');\n        var options = {            \n            layout: {\n                hierarchical: {\n                    direction: \"UD\"\n                }\n            }\n        };\n\n        tree = new vis.Network(container, data, options);\n\n        tree.once('afterDrawing', function() {\n            container.style.height = '75vh'\n        });\n\n        tree.on('select', function (params) {\n            var node = Cipressus.utils.searchNode($scope.activities,params.nodes[0]); \n            var arr = Cipressus.utils.getArray(node); // Obtener arreglo de notas            \n            updateSunburst(arr);\n        });\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"activities\").catch(function (err) {\n        console.log(err)\n    });\n\n    $scope.changeCourse = function(){\n        var c = document.getElementById(\"courses_select\").value;\n        if(c)\n            if(c!=\"\")\n                setCourse(c);\n    };\n\n    var setCourse = function(courseKey){        \n        $rootScope.user.course = courseKey;\n        Cipressus.db.get('activities/' + $rootScope.user.course) // Descargar arbol de actividades\n        .then(function (data) {\n            $scope.activities = data;\n\n            var arr = Cipressus.utils.getArray($scope.activities); // Obtener arreglo de notas\n            var tr = Cipressus.utils.getTree($scope.activities); // Obtener esquema en formato de arbol jerarquico para vis.js\n\n            updateSunburst(arr);\n            updateTree(tr);\n\n            Cipressus.db.get(\"metadata/courses\") // Descargar datos de los cursos disponibles\n            .then(function(courses){\n                $scope.courses = courses;                \n                setTimeout(function(){\n                    M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                },100);\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n\n    };\n\n    setCourse($rootScope.user.course); // Inicialmente, mostrar el actual\n}]);","app.controller(\"editor\", ['$scope','$rootScope','$location','localStorageService', function ($scope,$rootScope,$location,localStorageService) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.select = function(key){ // Seleccionar noticia para ver, editar o borrar\n        // Aunque no edite se inicializa el editor igual. Para evitarlo hay que meter esto en otra funcion\n        var quilleditor = document.createElement(\"div\"); // Crear el contenedor cada vez para reiniciar\n        quilleditor.id = \"quill\";\n        document.getElementById(\"quill_container\").innerHTML = \"\";\n        document.getElementById(\"quill_container\").appendChild(quilleditor);            \n        quill = new Quill('#quill', { // Controlador del editor (inicializo cada vez)\n            modules: {            \n                toolbar: [ // Botones de la barra de tareas\n                    ['bold', 'italic', 'underline', 'strike'],        \n                    [{ 'size': ['small', false, 'large', 'huge'] }], \n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],            \n                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                    [{ 'script': 'sub'}, { 'script': 'super' }],      \n                    [{ 'indent': '-1'}, { 'indent': '+1' }],         \n                    [{ 'direction': 'rtl' }],                         \n                    [{ 'color': [] }, { 'background': [] }],          \n                    [{ 'font': [] }],\n                    [{ 'align': [] }],\n                    ['link', 'image'],\n                    ['clean']                                         \n                ],\n                imageResize: {} // Este funciona con un script adicional\n            },\n            theme: 'snow'\n        });        \n        if(key != undefined){ // Editar, ver o eliminar existente\n\n            // TODO: hay errores en esta parte\n\n            $scope.selected = $rootScope.clone($scope.news[key]);\n            quill.container.firstChild.innerHTML = $scope.selected.content;\n        }else{ // Editar nueva\n            quill.container.firstChild.innerHTML = \"\";\n            $scope.selected = {\n                title: \"\",\n                content: \"\",\n                order: $scope.news.length,\n                timestamp: 0,\n                author: $rootScope.user.uid\n            }\n        }\n    };\n\n    var updateTimestamp = function(){ // Actualizar fecha de actualizacion de notiricas en db\n        var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\n        Cipressus.db.update(ts,\"metadata/updates/news\")\n        .then(function(res){\n            console.log(\"Actualizacion de metadata\");\n            console.log(res);\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    $scope.deleteSelected = function(){ // Borrar noticia seleccionada\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"news/\"+$rootScope.user.course+\"/\"+$scope.selected.key)\n        .then(function(snapshot){\n            $scope.news.splice($scope.selected.order,1); // Quitar del view\n            // Actualizar orden de cada elemento\n            var updates = {};\n            for(k in $scope.news){ \n                $scope.news[k].order = parseInt(k);\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[k].key+\"/order\"] = parseInt(k);\n            }\n            Cipressus.db.update(updates)\n            .then(function(snapshot){\n                M.toast({html: \"Listo!\",classes: 'rounded green darken-3',displayLength: 1000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                $rootScope.loading = false;\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n            \n        })\n        .catch(function(err){\n            $rootScope.loading = false;\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n        updateTimestamp();\n        confirmModal.close();\n    };\n\n    $scope.moveSelected = function(up,key){ // Mover noticia hacia arriba(true) o abajo(false)\n        if(up){ // Subir\n            if(key > 0){ // No puede subirse el primero\n                console.log($scope.news[key].key);\n                console.log($scope.news[key-1].key);\n                $rootScope.loading = true;\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order-1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key-1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates)\n                .then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order - 1;\n                    $scope.news[key-1].order = $scope.news[key].order;\n                    var temp = $scope.news[key];\n                    $scope.news[key] = $scope.news[key-1];\n                    $scope.news[key-1] = temp;\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }\n        }else{ // Bajar\n            if(key < $scope.news.length - 1){ // No puede bajarse el ultimo\n                console.log($scope.news[key].key);\n                console.log($scope.news[key+1].key);\n                $rootScope.loading = true;\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order+1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key+1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates).then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order + 1;\n                    $scope.news[key+1].order = $scope.news[key].order;\n                    var temp = $scope.news[key];\n                    $scope.news[key] = $scope.news[key+1];\n                    $scope.news[key+1] = temp;\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                }); \n            }\n        }\n        updateTimestamp();\n    };\n\n    $scope.saveSelected = function(){ // Guardar nueva noticia o guardar cambios editados\n        $rootScope.loading = true;\n        if($scope.scheduledNew){ // Si es publicacion programada\n            var date = document.getElementById(\"schedule_date\").value;\n            var time = document.getElementById(\"schedule_time\").value;\n            var timestamp = moment(time+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n            if(timestamp){ // Chequear que haya puesto bien la fecha\n                $scope.selected.timestamp = timestamp;\n            }else{\n                M.toast({html: \"Ingrese fecha de publicación programada\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                return;\n            }\n        }else{\n            $scope.selected.timestamp = Date.now(); // Fecha/hora actuales\n        }\n        $scope.selected.content = quill.container.firstChild.innerHTML.replace(new RegExp(\"<img src=\", 'g'), \"<img class='responsive-img' src=\"); // Agregar clase responsive a las imagenes\n        if($scope.selected.key){ // Si ya tiene una clave, hay que sobreescribir noticia en DB\n\n            /// #TODO: hay errores en esta parte\n\n            var key = $scope.selected.key;            \n            $scope.selected.key = null; // Borro la clave para que no quede en la db\n            Cipressus.db.update($scope.selected,'news/'+$rootScope.user.course+\"/\"+key)\n            .then(function(snapshot){\n                $scope.selected.key = key; // Volver a poner la clave para que no se pierda\n                $scope.news[key] = $rootScope.clone($scope.selected); // Actualizar local\n                M.toast({html: \"Comunicado actualizado\",classes: 'rounded green darken-3',displayLength: 1500});\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si no tiene key, hacer push\n            $rootScope.loading = true;\n            Cipressus.db.push($scope.selected,'news/'+$rootScope.user.course)\n            .then(function(snapshot){\n                $scope.selected.key = snapshot.key;\n                $scope.news.push($scope.selected);\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }\n        updateTimestamp();\n    };\n\n    \n    //// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {preventScrolling: false});\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false, dismissible: false});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {preventScrolling: false, dismissible: false});\n    $scope.selected = {};\n    $scope.scheduledNew = false;\n    var quill; // El editor se inicializa al seleccionar una entrada\n\n    var downloadNews = function(){ // Descargar noticias y usuarios de la db\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\n        var authors = []; // Uids de usuarios que hicieron publicaciones\n        Cipressus.db.getSorted('news/'+$rootScope.user.course,'order') // Descargar lista de novedades\n        .then(function(snapshot){\n            snapshot.forEach(function(childSnapshot){ // Lista ordenada\n                var child = childSnapshot.val();\n                child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\n                child.key = childSnapshot.key; // Hay que guardar el key para actualizar\n                if(authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\n                    authors.push(child.author); // Agregar a la lista\n                $scope.news.push(child); // Sentido inverso para que las nuevas noticias queden arriba\n            });  \n            var ready = authors.length; // Cantidad de descargas que hay que hacer\n            $scope.users = {};\n            if(authors.length > 0){\n                for(var k in authors){\n                    Cipressus.db.get('users_public/'+authors[k]) // Descargar datos de los autores de publicaciones solamente\n                    .then(function(user_data){\n                        $scope.users[authors[k]] = user_data; \n                        ready--; // Contar descarga\n                        if(ready == 0){ // Si no quedan mas, terminar\n                            newsData = { // Objeto a guardar en localStorage\n                                news: $scope.news,\n                                authors: $scope.users,\n                                last_update: Date.now()\n                            };\n                            localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n                            $rootScope.loading = false;\n                            $rootScope.$apply(); \n                        }\n                    })\n                    .catch(function(err){\n                        console.log(err);\n                        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                    });\n                }\n            }else{\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    // Monitoreo de actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"editor\").catch(function(err){console.log(err)});\n\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\n    if(newsData){ // Si hay datos en local storage\n        $scope.news = newsData.news;\n        $scope.users = newsData.authors;\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\n        .then(function(updateTimestamp){\n            if(newsData.last_update < updateTimestamp) // Hay cambios en la base de datos\n                downloadNews(); // Descargar\n            else{ // Si no hay cambios, terminar\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    }else{ // Si no hay datos, descargar si o si\n        downloadNews();\n    }\n\n}]);","app.controller(\"profile\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    document.getElementById(\"imgInput\").addEventListener('change', // Callback al subir foto de perfil\n        function () { // Cuando sube una nueva foto, agregar a la vista como base64\n            $rootScope.loading = true;\n            $scope.$apply();\n            var file = document.getElementById(\"imgInput\").files[0];\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                $scope.newAvatar = reader.result; // Se muestra temporalmente esta imagen\n                $scope.avatarFile = file; // Guardo el archivo para subir luego a storage\n                $scope.newProfilePic = true;\n                $rootScope.loading = false;\n                $scope.$apply();\n            }\n            if (file) reader.readAsDataURL(file);\n        });\n\n    $scope.uploadPic = function () { // Redirigir el evento al input para cargar una foto\n        document.getElementById(\"imgInput\").click();\n    };\n\n    $scope.saveForm = function () { // Guardar cambios en db\n        $rootScope.loading = true;\n\n        // Valores de los formularios\n        var newData = {\n            name: document.getElementById(\"inputName\").value,\n            secondName: document.getElementById(\"inputSecondName\").value,\n            lu: document.getElementById(\"inputLU\").value,\n            degree: document.getElementById(\"inputDegree\").value,\n            partners: [] // Arreglo de companeros de comision, se completa luego\n        }\n\n        // Validar datos de formulario\n        if (newData.name == \"\" || newData.secondName == \"\" || newData.lu == \"\" || newData.degree == \"\") {\n            console.log(\"Uno de los campos queda vacio.\");\n            M.toast({\n                html: \"Complete todos los campos\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n            $rootScope.loading = false;\n            return;\n        }\n\n        // Buscar companeros de comision ingresados y generar arreglo de uids\n        var getUserUID = function (name) { // Obtener el uid a partir del nombre completo\n            for (var k in $scope.users)\n                if ($scope.users[k].name + \" \" + $scope.users[k].secondName == name) // Coincidencia\n                    return k;\n        };\n\n        // Validar los nombres de companeros de comision (deben existir usuarios, no pueden ser iguales)\n        if (document.getElementById(\"partner1\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner1\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (document.getElementById(\"partner2\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner2\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (newData.partners.length == 2) { // En caso de ingresar dos compañeros\n            if (newData.partners[0] == newData.partners[1]) { // No pueden ser iguales\n                M.toast({\n                    html: \"Nombres de compañeros iguales\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        // Falta verificar que ninguno de los dos companeros ingresado sean iguales al usuario actual\n\n        // Habria que incluir referencia al usuario actual en los companeros indicados\n        var updateNewData = function(){ // Actualizar entrada en la db\n            Cipressus.db.update(newData, \"users_public/\" + $rootScope.user.uid) // Actualizar\n                .then(function (res) {\n                    M.toast({\n                        html: \"Datos actualizados!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                    // Actualizar datos de view\n                    $rootScope.user.name = newData.name;\n                    $rootScope.user.secondName = newData.secondName;\n                    $rootScope.user.lu = newData.lu;\n                    $rootScope.user.degree = newData.degree;\n                    $rootScope.user.partners = newData.partners;\n                    $rootScope.loading = false;\n                    $scope.edit = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un problema al actualizar los datos\",\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        if ($scope.newProfilePic) { // Si puso nueva foto\n            var saveNewAvatar = function () { // Guardar nueva foto de perfil en storage\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + $scope.avatarFile.name.split(\".\")[1]; // Generar nombre de archivo\n                Cipressus.storage.put($scope.avatarFile, \"Images\", filename) // Guardar imagen en storage\n                    .then(function (res) {                        \n                        // Datos que van al storage\n                        newData.avatar = res.url;\n                        newData.avatarFilename = filename;\n                        // Actualizar datos de la vista\n                        $rootScope.user.avatar = res.url; // Enlace a la imagen\n                        $rootScope.user.avatarFilename = filename; // Nombre de archivo en storage\n                        updateNewData(); // Finalmente, actualizar todos los datos\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            }\n            // Si ya tenia foto de perfil, eliminar la anterior\n            if ($rootScope.user.avatarFilename) {\n                Cipressus.storage.delete($rootScope.user.avatarFilename, \"Images\")\n                    .then(function (res) {\n                        saveNewAvatar(); // Luego de borrar, guardar la nueva\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        saveNewAvatar(); // Intentar cargar nueva de todas maneras\n                    });\n            }else{ // Si no tenia foto de perfil, cargar directamente\n                saveNewAvatar();\n            }\n        }else{ // Si no cambio la foto de perfil, actualizar solo los datos\n            updateNewData();\n        }\n    };\n\n\n    ///// Inicialización controller\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.edit = false; // Toggle para la edicion de los datos del perfil\n    $scope.newProfilePic = false; // Indicador para saber si hay que actualizar foto de perfil\n    $scope.created = $rootScope.user.enrolled > 0 ? moment($rootScope.user.enrolled).format(\"DD/MM/YYYY HH:mm\") : \"(Aún no aprobado)\"; // Formato legible\n    $scope.newAvatar = $rootScope.user.avatar; // Nuevo src si carga nueva foto de perfil\n\n    M.Tooltip.init(document.querySelectorAll('.tooltipped'), {}); // Inicializar tooltips      \n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"profile\").catch(function (err) {\n        console.log(err)\n    });\n\n    Cipressus.db.get(\"users_public\") // Descargar datos de usuarios\n        .then(function (users_public_data) {\n            $scope.users = users_public_data;\n            // Lista de usuarios para autocompletador\n            var userList = {};\n            for (var k in $scope.users) // Para excluir admins o usuarios de otros cursos hay que bajar users_private\n                userList[$scope.users[k].name + \" \" + $scope.users[k].secondName] = $scope.users[k].avatar; // Lista de nombres y fotos\n            M.Autocomplete.init(document.querySelectorAll('.autocomplete'), {\n                data: userList\n            });\n\n            // Inicializar inputs\n            document.getElementById(\"inputName\").value = $rootScope.user.name;\n            document.getElementById(\"inputSecondName\").value = $rootScope.user.secondName;\n            document.getElementById(\"inputLU\").value = $rootScope.user.lu;\n            document.getElementById(\"inputDegree\").value = $rootScope.user.degree;\n            if ($rootScope.user.partners) {\n                if ($rootScope.user.partners[0])\n                    document.getElementById(\"partner1\").value = $scope.users[$rootScope.user.partners[0]].name + \" \" + $scope.users[$rootScope.user.partners[0]].secondName;\n                if ($rootScope.user.partners[1])\n                    document.getElementById(\"partner2\").value = $scope.users[$rootScope.user.partners[1]].name + \" \" + $scope.users[$rootScope.user.partners[1]].secondName;\n            }\n\n            M.FormSelect.init(document.querySelectorAll('select'), {});\n            M.updateTextFields(); // Para mostrar los placeholders\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);"],"sourceRoot":"/source/"}