{"version":3,"sources":["src/assets/custom/cipressus.js","src/assets/custom/cipressus-utils.js","src/assets/custom/cipressus-hardware.js","src/assets/custom/cipressus-test-fs.js","src/controllers/index.js","src/controllers/testResults.js","src/controllers/login.js","src/controllers/home.js","src/controllers/dashboard.js","src/controllers/calendar.js","src/controllers/sources.js","src/controllers/submissions.js","src/controllers/hardware.js","src/controllers/analizer.js","src/controllers/simulator.js","src/controllers/kMaps.js","src/controllers/tables.js","src/controllers/users.js","src/controllers/stats.js","src/controllers/attendance.js","src/controllers/activities.js","src/controllers/courses.js","src/controllers/editor.js","src/controllers/profile.js"],"names":["window","Cipressus","public","globalTarget","db","storage","users","hardware","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","publicvapidkey","listen","path","callback_success","callback_error","firebase","database","ref","on","snapshot","val","key","error","listenChild","child","value","orderByChild","equalTo","stopListener","Promise","fulfill","reject","off","then","get","once","getSorted","query","set","data","update","push","pushMultiple","dataArray","job","k","all","put","file","filename","size","totalBytes","getDownloadURL","url","putMultiple","files","filenames","res","sizes","results","urls","putString","str","onUserSignedIn","uid","console","log","onUserSignedOut","signIn","form","auth","signInWithEmailAndPassword","email","password","errorMessage","errorCode","code","result","signOut","signUp","createUserWithEmailAndPassword","users_public","activity","last_login","Date","now","browser","os","name","secondName","degree","lu","avatar","Math","floor","random","is","firefox","chrome","ie","opera","safari","ios","android","windows","linux","user","notif","icon","link","title","text","admins","utils","sendNotification","err2","err","resetPwd","sendPasswordResetEmail","initialize","initializeApp","messaging","usePublicVapidKey","requestPermission","onMessage","payload","opts","body","sound","registration","showNotification","getToken","currentToken","onTokenRefresh","refreshedToken","showToken","navigator","serviceWorker","getRegistration","reg","onAuthStateChanged","actionStack","searchNode","node","id","children","getLeafNodes","childs","concat","defaultCostFunction","submitMs","deadlineMs","param","ceil","eval","student","sum","cost","deadline","submits","submitted","date","score","ev","disc","scores","sc","getArray","root","getArrRec","arr","parent","dl","getTree","treeRec","tree","nodes","edges","color","label","shape","font","face","strokeWidth","strokeColor","toString","from","to","course","replace","sendEmail","sendFCMNotification","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","json","JSON","parse","responseText","msg","stringify","send","timestamp","read","generateFileName","len","possible","i","charAt","length","quillToHTML","activityCntr","userUid","item","activity_data","updates","logAction","actionMsg","logError","stack","getPrimeImplicants","mark2","j","c","p","n","r","q","combine","m","a","count","repeatelem","elem","accu","addOneAndRecurse","remaining","newList","IM","im","im2","mark","sort","socket","timerId","serialPorts","initServer","params","sample_period","sp","io","onUpdate","WebSocket","onerror","onopen","clearInterval","onSocketOpen","onclose","setInterval","ci","onSocketClose","onmessage","message","input","stopServer","close","ioUpdate","outputs","output","setTimeout","connectTo","portIndex","getSerialPorts","test_FS","questions","options","evalMatrix","profileDesc","answers","var_sum","vble","quest","this","reduce","b","scales","app","angular","module","$routeProvider","when","templateUrl","controller","filter","$sce","trustAsResourceUrl","$locationProvider","hashPrefix","run","$rootScope","$location","loading","userLogged","bodyClass","notifications","notifCnt","moment","locale","relativeTime","future","past","s","ss","mm","h","hh","d","dd","M","MM","y","yy","greetings","split_afternoon","split_evening","currentHour","parseFloat","format","getTime","stamp","time","fromNow","getUserNames","userUids","names","join","readableFileSize","bytes","si","thresh","abs","units","u","toFixed","openNotification","idx","sidenav","Sidenav","init","document","querySelector","side","inDuration","Collapsible","Modal","getElementById","usb_modal","help_modal","addEventListener","resizeEvent","Dropdown","querySelectorAll","toast","html","classes","displayLength","sendHelp","helpMessage","public_data","private_data","admin","enrolled","OS","update_activity","$apply","lastView","route","split","search","usbStatus","wssIconColor","onWssConnect","onWssDisconnect","hardwareConfig","FormSelect","openUSBModal","connectToServer","disconnectFromServer","enableConnect","connectToSerialPort","isInStandaloneMode","setState","showInstallMessage","e","userChoice","choiceResult","outcome","directive","restrict","scope","$watch","width","style","marginLeft","innerHTML","$scope","keypressed","btn_click","loginAttempt","userForm","retrievePassword","registerNewUser","formOk","passwordConfirm","updateButtons","login_mode","btn_text","menu_left","menu_right","welcomeText","updateTextFields","localStorageService","testFSAnswers","testStatus","test_fs","test_modal","dismissible","loadTest","startTime","timeline","changes","putOption","opt","undefined","prev","next","saveTestResults","downloadNews","news","authors","forEach","childSnapshot","content","indexOf","author","comments","unshift","getUser","user_data","newsData","last_update","comment_modal","commentText","commentPost","commEntryIdx","publishComment","comment","snap","ts","deleteComment","commentId","entryId","news_update","updateSunburst","Highcharts","chart","height","credits","enabled","plotOptions","series","events","click","event","updatePolarPlot","point","type","allowDrillToNode","cursor","dataLabels","property","operator","levels","level","levelIsConstant","colorIndex","colorByPoint","colorVariation","tooltip","headerFormat","pointFormat","currentNode","activities","currentActivityScores","points","subsc","subValue","z","parseInt","minPointSize","innerSize","zMin","updateProgressPlot","progressData","totalEvents","futureEvents","attendanceData","asistencia","plotBorderWidth","pie","startAngle","endAngle","center","updateBarPlot","seriesData","drillDownData","drilldown","tempData","setOptions","lang","drillUpText","xAxis","yAxis","legend","borderWidth","drillUp","$","highcharts","updateAttendancePlot","categories","first","evCnt","evAtt","eventsAll","start","attendance","attendableEvents","activities_data","events_data","userAttendedEvents","Object","getOwnPropertyNames","att","evaluator","viewModal","editModal","confirmDeleteModal","confirmMoveModal","refreshCalendar","fullCalendar","weekends","editable","allDaySlot","minTime","maxTime","timeFormat","dateFormat","slotLabelInterval","slotLabelFormat","header","eventSources","eventDrop","selectedEvent","_d","unix","end","info","selectedEventExtras","eventResize","eventClick","startDay","endTime","viewRender","view","element","confirmDeleteEvent","editEvent","newEvent","saveEvent","formStatus","deleteEvent","splice","moveEvent","durationEditable","pushFiles","folderName","uploadFiles","folderKey","fileList","uploadingFiles","fileListQueue","uploaded","downloads","res2","sources","files_modal","deleteFile","folder","fileKeyToDelete","fileToDelete","confirmDelete","confirm_delete_modal","openImage","src","image_viewer_modal","openPdfViewer","pdfURL","pdf_viewer_modal","preventScrolling","folderList","Autocomplete","resetForm","selectedActivity","pushSubmission","reference","submissions","submCnt","activityName","pushFile","observs","activityId","created","partners","action","display","obs","submitSim","selectedSim","downloaded","subm","newStatus","upd","toJson","openSimulation","viewSubm","submKeyView","submission_modal","evaluated","evaluatingKey","evaluatingNode","activityTree","leafActivities","confirm_evaluate_modal","confirmEvaluate","upd_status","sb","deleteDBRef","submissions_data","users_data","sel","actIdx","findIndex","x","selectedIndex","includes","submit","simulations","sim","simObj","index","sim_sel","simIdx","initTester","tester","stopTester","running","animation","exporting","initAnalizer","addPoint","startChartUpdater","redraw","toggleStartStop","updateFields","getSimulations","load_modal","simulations_data","loadCircuit","model","simcir","clearDevices","showToolbox","clientWidth","clientHeight","toolbox","setupSimcir","currentSim","circuitFileName","saveCircuit","find","devices","connectors","save_modal","analizeCircuit","inputs","getExternalLabels","ioDevices","self","circuitDetails","deviceCnt","connectorCnt","truthTable","rows","expressions","canonMinTerm","canonMaxTerm","combMax","pow","minterms","maxterms","primeImplicants","minifiedExpresions","canonMinExpressions","canonMaxExpressions","getCanonicalExpressions","t","substring","results_modal","getBooleanExpressions","evalInput","inputBin","padStart","setInputStatus","getOutputStatus","selectToDelete","selected","delete_modal","deleteCircuit","onresize","w","el","getElementsByClassName","setAttribute","qmc","QuineMcCluskey","karnaugh","KarnaughMap","varsNum","showDCares","varNumChange","setNoOfVars","dCareChange","allowDontCares","selectedKey","showAll","orderTag","reverseOrder","changeOrder","tag","onInputDateChange","auxiliarySubmits","viewUser","getUserIndex","evalAttendance","selectUser","confirmEnrollModal","activitiesTree","enrollUser","user_private","evalUser","auxiliaryScores","removeEventListener","scoresModal","getCost","deleteSubmit","saveScores","obj","users_public_data","users_private_data","scatter_data","updateScoreBarPlot","excludeStat","round","updateTechPie","totalBr","totalOs","br","Firefox","Chrome","IE","Opera","Safari","Otro","Windows","Linux","IOS","Android","plotBackgroundColor","plotShadow","allowPointSelect","theme","contrastTextColor","connectorColor","updateMenuAccessPlot","itemCntr","home","dashboard","calendar","simulator","profile","categoriesData","items","min","align","labels","overflow","valueSuffix","bar","layout","verticalAlign","floating","backgroundColor","defaultOptions","shadow","updateScatterPlot","seriesData1","seriesData2","zoomType","startOnTick","endOnTick","showLastLabel","scatter","marker","radius","states","hover","lineColor","updateProfilesPlot","avgScales","dataCnt","stdScales","sqrt","updateLists","confirmModal","absents","presents","selectedEventKey","isPresent","isAbsent","saveList","today","nextKey","ref_","pieces_","subtitle","selectActivity","updateTree","destroy","container","hierarchical","direction","vis","Network","update_sunburst","apply","selectedHistory","selectedNode","selectPreviousActivity","pop","courseID","$$search","copy","childres","deleteCourseModal","deleteCourse","selectedCourseKey","selectedCourseIndex","courses","select","quilleditor","createElement","appendChild","quill","Quill","modules","toolbar","list","script","indent","background","imageResize","firstChild","order","updateTimestamp","deleteSelected","moveSelected","up","temp","saveSelected","scheduledNew","RegExp","reader","FileReader","onloadend","newAvatar","avatarFile","newProfilePic","readAsDataURL","uploadPic","saveForm","newData","getUserUID","partUid","updateNewData","edit","saveNewAvatar","avatarFilename","Tooltip","userList"],"mappings":"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","file":"main-16e4e7be41.js","sourcesContent":["window.Cipressus = (function () {\n    // Libreria para el control de la base de datos, storage, metodos utiles de la app y de comunicacion con hardware\n\n    var public = { // Instancia de la clase\n        globalTarget: null, // Este atributo se usa para poder acceder a variables desde la consola\n        db: {}, // Operaciones de base de datos\n        storage: {}, // Almacenamiento de archivos\n        users: {}, // Operaciones de autenticacion\n        hardware: {} // Metodos de control de hardware (probador de circuitos)\n    };\n\n    //// BASE DE DATOS /////\n\n    public.db.config = { // Configuracion de la base de datos\n        apiKey: \"AIzaSyAHpgtsZeQbcoCbKNE1dNjd7gUbSIFWz6M\",\n        authDomain: \"cipressus-0000.firebaseapp.com\",\n        databaseURL: \"https://cipressus-0000.firebaseio.com\",\n        projectId: \"cipressus-0000\",\n        storageBucket: \"cipressus-0000.appspot.com\",\n        messagingSenderId: \"927588929794\",\n        publicvapidkey: \"BF0sMjIt0y1H_3oyJzmkBmPkrG9UK7HL5ekgRXj50jEYc3MZSfpjCd051A0tNkNfEtLmmVlYILFvi8PQ0BDXRNM\"\n    };\n\n    public.db.listen = function (path, callback_success, callback_error) { // Escuchar cambios\n        firebase.database().ref(path).on('value',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.listenChild = function(path, child, value, callback_success, callback_error) { // Escucha cambios con filtro\n        firebase.database().ref(path).orderByChild(child).equalTo(value).on('child_added',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.stopListener = function(path){ // Detener escuchador\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).off()\n                .then(function () {\n                    return fulfill();\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.get = function (path) { // Descargar informacion de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot.val());\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.getSorted = function (path, key) { // Obtener lista ordenada por key\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.query = function(path, key, value) { // Consulta por valor\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).equalTo(value).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.set = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).set(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.update = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).update(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.push = function (data, path) { // Nueva entrada (retorna id)\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).push(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.pushMultiple = function (dataArray, path) { // Subir multiples entradas a un mismo directorio\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in dataArray) // Para cada objeto \n                job.push(firebase.database().ref(path).push(dataArray[k])); // TODO: usar multiples paths \n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot es un array que contiene los keys\n                    return fulfill(snapshot); // Del otro lado se puede hacer un for para retornar\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n\n    //// ALMACENAMIENTO ////\n\n    public.storage.put = function (file, path, filename) { // Subir archivo\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).put(file)\n                .then(function (snapshot) {\n                    var size = snapshot.totalBytes; // Tamanio de archivo\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill({\n                            size: size,\n                            url: url\n                        }); // Devolver tamanio y url del archivo\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putMultiple = function (files, path, filenames) { // Subir muchos archivos\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in files) // Para cada archivo                \n                job.push(firebase.storage().ref().child(path + \"/\" + filenames[k]).put(files[k]));\n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot devuelve las url de manera asincrona pero en este caso es un array\n                    var res = []; // Nuevamente generar promesas\n                    var sizes = []; // Lista de tamanios de archivos\n                    for (var k in snapshot) {\n                        sizes.push(snapshot[k].totalBytes);\n                        res.push(snapshot[k].ref.getDownloadURL());\n                    }\n                    Promise.all(res) // Ejecutar promise para obtener urls\n                        .then(function (results) { // Results es un array con los urls                    \n                            return fulfill({\n                                sizes: sizes,\n                                urls: results\n                            }); // Mandar tamanio y urls\n                        });\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putString = function (str, path, filename) { // Guardar string\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).putString(str)\n                .then(function (snapshot) {\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill(url); // Devolver url de descarga\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.delete = function (filename, path) { // Borrar un archivo de storage\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).delete()\n                .then(function () {\n                    return fulfill(\"Borrado: \" + path + \"/\" + filename);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n    //// USUARIOS /////\n\n    public.users.onUserSignedIn = function (uid) { // Overridable - inicio de sesion\n        console.log(\"default -- logged in \" + uid);\n    };\n\n    public.users.onUserSignedOut = function () { // Overridable - cierre de sesion\n        console.log(\"default -- logged out\");\n    };\n\n    public.users.signIn = function (form) { // Iniciar sesión\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/wrong-password':\n                            errorMessage = \"La contraseña es incorrecta.\";\n                            break;\n                        case 'auth/user-disabled':\n                            errorMessage = \"El usuario se haya inhabilitado momentáneamente.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Quizá esté mal escrito o no exista.\";\n                            break;\n                        case 'auth/user-not-found':\n                            errorMessage = \"El usuario no existe.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó.. revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    return fulfill(\"Logeado correctamente.\");\n                });\n        });\n    };\n\n    public.users.signOut = function () {\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signOut()\n                .then(function () {\n                    return fulfill(\"Ha salido de Cipressus.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n    public.users.signUp = function (form) { // Registrarse como nuevo usuario\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/weak-password':\n                            errorMessage = \"La contraseña es demasiado débil. Intenta con una más segura.\";\n                            break;\n                        case 'auth/email-already-in-use':\n                            errorMessage = \"Éste email ya existe en nuestra base de datos.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Revisa lo ingresado.\";\n                            break;\n                        case 'auth/operation-not-allowed':\n                            errorMessage = \"No se puede crear la cuenta para ese usuario. Ponete en contacto con los administradores.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó... revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    // Guardar informacion del usuario en la db\n                    var users_public = { // Informacion editable por usuarios\n                        activity: {\n                            last_login: Date.now(),\n                            browser: {}, // Contador de navegadores\n                            os: {} // Contador de sistemas operativos\n                        },\n                        name: form.name,\n                        secondName: form.secondName,\n                        email: form.email,\n                        degree: form.degree,\n                        lu: form.lu,\n                        avatar: \"images/robohashes/robohash\"+Math.floor(Math.random()*20+1)+\".png\" // Imagen de perfil aleatoria\n                    };\n                    // Inicializar contadores de navegador y so\n                    users_public.activity.browser[is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))))] = 1;\n                    users_public.activity.os[is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')))] = 1;\n\n                    public.db.set(users_public, 'users_public/' + result.user.uid)\n                        .then(function (res) {\n                            // Notificar a los usuarios administradores sobre el nuevo registro\n                            public.db.query(\"users_private\", \"admin\", true)\n                            .then(function(snapshot){\n                                var notif = { // Detalles de la notificacion\n                                    icon: \"info\",\n                                    link: \"users\",\n                                    title: \"Nuevo registro\",\n                                    text: \"Nuevo usuario registrado: \"+form.email\n                                };\n                                var admins = snapshot.val();\n                                for(var k in admins)\n                                    public.utils.sendNotification(k, notif);\n                            })\n                            .catch(function (err2) {\n                                console.log(err2);\n                            });\n                            return fulfill(\"Datos de nuevo usuario registrados.\");\n                        })\n                        .catch(function (err) {\n                            return reject([err, \"Ocurrió un problema al guardar los datos.\"]);\n                        });\n                });\n        });\n    };\n\n    public.users.resetPwd = function (email) { // Restablecer contrasenia\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().sendPasswordResetEmail(email)\n                .then(function () {\n                    return fulfill(\"Listo. Revisa tu correo electrónico.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n\n    ///// INICIALIZACION /////\n\n    public.initialize = function () { // Instrucciones de inicializacion de las utilidades        \n        return new Promise(function (fulfill, reject) {\n            firebase.initializeApp(public.db.config); // Inicializar base de datos\n\n            // Configurar mensajeria y notificaciones push\n            var messaging = firebase.messaging();\n            \n            messaging.usePublicVapidKey(public.db.config.publicvapidkey);\n            \n            messaging.requestPermission()\n                .then(function () {\n                    console.log('Permisos de notificación otorgados.');\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    console.log('No es posible habilitar notificaciones.');\n                });\n\n            /* Importar el script de notifications\n            firebase.notifications().onNotification((notification) => {\n                console.log('Notificacion: ',notification);\n                //firebase.notifications().displayNotification(notification);\n            });\n            */\n\n            messaging.onMessage(function(payload) {\n                console.log('Message received: ', payload);\n                // Mostrar notificacion popup\n                const opts = {\n                    body: 'Se actualizó tu calificación \"Informe laboratorio 1\"',\n                    icon: '/images/mainlogo.png',\n                    sound: '/sounds/notification.mp3' // No soportado\n                };\n                public.registration.showNotification(\"Cipressus\", opts);\n            });\n\n            messaging.getToken().then(function (currentToken) {\n                if (currentToken) \n                    console.log(\"Current token\", currentToken);\n                else \n                    console.log('No Instance ID token available. Request permission to generate one.');\n            }).catch(function (err) {\n                console.log('An error occurred while retrieving token. ', err);\n            });\n\n            messaging.onTokenRefresh(function () {\n                messaging.getToken().then(function (refreshedToken) {\n                    console.log('Token refreshed.');\n                    // Indicate that the new Instance ID token has not yet been sent to the\n                    // app server.\n                    //setTokenSentToServer(false);\n                    // Send Instance ID token to app server.\n                    //sendTokenToServer(refreshedToken);\n                    // ...\n                }).catch(function (err) {\n                    console.log('Unable to retrieve refreshed token ', err);\n                    showToken('Unable to retrieve refreshed token ', err);\n                });\n            });\n\n            navigator.serviceWorker.getRegistration().then(function(reg){\n                public.registration = reg; // Nuevo atributo\n                // messaging.useServiceWorker(reg); //\n            });\n\n            // Autenticacion\n            firebase.auth().onAuthStateChanged(function (user) { // Escuchar cambios de logeo de usuario\n                if (user) // El usuario esta logeado\n                    public.users.onUserSignedIn(user.uid); // Pasar uid a los callbacks\n                else // Si cerro sesión, se llama al callback\n                    public.users.onUserSignedOut();\n            });\n\n            return fulfill();\n        });\n    };\n\n    return public;\n})();","(function (public) { //// UTILIDADES ////\n\n    var actionStack = [];\n\n    public.utils = {};\n\n    public.utils.searchNode = function (node, id) { // Obtener el objeto de un nodo a partir del id\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = null;\n        if (node.id == id) // Coincidencia\n            return node;\n        else\n        if (node.children) // Si el nodo tiene hijos, recorrer buscando\n            for (var k in node.children) { // Para cada hijo del nodo\n                result = public.utils.searchNode(node.children[k], id); // Buscar\n                if (result)\n                    return result;\n            }\n        return result;\n    };\n\n    public.utils.getLeafNodes = function (node) { // Devuelve la lista de nodos hojas que contiene el arbol \"node\"\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = []; // Lista de nodos hojas a retornar\n        if(node.children){ // Si el nodo tiene hijos\n            for(var k in node.children){\n                var childs = public.utils.getLeafNodes(node.children[k]);\n                result = result.concat(childs);\n            }\n            return result;\n        }else{ // Si no tiene hijos, el mismo nodo ya es hoja\n            return [node]; \n        }\n    };\n\n    public.utils.defaultCostFunction = function (submitMs, deadlineMs, param) { // Funcion de costo por perdida de vencimiento de una actividad\n        // Entradas:\n        //\t\t- submitMs: es la fecha de entrega expresada en unix time\n        //\t\t- deadlineMs: es la fecha de vencimiento (debe ser menor que submitMs)\n        //\t\t- param: contiene el o los parametros de la funcion de costo (extender a vector si hace falta)\n        return Math.ceil((submitMs - deadlineMs) / 86400000) * param; // Desgaste lineal por dia\n    };\n\n    public.utils.eval = function (student, node) { // Computar nota de un alumno en puntaje absoluto\n        // Entradas:\n        //\t\t- student: contiene la informacion de entregas y notas asignadas por los profesores\n        //\t\t- node: es el nodo del arbol de actividades al que se le quiere calcular el puntaje total \n        \n        var sum = 0; // Suma ponderada de calificaciones\n        var cost  = 0; // Suma de costos en puntaje acumulados (ponderados por las subactividades)\n\n        if (node.deadline) // Si la actividad tiene fecha de vencimiento\n            if (student.submits) // Si el alumno tiene alguna entrega\n                if (student.submits[node.id]) // Y si esta actividad ya fue entregada por el alumno y recibida por el profesor\n                    if (student.submits[node.id].submitted > node.deadline.date) { // Si se paso el vencimiento, hay que descontar puntos segun funcion de desgaste\n                        cost = public.utils.defaultCostFunction(student.submits[node.id].submitted, node.deadline.date, node.deadline.param);\n                        if (cost > node.score) \n                            cost = node.score; // Habria que considerar la nota puesta\n                    }\n\n        if (node.children) { // Si el nodo tiene hijos, calcular suma ponderada de los hijos\n            for (var k in node.children){ // Para cada hijo del nodo\n                var ev = public.utils.eval(student, node.children[k]); // Calificaciones obtenida de los hijos\n                sum += ev.score; // Puntaje total (ya incluye costo)\n                cost += ev.disc; // Costos discriminados (para saber de que son)\n            }            \n        } else { // Es hoja\n            if(student.scores){ // Puede que no tenga ninguna calificacion aun\n                if (student.scores[node.id]){ // Si ya esta evaluado este campo\n                    var sc = student.scores[node.id].score * node.score / 100; // Retornar el valor de la nota multiplicado por el puntaje de la actividad\n                    sum = sc;\n                }\n            }\n        }\n\n        sum -= cost; // Restar costo\n        if (sum < 0) sum = 0; // La nota no puede ser negativa\n        \n        return {score: sum, disc: cost};\n    };\n\n    public.utils.getArray = function (root) { // Convertir el arbol en arreglo referenciado\n        // Sirve para exportar a formato de highcharts y para listar actividades en vista de alumnos\n\n        var getArrRec = function (node, arr, parent) { // Recorrido recursivo\n            if (node.children) {\n                for (var k in node.children) // Para cada hijo del nodo\n                    getArrRec(node.children[k], arr, node.id); // Obtener arreglo de los hijos\n                \n                arr.push({ // Agregar el nodo actual \n                    id: node.id,\n                    parent: parent, // Referencias hacia atras\n                    name: node.name,\n                    score: node.score, // Higcharts calcula este valor y por eso se llama value en las hojas\n                    dl: node.deadline // Vencimiento si existe\n                });\n            } else { // Es hoja, agregar hoja y retornar\n                arr.push({\n                    id: node.id,\n                    parent: parent,\n                    name: node.name,\n                    value: node.score, // Este dato lo usa highcarts (se calcula para los nodos padres)\n                    dl: node.deadline // Vencimiento si existe\n                });\n            }\n        }\n\n        var arr = [];\n\n        getArrRec(root, arr, ''); // Iniciar\n        \n        return arr;\n    };\n\n    public.utils.getTree = function(root){ // Obtener arbol como nodos y lazos\n        \n        var treeRec = function(tree, nodes, edges, color){ // Funcion recursiva para recorrer el arbol\n            \n            nodes.push({\n                id: tree.id,\n                label: tree.name+\"\\nPuntaje: \"+tree.score,\n                shape: \"box\",\n                color: color ? color : \"#555555\",                \n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            });\n\n            if(tree.children){ \n                var color = '#'+Math.floor(Math.random()*16777215).toString(16);\n                for(var k in tree.children){\n                    treeRec(tree.children[k], nodes, edges, color);\n                    edges.push({\n                        from: tree.id,\n                        to: tree.children[k].id\n                    });\n                }\n            }else{                \n                return;\n            }\n        };\n\n        // Hay que crear un nodo root con un solo children para que funcione con la libreria vis.js\n        var nodes = [\n            {\n                id: \"main\", \n                label: root.course.name.replace(/\\s/g,\"\\n\"),\n                shape: \"box\",\n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            }\n        ]; \n\n        var edges = [{from: \"main\", to: root.id}];\n\n        treeRec(root, nodes, edges); // Iniciar\n\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n\n    public.utils.sendEmail = function (data) { // Enviar email (requiere script php en hosting)\n        return new Promise(function (fulfill, reject) {\n            /*\n            var uriData = 'nombre=' + data.name + '&email=' + data.email + '&cc=' + data.cc.join() + '&asunto=' + data.subject + '&mensaje=' + data.message;\n            var ajax_url = 'https://cipressus.uns.edu.ar/mail.php';\n            var ajax_request = new XMLHttpRequest();\n            ajax_request.onreadystatechange = function () {\n                if (ajax_request.readyState === 4)\n                    return fulfill({\n                        response: ajax_request.responseText,\n                        type: \"success\",\n                        status: ajax_request.status\n                    });\n            };\n            try {\n                ajax_request.open(\"POST\", ajax_url, false);\n                ajax_request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                ajax_request.send(encodeURI(uriData));\n            } catch (err) {\n                return reject(err);\n            }\n            */\n            return reject(\"Email no implementado\");\n        });\n    };\n\n    public.utils.sendFCMNotification = function (data) { // Enviar notificaciones por FCM\n        var xhr = new XMLHttpRequest();\n        var url = \"https://fcm.googleapis.com/fcm/send\";\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", \"key=AAAA1_ib0QI:APA91bHVFpFU4-CAibNhNmCriYbWcqbmhQuuCZa1sITD4BgF2wBBYZ8-WPc30NI0n_HfPFHEIzG1THqKgtWS8gd1bUROftZpW_o2OqBP64IgciaQMNnp4_nKU5vysZmAACjToKWFsPGe\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                var json = JSON.parse(xhr.responseText);\n                console.log(json);\n            }\n        };\n\n        /*var data = {\n            \"notification\": {\n                \"title\": \"Cipressus\",\n                \"body\": \"Hola mundo\",\n                \"icon\": \"images/mainlogo.png\"\n            },\n            \"to\": \"eY9vq-H4hws:APA91bHwMxWW5K6jEySnJGpkOEHc9RiY6aCjEUl1yK0xqf4LHeOmgGMUYlYlBYDiN7inFJjz1vMHeb3GGAg-yQPYJphveS_Q7q_i2JY1VKgSv7HqGMY3mUW4uKqph7NQt48b4KXyh5B-\" // Token que devuelve\n        };*/\n\n        var msg = JSON.stringify(data);\n        xhr.send(msg);\n    };\n\n    public.utils.sendNotification = function(uid, data){\n        /* \n        data = { // Formato de objeto\n            icon:\n            link:\n            title:\n            text:\n        }\n        */\n\n        var notif = data;\n        notif.uid = uid;\n        notif.timestamp = Date.now();\n        notif.read = false;\n        public.db.push(notif, \"notifications\")\n        .then(function(){\n            console.log(\"Notificacion enviada\");\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    public.utils.generateFileName = function (len) { // Nombres aleatorios para archivos\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < len; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n\n    public.utils.quillToHTML = function (str) { // Hacer la adaptacion del formato quill al formato html de home\n        return str.replace(/ql-align-center/g, \"center-align\"); // Por ahora solo este, buscar otros\n    };\n\n    public.utils.activityCntr = function (userUid, item, param) { // Incrementador de contadores para monitoreo de actividad de usuarios\n        return new Promise(function (fulfill, reject) {\n            public.db.get(\"users_public/\" + userUid + \"/activity/items/\" + item)\n                .then(function (activity_data) {\n                    var data = {};\n                    if (activity_data) // Tiene valores en este item de actividad\n                        data[item] = activity_data + 1;\n                    else // Aun no registra actividad en este item\n                        data[item] = 1;\n                    var updates = {};\n                    updates[\"users_public/\" + userUid + \"/activity/items\"] = data; // Contadores\n                    if(param)\n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item+\"?id=\"+param; // Ultima vista\n                    else    \n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item; // Ultima vista\n                    public.db.update(updates)\n                        .then(function (res) {\n                            return fulfill(res);\n                        })\n                        .catch(function (err) {\n                            return reject(err);\n                        });\n                })\n                .catch(function (err) {\n                    return reject(err);\n                });\n        });\n    };\n\n    public.utils.logAction = function(actionMsg){ // Registra acciones del usuario localmente. Si ocurre error se guarda el registro en la db\n        actionStack.push({\n            msg: actionMsg,\n            timestamp: Date.now()\n        });\n    };\n\n    public.utils.logError = function(error){ // Registra error en db para llevar estadistica de funcionamiento\n        /* Formato:\n        error = {\n            source: [string], // Nombre del controller o libreria donde ocurre el error\n            line: [number], // Numero de linea del codigo donde se dispara el error\n            code: [string], // Si hay codigo de error disponible o mensaje (generado por librerias, dependencias, etc)\n            msg: [string], // Mensaje de error (redactado por programador)\n            uid: [string], // Usuario que genero ese error\n        }\n\n        Ejemplo (sin codigo de error):\n\n        var error = {\n            source: \"main.js\", \n            line: 54,  // TODO: generar automaticamente\n            msg: \"Error actualizando dato\", // Mensaje de error (redactado por programador)\n            uid: \"erfd6f7a8dfadyfgad\" // Usuario que genero ese error\n        }\n        Cipressus.utils.logError(error);\n        */\n\n        // Agregar un par de atributos automaticos\n        error.timestamp = Date.now(); // Hora local (usar de firebase?)\n\n        if(actionStack.length > 0) // Registro de acciones\n            error.stack = actionStack;\n\n        // Logear en firestore\n        public.db.push(error, \"errorLog\")\n        .then(function(){\n            actionStack = []; // Se reinicia la pila de acciones\n            console.log(\"Error reportado\");\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    public.utils.getPrimeImplicants = function (data) { // Obtener implicantes primos a partir de los miniterminos\n        // Autor del metodo: Janus Troelsen (https://gist.github.com/ysangkok/5707171)\n        /*\n        var minterms = ['1101', '1100', '1110', '1111', '1010', '0011', '0111', '0110'];\n        var minterms2 = ['0000', '0100', '1000', '0101', '1100', '0111', '1011', '1111'];\n        var minterms3 = ['0001', '0011', '0100', '0110', '1011', '0000', '1000', '1010', '1100', '1101'];\n        console.log( 'PI(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms)));\n        console.log( 'PI2(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms2)));\n        console.log( 'PI3(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms3)));\n        */\n\n        var combine = function (m, n) {\n            var a = m.length,\n                c = '',\n                count = 0,\n                i;\n            for (i = 0; i < a; i++) {\n                if (m[i] === n[i]) {\n                    c += m[i];\n                } else if (m[i] !== n[i]) {\n                    c += '-';\n                    count += 1;\n                }\n            }\n            if (count > 1)\n                return \"\";\n            return c;\n        };\n\n        var repeatelem = function (elem, count) {\n            var accu = [],\n                addOneAndRecurse = function (remaining) {\n                    accu.push(elem);\n                    if (remaining > 1) {\n                        addOneAndRecurse(remaining - 1);\n                    }\n                };\n            addOneAndRecurse(count);\n            return accu;\n        };\n\n        var newList = [].concat(data),\n            size = newList.length,\n            IM = [],\n            im = [],\n            im2 = [],\n            mark = repeatelem(0, size),\n            mark2, m = 0,\n            i, j, c, p, n, r, q;\n        for (i = 0; i < size; i++) {\n            for (j = i + 1; j < size; j++) {\n                c = combine(newList[i], newList[j]);\n                if (c !== \"\") {\n                    im.push(c);\n                    mark[i] = 1;\n                    mark[j] = 1;\n                }\n            }\n        }\n\n        mark2 = repeatelem(0, im.length);\n        for (p = 0; p < im.length; p++) {\n            for (n = p + 1; n < im.length; n++) {\n                if (p !== n && mark2[n] === 0 && im[p] === im[n]) {\n                    mark2[n] = 1;\n                }\n            }\n        }\n\n        for (r = 0; r < im.length; r++) {\n            if (mark2[r] === 0) {\n                im2.push(im[r]);\n            }\n        }\n\n        for (q = 0; q < size; q++) {\n            if (mark[q] === 0) {\n                IM.push(newList[q]);\n                m = m + 1;\n            }\n        }\n\n        if (m !== size && size !== 1)\n            IM = IM.concat(Cipressus.utils.getPrimeImplicants(im2));\n\n        IM.sort();\n        return IM;\n    };\n})(Cipressus);","(function (public) { ////// HARDWARE /////\n    var socket; // Objeto privado para comunicarse con el server\n    var timerId = null; // Timer para temporizar los llamados al socket\n    var serialPorts = []; // Lista de puertos serie disponibles (objeto privado)\n\n    public.hardware.initServer = function (params) { // Inicializar conexion con WebSocketServer      \n        /*\n            params: {\n                io: array con estados de entradas/salidas (para hacer binding con objetos de controllers)\n                sp: periodo de muestreo (ms) de envio de salidas\n                ci: periodo de intento de reconexion con server (ms)\n                onUpdate(): funcion que se llama en cada actualizacion de la entrada (para hacer apply por ej)\n            }\n        */\n\n        public.hardware.status = \"CONNECTING\"; // Inicialmente, el estado es de conectando (intenta cada tanto volver a abrir la conexion)\n        public.hardware.sample_period = params.sp; // Periodo de actualizacion de salidas\n        public.hardware.io = params.io; // Binding con view\n        public.hardware.onUpdate = params.onUpdate;\n\n        socket = new WebSocket(\"ws://localhost:8081\"); // Conectarse al server por web socket\n\n        socket.onerror = function (error) {\n            console.log(error);\n        };\n\n        socket.onopen = function () { // Puerto conectado\n            if (timerId) {\n                clearInterval(timerId);\n                timerId = null;\n            }\n            public.hardware.onSocketOpen(); // Ejecutar el callback\n        };\n\n        socket.onclose = function () { // Server no disponible (seguir intentando conectar)\n            if (public.hardware.status == \"CONNECTED\" || public.hardware.status == \"IDLE\") // Si la conexion con server estaba abierta significa que se cerro el server\n                public.hardware.status = \"CONNECTING\"; // Pasar a estado conectando\n            if (!timerId) {\n                timerId = setInterval(function () {\n                    socket = null;\n                    public.hardware.initServer(params);\n                }, params.ci);\n            }\n            public.hardware.onSocketClose(); // Ejecutar el callback\n        };\n\n        socket.onmessage = function (message) { // Respuesta del server\n            serialPorts = JSON.parse(message.data); // El primer mensaje que manda el server es la lista de puertos\n            public.hardware.status = \"IDLE\"; // Una vez que recibe la lista de puertos, espera conexion\n            socket.onmessage = function (message) { // Redefinir la funcion a partir de aqui                                        \n                for (var k = 0; k < 8; k++) // Debe mandar siempre un string de 8 caracteres \n                    public.hardware.io[k].input = (message.data[k] == \"1\"); // Configurar inputs segun caracter sea 1 o 0\n                public.hardware.onUpdate();\n            };\n        };\n    };\n\n    public.hardware.stopServer = function () { // Desconectarse del server (para liberar el uso de recursos)\n        public.hardware.status = \"DISCONNECTED\";\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n        }\n        socket.onclose = function () {}; // Borrar la funcion para que no se vuelva a conectar\n        socket.close();\n        socket = null;\n    };\n\n    public.hardware.ioUpdate = function () { // Envio de string al server para actualizar salidas\n        var outputs = \"\";\n        for (var k in public.hardware.io)\n            outputs += public.hardware.io[k].output ? \"1\" : \"0\";\n        socket.send(outputs);\n        if (public.hardware.status == \"CONNECTED\")\n            setTimeout(public.hardware.ioUpdate, public.hardware.sample_period);\n    };\n\n    public.hardware.connectTo = function (portIndex) { // Conectarse con un puerto de la lista    \n        if (serialPorts.length > 0) {\n            socket.send(portIndex); // Esto solo funciona mientras no se haya iniciado el streaming con el probador\n            public.hardware.status = \"CONNECTED\";\n            setTimeout(public.hardware.ioUpdate, 500); // Esperar 500ms e iniciar envio de comandos\n        } else\n            console.log(\"El listado de puertos no está disponible\");\n    };\n\n    public.hardware.getSerialPorts = function () { // Se puede pedir la lista de puertos en cualquier momento\n        return serialPorts; // Puede que un puerto ya no este disponible\n    };\n\n    public.hardware.onSocketOpen = function () { // Overridable - al conectarse con server\n        console.log(\"Socket abierto.\");\n    };\n\n    public.hardware.onSocketClose = function () { // Overridable - cuando se detiene el server\n        console.log(\"Socket cerrado.\");\n    }\n})(Cipressus);","(function (public) { ///// Test Felder-Silverman de estilos de aprendizaje\n    public.test_FS = {\n        questions: [{\n                text: \"Entiendo mejor algo\",\n                options: [\"si lo practico.\", \"si pienso en ello.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"realista.\", \"innovador.\"]\n            },\n            {\n                text: \"Cuando pienso acerca de lo que hice ayer, es más probable que lo haga sobre la base de\",\n                options: [\"una imagen.\", \"palabras.\"]\n            },\n            {\n                text: \"Tengo tendencia a\",\n                options: [\"entender los detalles de un tema pero no ver claramente su estructura completa\", \"entender la estructura completa pero no ver claramente los detalles.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo algo nuevo, me ayuda\",\n                options: [\"hablar de ello.\", \"pensar en ello.\"]\n            },\n            {\n                text: \"Si yo fuera profesor, yo preferiría dar un curso\",\n                options: [\"que trate sobre hechos y situaciones reales de la vida.\", \"que trate con ideas y teorías.\"]\n            },\n            {\n                text: \"Prefiero obtener información nueva de\",\n                options: [\"imágenes, diagramas, gráficas o mapas.\", \" instrucciones escritas o información verbal.\"]\n            },\n            {\n                text: \"Una vez que entiendo\",\n                options: [\"todas las partes, entiendo el total.\", \"el total de algo, entiendo como encajan sus partes.\"]\n            },\n            {\n                text: \"En un grupo de estudio que trabaja con un material difícil, es más probable que\",\n                options: [\"participe y contribuya con ideas.\", \"no participe y solo escuche.\"]\n            },\n            {\n                text: \"Es más fácil para mí\",\n                options: [\"aprender hechos.\", \"aprender conceptos.\"]\n            },\n            {\n                text: \"En un libro con muchas imágenes y gráficas es más probable que\",\n                options: [\"revise cuidadosamente las imágenes y las gráficas.\", \" me concentre en el texto escrito.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas de matemáticas\",\n                options: [\"generalmente trabajo sobre las soluciones con un paso a la vez.\", \"frecuentemente sé cuales son las soluciones, pero luego tengo dificultad para imaginarme los pasos para llegar a ellas.\"]\n            },\n            {\n                text: \"En las clases a las que he asistido\",\n                options: [\"he llegado a saber como son muchos de los estudiantes.\", \"raramente he llegado a saber como son muchos estudiantes.\"]\n            },\n            {\n                text: \"Cuando leo temas que no son de ficción, prefiero\",\n                options: [\"algo que me enseñe nuevos hechos o me diga como hacer algo.\", \"algo que me dé nuevas ideas en que pensar.\"]\n            },\n            {\n                text: \"Me gustan los maestros\",\n                options: [\"que utilizan muchos esquemas en el pizarrón.\", \"que toman mucho tiempo para explicar.\"]\n            },\n            {\n                text: \"Cuando estoy analizando un cuento o una novela\",\n                options: [\"pienso en los incidentes y trato de acomodarlos para configurar los temas.\", \"me doy cuenta de cuales son los temas cuando termino de leer y luego tengo que regresar y encontrar los incidentes que los demuestran.\"]\n            },\n            {\n                text: \"Cuando comienzo a resolver un problema de tarea, es más probable que\",\n                options: [\"comience a trabajar en su solución inmediatamente.\", \"primero trate de entender completamente el problema.\"]\n            },\n            {\n                text: \"Prefiero la idea de\",\n                options: [\"certeza.\", \"teoría.\"]\n            },\n            {\n                text: \"Recuerdo mejor\",\n                options: [\"lo que veo.\", \"lo que oigo.\"]\n            },\n            {\n                text: \"Es más importante para mí que un profesor\",\n                options: [\"exponga el material en pasos secuenciales claros.\", \"me dé un panorama general y relacione el material con otros temas.\"]\n            },\n            {\n                text: \"Prefiero estudiar\",\n                options: [\"en un grupo de estudio.\", \"solo.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"cuidadoso en los detalles de mi trabajo.\", \"creativo en la forma en la que hago mi trabajo.\"]\n            },\n            {\n                text: \"Cuando alguien me da direcciones de nuevos lugares, prefiero\",\n                options: [\"un mapa.\", \"instrucciones escritas.\"]\n            },\n            {\n                text: \"Aprendo\",\n                options: [\"a un paso constante. Si estudio con ahínco consigo lo que deseo.\", \"en inicios y pausas. Me llego a confundir y súbitamente lo entiendo.\"]\n            },\n            {\n                text: \"Prefiero primero\",\n                options: [\"hacer algo y ver que sucede.\", \"pensar como voy a hacer algo.\"]\n            },\n            {\n                text: \"Cuando leo por diversión, me gustan los escritores que\",\n                options: [\"dicen claramente los que desean dar a entender.\", \"dicen las cosas en forma creativa e interesante.\"]\n            },\n            {\n                text: \"Cuando veo un esquema o bosquejo en clase, es más probable que recuerde\",\n                options: [\"la imagen.\", \"lo que el profesor dijo acerca de ella.\"]\n            },\n            {\n                text: \"Cuando me enfrento a un cuerpo de información\",\n                options: [\"me concentro en los detalles y pierdo de vista el total de la misma.\", \"trato de entender el todo antes de ir a los detalles.\"]\n            },\n            {\n                text: \"Recuerdo más fácilmente\",\n                options: [\"algo que he hecho.\", \"algo en lo que he pensado mucho.\"]\n            },\n            {\n                text: \"Cuando tengo que hacer un trabajo, prefiero\",\n                options: [\"dominar una forma de hacerlo.\", \"intentar nuevas formas de hacerlo.\"]\n            },\n            {\n                text: \"Cuando alguien me enseña datos, prefiero\",\n                options: [\"gráficas.\", \"resúmenes con texto.\"]\n            },\n            {\n                text: \"Cuando escribo un trabajo, es más probable que\",\n                options: [\"lo haga (piense o escriba) desde el principio y avance.\", \" lo haga (piense o escriba) en diferentes partes y luego las ordene.\"]\n            },\n            {\n                text: \"Cuando tengo que trabajar en un proyecto de grupo, primero quiero\",\n                options: [\"realizar una 'tormenta de ideas' donde cada uno contribuye con ideas.\", \"realizar la 'tormenta de ideas' en forma personal y luego juntarme con el grupo para comparar las ideas.\"]\n            },\n            {\n                text: \"Considero que es mejor elogio llamar a alguien\",\n                options: [\"sensible.\", \"imaginativo.\"]\n            },\n            {\n                text: \"Cuando conozco gente en una fiesta, es más probable que recuerde\",\n                options: [\"cómo es su apariencia.\", \"lo que dicen de sí mismos.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo un tema, prefiero\",\n                options: [\"mantenerme concentrado en ese tema, aprendiendo lo más que pueda de él.\", \"hacer conexiones entre ese tema y temas relacionados.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"abierto.\", \"reservado.\"]\n            },\n            {\n                text: \"Prefiero cursos que dan más importancia a\",\n                options: [\"material concreto (hechos, datos).\", \" material abstracto (conceptos, teorías).\"]\n            },\n            {\n                text: \"Para divertirme, prefiero\",\n                options: [\"ver televisión.\", \"leer un libro.\"]\n            },\n            {\n                text: \"Algunos profesores inician sus clases haciendo un bosquejo de lo que enseñarán. Esos bosquejos son\",\n                options: [\"algo útiles para mí.\", \"muy útiles para mí.\"]\n            },\n            {\n                text: \"La idea de hacer una tarea en grupo con una sola calificación para todos\",\n                options: [\"me parece bien.\", \"no me parece bien.\"]\n            },\n            {\n                text: \"Cuando hago grandes cálculos\",\n                options: [\"tiendo a repetir todos mis pasos y revisar cuidadosamente mi trabajo.\", \"me cansa hacer su revisión y tengo que esforzarme para hacerlo.\"]\n            },\n            {\n                text: \"Tiendo a recordar lugares en los que he estado\",\n                options: [\"fácilmente y con bastante exactitud.\", \"con dificultad y sin mucho detalle.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas en grupo, es más probable que yo\",\n                options: [\"piense en los pasos para la solución de los problemas.\", \"piense en las posibles consecuencias o aplicaciones de la solución en un amplio rango de campos.\"]\n            }\n        ],\n        evalMatrix: [ // Puntajes: evalMatrix[escala][pregunta][opcion]\n            [\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Act\n            [\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Refl\n            [\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0]\n            ], // Sens\n            [\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0]\n            ], // Int\n            [\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0]\n            ], // Vis\n            [\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0]\n            ], // Ver\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0]\n            ], // Sec\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1]\n            ] // Glo\n        ],\n        profileDesc: [\n            [\n                \"Aprende por interacción directa con el material de estudio. Prefiere la comunicación visual.\", // Activo\n                \"Le gusta reflexionar sobre el material de estudio. Prefiere el trabajo individual y comunicación grupal mínima.\" // Reflexivo\n            ],\n            [\n                \"Detallista y práctico con preferencia por hechos concretos y aplicaciones del mundo real.\", // Sensitivo\n                \"Creativo y se siente atraído por el contenido teórico y abstracto.\" // Intuitivo\n            ],\n            [\n                \"Recuerda fácilmente imágenes que se le presenta (gráficos, fotos, esquemas, etc.).\", // Visual   \n                \"Recuerda fácilmente frases escritas o habladas.\" // Verbal\n            ],\n            [\n                \"Prefiere aprender de manera lineal, mediante secuencia de pasos lógicos.\", // Secuencial\n                \"Prefiere que se le presente un esquema general y luego aprende y entiende las partes por separado sin seguir un orden específico.\" // Global\n            ],\n        ],\n        eval: function (answers) { // Computo de escalas (metodo general escalas PsiMESH [http://www.psimesh.com])\n            var var_sum = []; // Arreglo de puntajes sumados para cada escala\n            for (var vble = 0; vble < 8; vble++) {\n                var sum = []; // Arreglo con valores de puntajes de cada resepuesta\n                for (var quest in answers) // Para cada pregunta\n                    sum[quest] = this.evalMatrix[vble][quest][answers[quest]]; // Puntaje que otorga cada pregunta a la escala actual\n                var_sum[vble] = sum.reduce(function(a, b){return a + b}, 0); // Sumar arreglo de puntajes de la escala actual\n            }\n            var scales = [];\n            for (var sc = 0; sc < 8; sc += 2)\n                scales[sc / 2] = var_sum[sc + 1] - var_sum[sc];\n            return scales;\n        }\n    }\n})(Cipressus);","var app = angular.module('cipressus', ['ngRoute', 'ngSanitize','LocalStorageModule'])\n.config([\"$routeProvider\",function ($routeProvider) {\n    $routeProvider\n        .when(\"/\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/home\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/login\", {\n            templateUrl: \"views/login.html\",\n            controller: \"login\"\n        })\n        .when(\"/dashboard\", {\n            templateUrl: \"views/dashboard.html\",\n            controller: \"dashboard\"\n        })\n        .when(\"/calendar\", {\n            templateUrl: \"views/calendar.html\",\n            controller: \"calendar\"\n        })\n        .when(\"/sources\", {\n            templateUrl: \"views/sources.html\",\n            controller: \"sources\"\n        })\n        .when(\"/submissions\", {\n            templateUrl: \"views/submissions.html\",\n            controller: \"submissions\"\n        })\n        .when(\"/hardware\", {\n            templateUrl: \"views/hardware.html\",\n            controller: \"hardware\"\n        })\n        .when(\"/analizer\", {\n            templateUrl: \"views/analizer.html\",\n            controller: \"analizer\"\n        })        \n        .when(\"/simulator\", {\n            templateUrl: \"views/simulator.html\",\n            controller: \"simulator\"\n        })\n        .when(\"/kMaps\", {\n            templateUrl: \"views/kMaps.html\",\n            controller: \"kMaps\"\n        })\n        .when(\"/tables\", {\n            templateUrl: \"views/tables.html\",\n            controller: \"tables\"\n        })\n        .when(\"/users\", {\n            templateUrl: \"views/users.html\",\n            controller: \"users\"\n        })\n        .when(\"/stats\", {\n            templateUrl: \"views/stats.html\",\n            controller: \"stats\"\n        })\n        .when(\"/attendance\", {\n            templateUrl: \"views/attendance.html\",\n            controller: \"attendance\"\n        })\n        .when(\"/activities\", {\n            templateUrl: \"views/activities.html\",\n            controller: \"activities\"\n        })\n        .when(\"/courses\", {\n            templateUrl: \"views/courses.html\",\n            controller: \"courses\"\n        })\n        .when(\"/editor\", {\n            templateUrl: \"views/editor.html\",\n            controller: \"editor\"\n        })\n        .when(\"/profile\", {\n            templateUrl: \"views/profile.html\",\n            controller: \"profile\"\n        });\n}])\n.filter('trusted', ['$sce', function ($sce) {\n    // Ver: https://stackoverflow.com/questions/39480969/angular-interpolateinterr-error-when-adding-url-from-variable\n    return $sce.trustAsResourceUrl;\n }])\n.config(['$locationProvider', function($locationProvider) {\n    // Ver: https://stackoverflow.com/questions/41272314/angular-all-slashes-in-url-changed-to-2f\n    $locationProvider.hashPrefix('');\n  }])\n.run([\"$rootScope\", \"$location\", function ($rootScope, $location) {\n\n    $rootScope.loading = true; // Preloader\n    $rootScope.userLogged = false; // Indicador de usuario logeado para habilitar componentes de ventana\n    $location.path(\"/login\"); // Ir a vista de logeo #TODO: cambiar modelo por uno que admita acceso sin login\n    $rootScope.bodyClass = \"\"; // Clase del body (para poner fondos)\n    $rootScope.notifications = []; // Lista de notificaciones del usuario\n    $rootScope.notifCnt = 0; // Contador de notificaciones sin leer\n\n    // Configuracion de moment.js\n    moment.locale('es', {\n        relativeTime : {\n            future: \"dentro de %s\",past: \"hace %s\",s: \"pocos segundos\",ss: \"%d segundos\",m: \"un minuto\",mm: \"%d minutos\",\n            h: \"una hora\",hh: \"%d horas\",d: \"un día\",dd: \"%d días\",M: \"un mes\",MM: \"%d meses\",y: \"un año\",yy: \"%d años\"\n        }\n    });\n\n    //// Utilidades ////\n    $rootScope.greetings = function(){ // Retorna saludo de bienvenida\n        var split_afternoon = 12;\n        var split_evening = 19; \n        var currentHour = parseFloat(moment().format(\"HH\"));\n        if(currentHour >= split_afternoon && currentHour <= split_evening)\n            return \"Buenas tardes\";\n        else if(currentHour >= split_evening)\n            return \"Buenas noches\";\n        else\n            return \"Buenos días\";\n    };\n\n    $rootScope.getTime = function(code,stamp){ // Para ejecutar moment en view\n        var time;\n        switch(code){\n            case 0: // Estampa de tiempo en view\n                time = Date.now();\n                break;\n            case 1: // Fecha y hora actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 2: // Solo fecha actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY\");\n                break;\n            case 3: // Fecha y hora de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 4: // Solo fecha de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY\");\n                break;\n            case 5: // Relativo al actual\n                time = moment(stamp).fromNow();\n                break;\n            case 6: // Fecha corta y hora\n                time = moment(stamp).format(\"DD/MM HH:mm\");\n                break;\n            default:\n                time = null;\n        }\n        return time;\n    };\n\n    $rootScope.getUserNames = function (users, userUids) { // Devuelve los apellidos de los usuarios cuyos uid se pasa como arreglo\n        if (users) { // Se puede llamar a esta funcion cuando aun no hay datos porque se ejecuta en view\n            var names = [];\n            for (var k in userUids)\n                names.push(users[userUids[k]].secondName);\n            return names.join(\", \"); // Apellidos separados por coma\n        }\n    };\n\n    $rootScope.readableFileSize = function(bytes, si) { // Devuelve tamanio de archivo en formato legible\n        var thresh = si ? 1000 : 1024;\n        if(Math.abs(bytes) < thresh) {\n            return bytes + ' B';\n        }\n        var units = si\n            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n        var u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while(Math.abs(bytes) >= thresh && u < units.length - 1);\n        return bytes.toFixed(1)+' '+units[u];\n    };\n\n    $rootScope.openNotification = function(idx){ // Abrir enlace de notificacion y marcar leida\n        if(!$rootScope.notifications[idx].read){ // Si no estaba leida, cambiar estado\n            $rootScope.notifications[idx].read = true;\n            $rootScope.notifCnt--; // Descontar contador\n            Cipressus.db.update({read:true},\"notifications/\"+$rootScope.notifications[idx].key); // Actualizar en db\n        }\n        if($rootScope.notifications[idx].link) // Si tiene un enlace, abrir\n            $location.path($rootScope.notifications[idx].link);\n    };\n\n    // Inicializacion componentes de materialize\n    $rootScope.sidenav = M.Sidenav.init(document.querySelector('.sidenav'), {\n        side: \"left\", \n        inDuration:400,  \n    });\n\n    M.Collapsible.init(document.querySelector('.collapsible_1'));\n    M.Collapsible.init(document.querySelector('.collapsible_2'));\n    M.Collapsible.init(document.querySelector('.collapsible_3'));\n    \n    M.Modal.init(document.getElementById(\"about_modal\"),{});\n    var usb_modal = M.Modal.init(document.getElementById(\"usb_modal\"),{});\n    var help_modal = M.Modal.init(document.getElementById(\"help_modal\"),{});\n\n    window.addEventListener(\"resize\", function(){\n        if($rootScope.resizeEvent)\n            $rootScope.resizeEvent()\n    });\n\n    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\n\n    $rootScope.signOut = function(){ // Callback para el boton de salir\n        $location.path(\"/login\"); // #TODO: navigation no debe forzar ir a login\n        $rootScope.userLogged = false;\n        Cipressus.users.signOut()\n        .then(function(res){\n            console.log(res);\n            $rootScope.user = null;\n            M.toast({html: \"Hasta pronto!\",classes: 'rounded green darken-3',displayLength: 1500});\n        })\n        .catch(function(err){\n            console.log(err[0]);\n            M.toast({html: err[1],classes: 'rounded green darken-3',displayLength: 1500});\n        });\n    };\n\n    $rootScope.sendHelp = function(){ // Enviar mensaje de ayuda a los usuarios administradores\n        // #TODO: enviar email con el mensaje de auyda\n        console.log($rootScope.helpMessage);\n        M.toast({html: \"Listo! Te enviaremos una respuesta\",classes: 'rounded green darken-3',displayLength: 2500});\n        help_modal.close();\n    };\n\n    Cipressus.users.onUserSignedIn = function(uid){ // Cuando el usuario se logea o si estaba logeado al actualizar pagina\n        $rootScope.loading = true;\n        Cipressus.db.get('users_public/'+uid) // Descargar datos publicos de usuario\n        .then(function(public_data){\n            $rootScope.user = public_data;\n            $rootScope.user.uid = uid;\n            $rootScope.notifications = []; // Lista de notificaciones del usuario (reinicio del arreglo)\n            $rootScope.notifCnt = 0; // Reiniciar contador de notificaciones no leidas\n            Cipressus.db.get('users_private/'+uid) // Descargar informacion dde usuario para el sistema\n            .then(function(private_data){\n                if(private_data){ // Usuario aceptado por admin\n                    $rootScope.user.admin = private_data.admin;\n                    // #TODO: enrolled y course deberia ser lo mismo\n                    $rootScope.user.enrolled = private_data.enrolled;\n                    $rootScope.user.course = private_data.course;\n                }else{ // Usuario visitante\n                    $rootScope.user.admin = false;\n                    $rootScope.user.enrolled = null;\n                    $rootScope.user.course = null;\n                }\n\n                // Monitoreo de actividad\n                var browser = is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))));\n                var OS = is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')));\n                var update_activity = public_data.activity; // Variable de monitoreo de actividad\n                if(!update_activity)\n                    update_activity = {\n                        browser: {},\n                        os: {},\n                        last_login: 0\n                    }\n                update_activity.last_login = Date.now();\n                if(update_activity.browser){ // Esta registrado la variable de navegador?\n                    if(update_activity.browser[browser]) // Contar si existe\n                        update_activity.browser[browser]++;\n                    else // Si es la primera vez que usa este navegador, iniciar\n                        update_activity.browser[browser] = 1;\n                }else{ // Si no tiene variable de navegadores, inicializar\n                    update_activity.browser = {};\n                    update_activity.browser[browser] = 1;\n                }\n                if(update_activity.os){ // Puede que no este registrado este campo\n                    if(update_activity.os[OS]) // Verificar si tiene este os contado\n                        update_activity.os[OS]++; \n                    else // Si no tiene el os, inicializar\n                        update_activity.os[OS] = 1;                \n                }else{\n                    update_activity.os = {};\n                    update_activity.os[OS] = 1;\n                }\n                \n                Cipressus.db.update(update_activity,'users_public/'+uid+'/activity').then(function(res){console.log(\"Actividad actualizada\")}); // Actualizar logeo y dispositivo usado\n\n                // Inicializar escuchador de notificaciones\n                Cipressus.db.listenChild(\"notifications\", \"uid\", uid,\n                function(data, key){\n                    data.key = key; // Copiar id de la notificacion para actualizar estado\n                    $rootScope.notifications.push(data);\n                    if(!data.read)\n                        $rootScope.notifCnt++;\n                    $rootScope.$apply();\n                },\n                function(err){\n                    console.log(err);\n                });\n\n                if($location.path() == \"/login\"){ // Si se acaba de logear en la vista de login\n                    if($rootScope.user.lastView){ // Si tiene guardado la ultima vista que uso\n                        var route = $rootScope.user.lastView.split(\"?id=\"); // Obtener parametros\n                        if(route.length > 1) // Si hay parametros, abrir vista y pasar argumento\n                            $location.path(\"/\"+route[0]).search({id:route[1]});\n                        else // Si no tiene parametros, abrir vista sola\n                            $location.path(\"/\"+route[0]);\n                    }else // Si no hay vista, ir a home\n                        $location.path(\"/\"); \n                    $rootScope.bodyClass = \"\";\n                }\n                $rootScope.userLogged = true;\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    Cipressus.users.onUserSignedOut = function(){ // Cuando cierra la sesion (puede ser desde otro lugar)\n        $rootScope.sidenav.close();\n        $rootScope.userLogged = false;\n        $location.path(\"/login\"); // #TODO: Ir a vista de login?\n        $rootScope.loading = false; // Preloader\n        $rootScope.$apply();\n    };\n\n    Cipressus.initialize() // Inicializar libreria principal de la app\n    .then(function(){ // Inicializacion exitosa\n        console.log(\"Cipressus inicializado.\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    })\n    .catch(function(){ // Error en inicializacion\n        console.log(\"Error de incialización de Cipressus\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    });  \n\n\n\n    /////// Funciones para conexion con websocket server ///////\n    Cipressus.hardware.status = \"DISCONNECTED\";\n    $rootScope.usbStatus = \"DISCONNECTED\"; // Esto es copia del status anterior, pero para no hacer binding\n    $rootScope.wssIconColor = 'red-text'; // Color del icono\n\n    // Callbacks de estado de conexion con probador para que las vistas ejecuten acciones\n    $rootScope.onWssConnect = function(){};\n    $rootScope.onWssDisconnect = function(){};\n\n    var hardwareConfig = { // Configuracion de la interface con probador        \n        io:[ // Se redefine en cada vista que use el probador\n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true}, \n            {output: false, input: true}, \n            {output: false, input: false}, \n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true},\n        ],\n        ci: 5000, // Tiempo de espera para reconexion con server\n        sp: 50, // Intervalo de actualizacion de salidas\n        onUpdate:function(){} // Funcion a ejecutar cuando se actualizan las entradas\n    };\n\n    Cipressus.hardware.onSocketClose = function(){ // Definir funcion a ejecutar si se cierra la conexion con el server (cuando se cierra el server de node)\n        // Este callback no se ejecuta si se desconecta el server desde esta misma app (con disconnectFromServer())\n        console.log(\"Socket cerrado. Reconectando...\");\n        //M.toast({html: \"Reconectando con Web Socket...\",classes: 'rounded red',displayLength: 2000});        \n        M.toast({html: \"Reconectando con server...\",classes: 'rounded blue darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"CONNECTING\";\n        $rootScope.wssIconColor = 'blue-text'; // Color del icono    \n        $rootScope.$apply();        \n    };\n\n    Cipressus.hardware.onSocketOpen = function(){ // Esto se ejecuta al iniciarse la conexion con el server\n        console.log(\"Socket abierto.\");\n        $rootScope.usbStatus = 'IDLE'; // Habilitar boton de conectar\n        $rootScope.wssIconColor = 'yellow-text'; // Color del icono\n        $rootScope.$apply();        \n        \n        M.toast({html: \"Server conectado\",classes: 'rounded blue darken-3',displayLength: 2000});\n        setTimeout(function(){ // Espera a que se envie la lista de puertos serie\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();        \n            $rootScope.$apply();\n            M.FormSelect.init(document.querySelectorAll('select'), {});            \n            M.toast({html: \"Puertos disponibles\",classes: 'rounded green darken-3',displayLength: 2000});\n        },500);\n    };\n\n    $rootScope.openUSBModal = function(){\n        if(Cipressus.hardware.status == \"IDLE\"){ // Si esta esperando puerto, actualizar lista de puertos\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();    \n            M.FormSelect.init(document.querySelectorAll('select'), {}); // Si es default-browser no se si hace falta correr esto           \n        }   \n        usb_modal.open();\n    };\n\n    $rootScope.connectToServer = function(){ // Abrir conexion con server\n        if(Cipressus.hardware.status == \"DISCONNECTED\") // Solo si esta desconectado\n            Cipressus.hardware.initServer(hardwareConfig); \n    };\n\n    $rootScope.disconnectFromServer = function(){ // Cerrar la conexion con el server\n        Cipressus.hardware.stopServer();\n        $rootScope.enableConnect = false; // Habilitar boton de conectar\n        M.toast({html: \"Server desconectado\",classes: 'rounded green darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"DISCONNECTED\";\n        $rootScope.wssIconColor = 'red-text'; // Color del icono\n        $rootScope.onWssDisconnect(); // Ejecutar callback que despues emplean las vistas\n        usb_modal.close();\n    };\n\n    $rootScope.connectToSerialPort = function(){ // Cuando se elige dispositivo y se presiona \"conectar\"\n        Cipressus.hardware.connectTo(document.getElementById(\"portSelect\").value); // Port Connection Request                \n        $rootScope.usbStatus = \"CONNECTED\";\n        $rootScope.wssIconColor = 'green-text'; // Color del icono\n        $rootScope.onWssConnect(); // Ejecutar callback que despues emplean las vistas\n        M.toast({html: \"Probador conectado!\",classes: 'rounded green darken-3',displayLength: 2000});\n        usb_modal.close();\n    }; \n    \n    ///////////\n\n\n\n\n    /////// PWA ///////\n\n    // #TODO: agregar boton para permitir instalar aunque haya cancelado la primera vez\n\n    var isInStandaloneMode = function() { return ('standalone' in window.navigator) && (window.navigator.standalone); };\n    \n    if (is.ios() && !isInStandaloneMode()) {\n       this.setState({ showInstallMessage: true });\n    }\n\n    window.addEventListener('beforeinstallprompt', function(e) {\n        e.userChoice.then(function(choiceResult) {\n            console.log(choiceResult.outcome);\n            if(choiceResult.outcome == 'dismissed') {\n                console.log('User cancelled home screen install');\n            }\n            else {\n                console.log('User added to home screen');\n            }\n        });\n    });\n}]);","app.directive(\"testResults\",function(){ // Evalua el test de Felder-Silverman\n    return {\n        restrict: 'E',\n        templateUrl : function() {\n            return \"views/testResults.html\";\n        },\n        scope: {\n            answers: '@'\n        },\n        link: function(scope){\n            scope.$watch('answers', function () {   \n                if (scope.answers){\n                    var scales = Cipressus.test_FS.eval(JSON.parse(scope.answers)); // Toma la funcion de la libreria\n                    for (var k = 0; k < 4; k++) {\n                        var elem = document.getElementById(\"scale_\" + k);\n                        var width = Math.abs(scales[k]) * 50 / 11;\n                        elem.style.width = width + '%';\n                        if (scales[k] < 0) {\n                            elem.style.marginLeft = 50 - width + '%';\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\n                        } else {\n                            elem.style.marginLeft = \"50%\";\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\n                        }\n                        elem.innerHTML = Math.abs(scales[k]);\n                    }\n                }    \n            }, true);\n        }\n    };\n});\n    ","app.controller(\"login\", ['$scope', '$rootScope', function ($scope, $rootScope) {\n\n    $scope.keypressed = function (code) { // Al oprimir enter hacer login con los datos de autenticacion\n        if (code === 13) // Verificar codigo de tecla\n            $scope.btn_click();\n    };\n\n    $scope.loginAttempt = function () { // Intentar logear usuario\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            $rootScope.loading = true;\n            Cipressus.users.signIn($scope.userForm).then(function (res) {\n                console.log(res);                \n                setTimeout(function(){\n                    if($rootScope.user) // Si ya se realizo el chequeo y descarga de datos\n                        M.toast({\n                            html: $rootScope.greetings()+\" \"+$rootScope.user.name+\"!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 5000\n                        });\n                },2000);\n                $rootScope.$apply();\n            }).catch(function (err) {                \n                $scope.userForm.password = null;\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            });\n        } else {\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.retrievePassword = function () {\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            Cipressus.users.resetPwd($scope.userForm.email).then(function (res) {\n                console.log(res);\n                M.toast({\n                    html: \"Listo! Te enviamos el formulario a tu correo electrónico\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2500\n                });\n            }).catch(function (err) {\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n            });\n        }else{\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.registerNewUser = function () {\n        var formOk = false; // Chequeo de formulario\n        if (typeof($scope.userForm) != 'undefined'){ // Al menos un dato\n            $scope.userForm.degree = document.getElementById(\"degreeSelect\").value; // No funciona el ng-model\n            if($scope.userForm.name != \"\" && $scope.userForm.secondName != \"\" && typeof($scope.userForm.lu) != 'undefined' && $scope.userForm.degree != \"\") // Chequeo de campos\n                formOk = true;\n        }\n        if (formOk) { // Registrar usuario\n            if($scope.userForm.password == $scope.passwordConfirm){ // Contraseñas ingresadas deben coincidir\n                Cipressus.users.signUp($scope.userForm).then(function (res) {\n                    console.log(res);\n                    M.toast({\n                        html:  $rootScope.greetings()+\" \"+$scope.userForm.name+\"!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                }).catch(function (err) {\n                    console.log(err[0]);\n                    M.toast({\n                        html: err[1],\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                });\n            }else{ // Si no coinciden, avisar\n                console.log(\"Confirmación de contraseña fallida\");                \n                M.toast({\n                    html: \"Verificación de contraseña incorrecto!\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            }\n        }else{ \n            console.log(\"Formulario incompleto\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.updateButtons = function () { // De acuerdo al modo, cambia el texto de los botones y los callbacks\n        switch ($scope.login_mode) {\n            case 0: // login\n                $scope.btn_text = \"Iniciar sesión\";\n                $scope.menu_left = \"Registrarse\";\n                $scope.menu_right = \"¿Olvidó su contraseña?\";\n                $scope.btn_click = $scope.loginAttempt;\n                $scope.welcomeText = \"Iniciar sesión en \";\n                break;\n            case 1: // registro\n                $scope.btn_text = \"Registrarse\";\n                $scope.menu_left = \"¿Olvidó su contraseña?\";\n                $scope.menu_right = \"Iniciar sesión\";\n                $scope.btn_click = $scope.registerNewUser;\n                $scope.welcomeText = \"Registrarse en \";\n                break;\n            case 2: // recuperacion\n                $scope.btn_text = \"Recuperar contraseña\";\n                $scope.menu_left = \"Iniciar sesión\";\n                $scope.menu_right = \"Registrarse\";\n                $scope.btn_click = $scope.retrievePassword;\n                $scope.welcomeText = \"Recuperar contraseña de \";\n                break;\n        }\n    };\n\n    $scope.login_mode = 0; // 0->login; 1->registro; 2->recuperacion de clave\n    $scope.updateButtons();\n    $rootScope.bodyClass = \"body-login\";\n    M.FormSelect.init(document.querySelectorAll('select'), {});    \n    setTimeout(function(){M.updateTextFields();},1500); // Esto no funciona \n}]);","app.controller(\"home\", ['$scope', '$rootScope', '$location', 'localStorageService', function ($scope, $rootScope, $location, localStorageService) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    $scope.testFSAnswers = []; // Objeto auxiliar para mostrar las respuestas del tests (esta con un watch dentro de la directiva)\r\n\r\n    ///// Cuestionario Felder-Silvermann\r\n    $scope.testStatus = 0; // 0->Espera inicio, 1->Espera completar respuestas, 2->Respuestas completas, espera \"Finalizar\", 3->Respuestas enviados\r\n    if(!$rootScope.user.test_fs && !$rootScope.user.admin && $rootScope.user.enrolled){ // Si el usuario no es admin y aun no responde el test de FS, mostrar modal\r\n        var test_modal = M.Modal.init(document.getElementById(\"test_modal\"), {\r\n            dismissible: false\r\n        });\r\n\r\n        $scope.loadTest = function () { // Mostrar preguntas\r\n            $scope.test_FS = Cipressus.test_FS.questions;\r\n            $scope.results = localStorageService.get(\"testFS\");\r\n            if (!$scope.results)\r\n                $scope.results = {\r\n                    startTime: Date.now(),\r\n                    answers: [],\r\n                    timeline: [],\r\n                    changes: []\r\n                };\r\n            $scope.testStatus = 1; // Mostrar test\r\n        };\r\n\r\n        $scope.putOption = function (quest, opt) {\r\n            if ($scope.results.answers[quest] != undefined) { // Si ya existia la respuesta, registrar cambio\r\n                $scope.results.changes.push({\r\n                    quest: quest,\r\n                    prev: $scope.results.answers[quest],\r\n                    next: opt\r\n                });\r\n            }\r\n            $scope.results.answers[quest] = opt; // Respuesta\r\n            $scope.results.timeline[quest] = (Date.now() - $scope.results.startTime) / 1000; // Tiempo de respuesta en segundos\r\n            localStorageService.set(\"testFS\", $scope.results); // Actualizar en LS\r\n            if ($scope.results.answers.filter(function (value) {\r\n                    return value !== undefined && value !== null\r\n                }).length == 44) // Cantidad de preguntas contestadas\r\n                $scope.testStatus = 2; // Habilitar boton \"finalizar\"\r\n        };\r\n\r\n        $scope.saveTestResults = function () { // Guardar los resultados del test y mostrar resultados\r\n            $rootScope.loading = true;\r\n            console.log($scope.results);\r\n            $scope.testFSAnswers = $scope.results.answers; // Copio en otra variable para que se ejecute la fc de la directiva\r\n            Cipressus.db.set($scope.results, \"users_public/\" + $rootScope.user.uid + \"/test_fs\")\r\n                .then(function (res) {\r\n                    //console.log(res);\r\n                    M.toast({\r\n                        html: \"Gracias por tu tiempo!\",\r\n                        classes: 'rounded green darken-3',\r\n                        displayLength: 2000\r\n                    });                    \r\n                    $scope.testStatus = 3; // Para mostrar resultados, pasar al modo 3\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al guardar resultados\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                })\r\n        };\r\n\r\n        test_modal.open();\r\n    }\r\n\r\n    var downloadNews = function () { // Descargar noticias y usuarios de la db\r\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\r\n        var authors = []; // Uids de usuarios que hicieron publicaciones\r\n        if($rootScope.user.course){ // Si tiene asignado un curso, descargar noticias\r\n            Cipressus.db.getSorted('news/'+$rootScope.user.course, 'order') // Descargar lista de novedades\r\n                .then(function (snapshot) {\r\n                    snapshot.forEach(function (childSnapshot) { // Lista ordenada\r\n                        var child = childSnapshot.val();\r\n                        child.key = childSnapshot.key;\r\n                        child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\r\n                        if (authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\r\n                            authors.push(child.author); // Agregar a la lista\r\n                        for(var k in child.comments){ // Para cada comentario, obtener autores\r\n                            if (authors.indexOf(child.comments[k].uid) == -1) // Si todavia no se guardo el uid del autor de este comentario\r\n                                authors.push(child.comments[k].uid); // Agregar a la lista\r\n                        }\r\n                        $scope.news.unshift(child); // Sentido inverso para que las nuevas noticias queden arriba\r\n                    });\r\n                    $scope.users = {};\r\n                    if(authors.length > 0){ // Descargar datos de los usuarios que publicaron o comentaron\r\n                        var k = 0; // Indice de arreglo de authors\r\n                        var getUser = function(k){ // Funcion recursiva para ir descargando los datos de usuarios\r\n                            Cipressus.db.get('users_public/' + authors[k]) // Descargar datos de los autores de publicaciones solamente\r\n                                .then(function (user_data) {\r\n                                    $scope.users[authors[k]] = user_data;\r\n                                    k++; // Pasar al siguiente\r\n                                    if (k == authors.length) { // Si no quedan mas, terminar\r\n                                        newsData = { // Objeto a guardar en localStorage\r\n                                            news: $scope.news,\r\n                                            authors: $scope.users,\r\n                                            last_update: Date.now()\r\n                                        };\r\n                                        localStorageService.set(\"newsData_\"+$rootScope.user.course, newsData);\r\n                                        $rootScope.loading = false;\r\n                                        $rootScope.$apply();\r\n                                        setTimeout(function(){\r\n                                            M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {}); // Dropdown eliminar comentario\r\n                                        },200);\r\n                                    }else{ // Si quedan mas, pasar al siguiente\r\n                                        getUser(k);\r\n                                    }\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                });\r\n                        };\r\n                        getUser(0); // Empezar\r\n                    }else{\r\n                        $rootScope.loading = false;\r\n                        $rootScope.$apply();\r\n                    }\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                });\r\n        }else{ // Si el usuario no tiene curso asignado\r\n            $rootScope.loading = false;\r\n        }\r\n    };\r\n\r\n    /// Comentarios\r\n    var comment_modal = M.Modal.init(document.getElementById(\"comment_modal\"), {});\r\n    $scope.commentText = \"\"; // Input de texto para comentarios\r\n\r\n    $scope.commentPost = function(idx){ // Abrir modal para escribir comentario\r\n        $scope.commEntryIdx = idx;\r\n        comment_modal.open();\r\n        setTimeout(function(){\r\n            M.updateTextFields();\r\n        },100);\r\n    };\r\n\r\n    $scope.publishComment = function(){ // Adjuntar comentario al post correspondiente        \r\n        if($scope.commentText != \"\"){ // Tiene que existir texto\r\n            $rootScope.loading = true;\r\n            var comment = {\r\n                uid: $rootScope.user.uid,\r\n                text: $scope.commentText,\r\n                timestamp: Date.now()\r\n            };\r\n            Cipressus.db.push(comment,'news/'+$rootScope.user.course+'/'+$scope.news[$scope.commEntryIdx].key+'/comments')\r\n            .then(function(snap){\r\n                // Actualizar objeto local\r\n                if(!$scope.news[$scope.commEntryIdx].comments)\r\n                    $scope.news[$scope.commEntryIdx].comments = {};\r\n                $scope.news[$scope.commEntryIdx].comments[snap.key] = comment;\r\n                $scope.commentText = \"\"; // Borrar el input\r\n                if(!$scope.users[$rootScope.user.uid]){ // Si no estan los datos de este usuario, agregar\r\n                    $scope.users[$rootScope.user.uid] = $rootScope.user;\r\n                }\r\n                // Actualizar estampa de tiempo para cacheos\r\n                var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n                Cipressus.db.update(ts,\"metadata/updates/news\")\r\n                .then(function(res){\r\n                    M.toast({\r\n                        html: \"Comentario publicado correctamente\",\r\n                        classes: 'rounded green',\r\n                        displayLength: 1500\r\n                    });\r\n                    // Reinicializar dropdowns\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    comment_modal.close();\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function(err){\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al publicar comentario\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 1500\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        }else{\r\n            M.toast({\r\n                html: \"El comentario está vacío!\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.deleteComment = function(commentId, entryId){ // Eliminar comentario\r\n\r\n        $rootScope.loading = true;\r\n        \r\n        Cipressus.db.set(null,'news/'+$rootScope.user.course+'/'+$scope.news[entryId].key+'/comments/'+commentId)\r\n        .then(function(snap){\r\n            // Actualizar objeto local\r\n            delete $scope.news[entryId].comments[commentId];\r\n            // Actualizar estampa de tiempo para cacheos\r\n            var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n            Cipressus.db.update(ts,\"metadata/updates/news\")\r\n            .then(function(res){\r\n                M.toast({\r\n                    html: \"Comentario eliminado\",\r\n                    classes: 'rounded green',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                comment_modal.close();\r\n                $scope.$apply();\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al publicar comentario\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n\r\n    };\r\n\r\n    // Monitoreo de actividad\r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"home\").catch(function (err) {\r\n        console.log(err);\r\n    });\r\n\r\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\r\n    if (newsData) { // Si hay datos en local storage\r\n        $scope.news = newsData.news;\r\n        $scope.users = newsData.authors;\r\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\r\n            .then(function (news_update) {\r\n                if (newsData.last_update < news_update) // Hay cambios en la base de datos\r\n                    downloadNews(); // Descargar de db y guardar en localstorage\r\n                else { // Si no hay cambios, terminar\r\n                    // Inicializar dropdowns de eliminar comentarios\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    $rootScope.$apply();\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al acceder a la base de datos\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 2000\r\n                });\r\n                $rootScope.loading = false;\r\n                $rootScope.$apply();\r\n            });\r\n    } else { // Si no hay datos, descargar si o si\r\n        downloadNews();\r\n    }\r\n}]);","app.controller(\"dashboard\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged) $location.path(\"/login\");\n    \n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function(data){ // Actualiza el grafico de proporciones de notas\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '100%'},\n            title: {\n                text: 'Proporción de calificaciones'\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions:{\n                series:{\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            updatePolarPlot(event.point.node.id);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",data: data, allowDrillToNode: true,cursor: 'pointer',\n                dataLabels: {format: '{point.name}',filter: {property: 'innerArcLength',operator: '>',value: 16}},\n                levels: [\n                    {level: 1,levelIsConstant: false,dataLabels: {filter: {property: 'outerArcLength',operator: '>',value: 64}}},\n                    {level: 2,colorIndex: 1},\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}}\n                ]\n            }],\n            tooltip: {headerFormat: \"\",pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'}\n        });\n    };\n\n    var updatePolarPlot = function(id){ // Actualizar grafico de notas\n        if($scope.user){ // Si el alumno no esta habilitado por el docente no se muestra nada\n            var data = []; // Datos para mostrar en el grafico polar\n            // Buscar nodo de la actividad seleccionada\n            $scope.currentNode = Cipressus.utils.searchNode($scope.activities,id); \n            var sc = Cipressus.utils.eval($scope.user, $scope.currentNode);\n            var value = sc.score / $scope.currentNode.score * 100;\n            $scope.currentActivityScores = { // Para detallar textualmente\n                name: $scope.currentNode.name,\n                points: ($scope.currentNode.score*value/100).toFixed(2), \n                score: value.toFixed(2),\n                children:[] // Asjuntar los nodos hijos\n            };\n            for(k in $scope.currentNode.children){ // Para cada sub actividad\n                // Calcular nota de las sub actividades\n                var subsc = Cipressus.utils.eval($scope.user,$scope.currentNode.children[k]);\n                var subValue = subsc.score/$scope.currentNode.children[k].score*100;\n                // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n                $scope.currentActivityScores.children.push({\n                    name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                    points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                    score: subValue.toFixed(2) // Nota en porcentaje\n                });\n                data.push({ // Agregar nota de esa actividad a los datos para el chart\n                    y: $scope.currentNode.children[k].score,\n                    z: parseInt(subValue.toFixed(2)),\n                    name: $scope.currentNode.children[k].name\n                })\n            }\n            $scope.$apply();\n            Highcharts.chart('variable_pie_container', {\n                chart: {type: 'variablepie',height: '100%'},\n                credits:{enabled:false},\n                title: {text: 'Mis calificaciones'},\n                tooltip: {\n                    headerFormat: '',\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                        'Nota actividad: <b>{point.z}%</b><br/>'\n                },\n                series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n            });\n        }\n    };\n\n    var updateProgressPlot = function(){ // Generar grafico polar de progreso de la materia\n        var progressData = [ // Progreso de la materia\n            {\n                name: 'Avance programa',\n                y: totalEvents-futureEvents,\n                color: \"#8181F7\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Restantes',\n                y: futureEvents,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        var attendanceData = [ // Porcentaje de asistencia\n            {\n                name: 'Presente',\n                y: $scope.user.scores.asistencia.score,\n                color: \"#FF4444\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Ausente',\n                y: 100-$scope.user.scores.asistencia.score,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        \n        Highcharts.chart('progress_pie_container', {\n            chart: {\n                type: \"pie\",\n                plotBorderWidth: 0\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: 'Mi participación'\n            },\n            tooltip: {\n                pointFormat: '<b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {                    \n                    startAngle: -90,\n                    endAngle: 90,\n                    center: ['50%', '50%']\n                }\n            },\n            series: [\n                {name: 'Asistencia',size: '70%',data: attendanceData},\n                {name: 'Progreso',innerSize: '70%',data: progressData},\n            ]\n        });        \n    };\n\n    var updateBarPlot = function () { // Genera los arreglos de calificaciones\n\n        var seriesData = [];\n        var drillDownData = [];\n\n        for (var k in $scope.users) { // Para cada usuario\n            if(!$scope.users[k].admin && $scope.users[k].scores && $scope.users[k].course == $rootScope.user.course){ // Si tiene notas, no es admin y coincide con el curso\n                seriesData.push({ // Evaluar e insertar resultado en array\n                    name: k,\n                    y: (Cipressus.utils.eval($scope.users[k],$scope.activities)).score,\n                    color: k==$rootScope.user.uid ? \"#FF0000\":\"#AAAAAA\",                    \n                    drilldown: k\n                });\n\n                var tempData = []; // Arreglo temporal con notas del alumno\n                for(var j in $scope.activities.children){ // Evaluar tambien las principales actividades\n                    tempData.push([\n                        $scope.activities.children[j].id,\n                        (Cipressus.utils.eval($scope.users[k],$scope.activities.children[j])).score/$scope.activities.children[j].score*100\n                    ]);\n                }\n\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\n                    name: k==$rootScope.user.uid ? \"Yo\" : \"#\"+(seriesData.length+1),\n                    id: k,\n                    data:tempData\n                })\n            }\n        }\n\n        // Ordenar datos por nota\n        seriesData.sort( function(a,b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0)}); \n        // Renombrar datos por sus ordenes excepto mi nota\n        for(var k in seriesData)\n            seriesData[k].name = seriesData[k].name == $rootScope.user.uid ? \"Yo\" : \"#\"+(parseInt(k)+1);\n\n        \n        Highcharts.setOptions({\n            lang: {\n                drillUpText: '<< Volver a {series.name}'\n            }\n        });\n\n        Highcharts.chart('barplot_container', {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Calificaciones del curso'\n            },\n            xAxis: {\n                type: 'category'\n            },\n            yAxis: {\n                title: {\n                    text: 'Puntaje acumulado'\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.y:.1f} pts'\n                    }\n                }\n            },\n\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f} pts</b>'\n            },\n\n            series: [{\n                name: \"Alumno\",                \n                data:seriesData\n            }],\n            drilldown:{\n                series: drillDownData\n            }\n        });\n    };\n\n    $scope.drillUp = function () {\n        $(\"#barplot_container\").highcharts().drillUp();\n    };\n\n    var updateAttendancePlot = function(){\n        var categories = []; // Lista de fechas de los eventos\n\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\n\n        //if($scope.user.attendance){\n            var data = []; // Asistencia acumulada por clase\n            var evCnt = 0; // Contador de eventos\n            var evAtt = 0; // Contador de eventos asistidos\n            for(var k in $scope.eventsAll){\n                if($scope.eventsAll[k].start < Date.now() && $scope.eventsAll[k].attendance){\n                    evCnt++; // Contar evento\n                    if($scope.user.attendance[k]) // Si asistio a esta clase\n                        evAtt++; \n                    if(evAtt != 0)\n                        data.push(evAtt/evCnt*100);\n                    else \n                        data.push(0);\n                    if(first) // Primera pasada\n                        categories.push($rootScope.getTime(3,$scope.eventsAll[k].start)); // Agregar evento a la lista\n                }\n            }\n            first = false;\n            console.log(data);\n\n            Highcharts.chart('attendance_container', {\n                chart: {\n                    type: 'spline'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: 'Asistencia a clases'\n                },\n                xAxis: {\n                    categories: categories\n                },\n                series: [{\n                    name:'Mi asistencia',\n                    data: data\n                }]\n            });\n        //}\n    };\n\n    // Inicializacion \n    var totalEvents=0, futureEvents=0, attendableEvents=0;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"dashboard\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar arbol de actividades del curso actual\n        .then(function(activities_data){\n            $scope.activities = activities_data; // Nodo root del arbol de notas\n            Cipressus.db.get('users_private') // Descargar datos de todos los usuarios #TODO: filtrar a los del curso actual\n                .then(function(user_data){\n                    $scope.users = user_data;\n                    $scope.user = user_data[$rootScope.user.uid];\n                    if($scope.user){ // Si ya fue aprobado por admin\n                        // Si aun no fue evaluado en nada, dejar arreglos vacios (porque en DB no se guardan)\n                        if(typeof($scope.user.scores) == 'undefined')\n                            $scope.user.scores = [];\n                        if(typeof($scope.user.submits) == 'undefined')\n                            $scope.user.submits = [];\n                    }\n                    // Actualizar graficos al nodo root\n                    var arr = Cipressus.utils.getArray($scope.activities);\n                    $scope.$apply(); // Este es para que actualice la vista antes de graficar\n                    updateSunburst(arr);                    \n                    updatePolarPlot($scope.activities.id);                    \n                    $rootScope.$apply(); \n                    // Descargar lista de eventos para linea del tiempo y para evaluar asistencia del usuario\n                    $scope.events=[];                    \n                    Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                    .then(function(events_data){\n                        $scope.eventsAll = {};\n                        events_data.forEach(function(childSnapshot){\n                            $scope.eventsAll[childSnapshot.key] = childSnapshot.val();\n                            var ev = childSnapshot.val();\n                            totalEvents++; // Contar actividad (se usa para asistencia y avance del programa)\n                            if(ev.start > Date.now()){ // Si es un evento futuro\n                                futureEvents++; // Contar los que faltan\n                                if($scope.events.length < 5){ // Agregar solamente 5\n                                    // Asignar lado de linea del tiempo alternados\n                                    ev.side = $scope.events.length%2 ? \"tl-right\" : \"tl-left\";\n                                    $scope.events.push(ev); // Agregar evento al arreglo  \n                                }\n                            }else{ // Si es evento que ya paso\n                                if(ev.attendance) // Y si tiene asistencia habilitada\n                                    attendableEvents++; // Contar para calcular porcentaje de asistencia\n                            }\n                        });\n                        for(var k in $scope.users) // Calcular asistencia para todos\n                            if($scope.users[k]){ // Si es alumno inscripto, existe este objeto\n                                if($scope.users[k].scores){ // Si tiene alguna calificacion\n                                    if($scope.users[k].attendance){ // Si tiene asistencia a algun evento\n                                        var userAttendedEvents = Object.getOwnPropertyNames($scope.users[k].attendance).length; // Cantidad de clases asistidas por el usuario\n                                        var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0; // Calcular porcentaje de asistencia\n                                        $scope.users[k].scores.asistencia = {\n                                            score: att, \n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };  \n                                    }else{ // Si no asistio a nada, le dejo la asitencia en 0\n                                        $scope.users[k].scores.asistencia = {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };    \n                                    }\n                                }else{ // Si no tiene puntajes, crear al menos la asistencia para el progreso                             \n                                    $scope.users[k].scores = {\n                                        asistencia: {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        }\n                                    };\n                                }            \n                            }\n                        if($scope.user)\n                            if($scope.user.scores)\n                                $scope.user.scores.asistencia = $scope.users[$rootScope.user.uid].scores.asistencia; // Copiar para el usuario actual\n                        updateProgressPlot(); // Actualizar el grafico de avance de la materia\n                        updatePolarPlot($scope.activities.id); // Actualizar nuevamente el grafico de notas ya que tiene asistencia\n                        updateBarPlot();\n                        updateAttendancePlot();\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    })\n                    .catch(function(err){ // events\n                        console.log(err);\n                        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    });\n                    \n                })\n                .catch(function(err){ // users_private\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                });        \n        })\n        .catch(function(err){ // activities\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n            $rootScope.$apply(); \n        });\n}]);","app.controller(\"calendar\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.events = []; // Arreglo de eventos (clases, labs, parciales)\n\n    // Componentes materialize\n    var viewModal = M.Modal.init(document.getElementById(\"view_modal\"), {});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {});\n    var confirmDeleteModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {});\n    var confirmMoveModal = M.Modal.init(document.getElementById(\"confirm_move_modal\"), {});\n    M.FormSelect.init(document.querySelectorAll('select'), {});\n\n    $scope.refreshCalendar = function(){ // Sincroniza arreglo de eventos con lo que se muestra\n        $('#calendar').fullCalendar('removeEvents'); // Para que no duplique\n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Renderizar todos\n    };\n\n    // Inicializar calendar\n    $('#calendar').fullCalendar({\n        weekends: false,\n        editable: $rootScope.user.admin,\n        locale: 'es-us',\n        lang: 'es',\n        allDaySlot:false,\n        minTime:\"08:00\",\n        maxTime:\"22:00\",\n        timeFormat: \"HH:mm\",\n        dateFormat: \"DD/MM\",\n        slotLabelInterval:\"01:00\",\n        slotLabelFormat: 'HH:mm',\n        header: { center: 'month,agendaWeek' },\n        eventSources: [{\n            events: $scope.events\n        }],\n        eventDrop: function( event ) { // Al soltar evento en otro casillero\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventResize: function(event){ // Extender o acortar horario de evento\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventClick: function(event) {\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: event.author, \n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000, // GMT+3 (cosa de calendar)\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: event.timestamp, // Esto se edita despues\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB\n                id: event.id,\n                idx: event.idx,\n                startDay: moment(event.start).format(\"DD/MM\"),\n                startTime: moment(event.start).format(\"HH:mm\"),\n                endTime: moment(event.end).format(\"HH:mm\"),\n                fromNow: moment(event.start).fromNow()\n            };\n            viewModal.open();\n            $scope.$apply();\n        },\n        viewRender: function(view,element){\n            $scope.refreshCalendar();\n        }\n    });\n\n    $scope.confirmDeleteEvent = function(){\n        viewModal.close();\n        setTimeout(function(){confirmDeleteModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.editEvent = function(newEvent){ // Editar evento o crear nuevo\n        if(newEvent){ // Crear nuevo (click en +)\n            $scope.selectedEvent = {\n                attendance: false,\n\n            };\n            $scope.selectedEventExtras = null; // No tengo id ni idx y se deben definir\n            document.getElementById(\"event_date\").value = null;\n            document.getElementById(\"event_start_time\").value = null;\n            document.getElementById(\"event_end_time\").value = null;\n            document.getElementById(\"tag_select\").value = \"#aaaaaa\";\n        }else{ // Editar existente (click en evento del calendario)\n            viewModal.close();\n            document.getElementById(\"event_date\").value = moment($scope.selectedEvent.start).format(\"YYYY-MM-DD\");\n            document.getElementById(\"event_start_time\").value =  moment($scope.selectedEvent.start).format(\"HH:mm\");\n            document.getElementById(\"event_end_time\").value = moment($scope.selectedEvent.end).format(\"HH:mm\");\n            document.getElementById(\"tag_select\").value = $scope.selectedEvent.color;\n            setTimeout(function(){\n                M.updateTextFields();\n            },200);\n        }        \n        setTimeout(function(){editModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.saveEvent = function(){ // Guardar evento en DB\n        $rootScope.loading = true;\n        $scope.selectedEvent.author = $rootScope.user.uid;\n        $scope.selectedEvent.timestamp = Date.now();\n        $scope.selectedEvent.color = document.getElementById(\"tag_select\").value;\n        var date = document.getElementById(\"event_date\").value;\n        var startTime = document.getElementById(\"event_start_time\").value;\n        var endTime = document.getElementById(\"event_end_time\").value;\n        var start = moment(startTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        var end = moment(endTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        // Chequeo de formulario\n        var formStatus = 0;\n        if($scope.selectedEvent.title){\n            if($scope.selectedEvent.title == \"\")\n                formStatus = 1;\n        }else\n            formStatus = 2;\n        if(start && end){ // Si se pudo procesar fecha y hora\n            if(start < end){ // Si lo ingresado es coherente\n                $scope.selectedEvent.start = start;\n                $scope.selectedEvent.end = end;\n            }else\n                formStatus = 3;\n        }else\n            formStatus = 4;\n        if($scope.selectedEvent.info == 'undefined')\n            $scope.selectedEvent.info = \"\";\n        if(formStatus != 0){ // Si algo no estaba bien, mostrar error y salir\n            console.log(\"Error \"+formStatus);\n            console.log(\"Titulo\", $scope.selectedEvent.title);\n            console.log(\"Fecha y hora\",date,startTime,endTime);\n            M.toast({html: \"No se ingresó fecha u horarios correctamente\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            return;\n        }\n        // Si todo esta bien, guardar\n        if($scope.selectedEventExtras) // Si esta este objeto, hay que actualizar\n            Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n                $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n                $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n                $scope.refreshCalendar();\n                M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEvent = null; // Para que no se vuelva a utilizar por error\n                $scope.selectedEventExtras = null;\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        else // Si es nuevo evento, insertar en DB\n            Cipressus.db.push($scope.selectedEvent,\"events/\"+$rootScope.user.course)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.idx = $scope.events.length;\n                $scope.selectedEvent.id = snapshot.key;\n                $scope.events.push($scope.selectedEvent); // Insertar en arreglo\n                $('#calendar').fullCalendar('renderEvent',$scope.selectedEvent);\n                M.toast({html: \"Nuevo evento registrado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.deleteEvent = function(){ // Borrar el ultimo evento clickeado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            $scope.events.splice($scope.selectedEventExtras.idx,1); // Quitar del arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n            M.toast({html: \"Evento eliminado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmDeleteModal.close();      \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"No se pudo eliminar, intente en otro momento\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n    $scope.moveEvent = function(){ // Mover el elemento arrastrado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            // Agregarle los atributos de indice e identificador para que quede en local\n            $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n            $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n            $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n            $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n            $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null;\n            M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmMoveModal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };    \n    \n    Cipressus.utils.activityCntr($rootScope.user.uid,\"calendar\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get(\"events/\"+$rootScope.user.course) // Descargar todos los eventos del curso y renderizar en calendar\n    .then(function(events_data){\n        var idx = 0; // Guardo los indices del arreglo\n        for(k in events_data){ // Convertir las actividades en eventos de calendar\n            var ev = events_data[k];\n            ev.start = moment(ev.start).format();\n            ev.end = moment(ev.end).format();\n            ev.id = k;\n            ev.idx = idx; // El indice me sirve para ubicarlo al editar evento\n            ev.durationEditable = $rootScope.user.admin;\n            $scope.events.push(ev);\n            idx++;\n        }   \n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Mostrar todos\n        $rootScope.loading = false;\n        $scope.$apply();\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });\n}]);","app.controller(\"sources\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n\n    $scope.pushFiles = function (folderName) { // Agregar archivos a un directorio\n        \n        var uploadFiles = function(folderKey){ // Subir los archivos al storage (es metodo porque se llama de distintos lugares)\n            if (document.getElementById(\"filesInput\").files.length > 0) { // Si se cargaron las fotos al storage        \n                var fileList = [];\n                var filenames = [];\n                var uploadingFiles = document.getElementById(\"filesInput\").files; // Lo copio para usar mas adelante fuera de scope            \n                for (var k in uploadingFiles) {\n                    if (typeof (uploadingFiles[k]) == \"object\") {\n                        fileList.push(uploadingFiles[k]);\n                        filenames.push(Cipressus.utils.generateFileName(25) + \".\" + uploadingFiles[k].name.split(\".\")[1]); // Nombre aleatorio mas formato de archivo\n                    }\n                }\n    \n                Cipressus.storage.putMultiple(fileList, \"Files\", filenames)\n                    .then(function (res) { // res contiene el arreglo de urls asignadas por firebase y los pesos\n                        $scope.fileListQueue = []; // LIsta de archivos que hay que guardar en database\n                        for (var k in res.urls) { // Para cada url\n                            $scope.fileListQueue.push({\n                                name: uploadingFiles[k].name.split(\".\")[0], // Extraer nombre de archivo\n                                size: res.sizes[k], // Tamanio de archivo\n                                format: uploadingFiles[k].name.split(\".\")[1], // Extension del archivo\n                                link: res.urls[k], // Url de los archivos\n                                filename: filenames[k], // Nombre de archivo en el storage\n                                uploaded: Date.now(),\n                                downloads: 0\n                            });\n                        }\n                        Cipressus.db.pushMultiple($scope.fileListQueue, \"sources/\" + folderKey + \"/files\")\n                            .then(function (res2) {\n                                // Actualizar tablas (carpetas) de archivos\n                                var idx = 0; // Contador para items de carpeta o directorio\n                                if(!$scope.sources){ // Para la primera vez cuando no hay ningun directorio\n                                    $scope.sources = {};\n                                    $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                }else{ // Existen directorios\n                                    if(!$scope.sources[folderKey]){ // Si se creo el directorio por primera vez\n                                        $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                    }\n                                    if(!$scope.sources[folderKey].files) // Puede existir el directorio pero no tener archivos (En caso de que se hayan borrado todos)\n                                    $scope.sources[folderKey].files = {}; // Crear solo el objeto vacio\n                                }\n                                for(var k in res2){ // Para cada key   \n                                    $scope.sources[folderKey].files[res2[k].key]=$scope.fileListQueue[idx];\n                                    idx++;\n                                }\n                                // Cerrar dialogo\n                                M.toast({\n                                    html: \"Direcetorio actualizado.\",\n                                    classes: 'rounded green darken-3',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                document.getElementById(\"filesInput\").value = null;\n                                document.getElementById(\"filesInputText\").value = null;\n                                $scope.$apply();\n                            })\n                            .catch(function (err) {\n                                console.log(err);\n                                M.toast({\n                                    html: \"Ocurrio un error guardar archivos.\",\n                                    classes: 'rounded red',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                $scope.$apply();\n                            });\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al subir archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n    \n            } else {\n                M.toast({\n                    html: \"Debe seleccionar los archivos primero\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                return;\n            }\n        };\n\n        if(!folderName){ // Si no eligio nombre de carpeta, no continuar\n            M.toast({\n                html: \"Debe indicar el nombre del directorio\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }else{ // Si hay al menos algun caracter, continuar\n            \n            $rootScope.loading = true;\n\n            /// Buscar el key del directorio que tenga este name\n            var folderKey = \"\";\n            for(var k in $scope.sources)\n                if(folderName == $scope.sources[k].name) // Coincidencia\n                    folderKey = k; // Identificador a donde van los archivos subidos\n\n            if(folderKey == \"\"){ // Si no se encontro, crear nueva entrada                \n                Cipressus.db.push({name:folderName},\"sources\")\n                .then(function(res){\n                    folderKey = res.key;\n                    uploadFiles(folderKey); // Continuar con la carga de archivos\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({\n                        html: \"Error al generar directorio\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });    \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si la entrada ya existe\n                uploadFiles(folderKey);  // Continuar con la carga de archivos\n            }\n        }\n    };\n\n    $scope.deleteFile = function(folder,key){ // Marcar el archivo a borrar para que el usuario confirme        \n        fileKeyToDelete = [folder,key];\n        $scope.fileToDelete = $scope.sources[folder].files[key];\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.fileToDelete.filename, \"Files\")\n            .then(function (res) {\n                // Ahora hay que borrar la referencia de la db\n                Cipressus.db.set(null, \"sources/\"+fileKeyToDelete[0]+\"/files/\"+fileKeyToDelete[1]) // #TODO: Eliminar carpeta si ya no quedan mas archivos en la entrada\n                    .then(function (res2) {\n                        // Eliminar los elementos de la vista                                        \n                        delete $scope.sources[fileKeyToDelete[0]].files[fileKeyToDelete[1]];\n                        fileKeyToDelete = [];\n                        M.toast({\n                            html: \"Archivo eliminado!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        confirm_delete_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al eliminar archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al eliminar archivos\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n    $scope.openImage = function (link) { // Abrir archivos de imagen en modal\n        document.getElementById(\"image_viewer\").src = link;\n        image_viewer_modal.open();\n    };\n\n    $scope.openPdfViewer = function(url){ // Abrir el pdf en un modal\n        $scope.pdfURL = url;\n        pdf_viewer_modal.open();\n    };\n\n    ///// Inicialización controller\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {});\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var pdf_viewer_modal = M.Modal.init(document.getElementById(\"pdf_viewer_modal\"), {preventScrolling: false});\n    var image_viewer_modal = M.Modal.init(document.getElementById(\"image_viewer_modal\"), {preventScrolling: false});\n\n    var fileKeyToDelete = [];\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"sources\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('sources') // Descargar lista de novedades\n        .then(function (snapshot) {\n            //console.log(snapshot);\n            $scope.sources = snapshot;\n            // Lista de carpetas para autocompletador\n            var folderList = {};\n            for(var k in $scope.sources)\n                folderList[$scope.sources[k].name] = null;\n            M.Autocomplete.init(document.querySelector('.autocomplete'), {data: folderList}); \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"submissions\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $scope.resetForm = function(){ // Restablecer el formulario\n        $scope.selectedActivity = null;\n    };\n\n    var pushSubmission = function(reference){ // Cargar la entrega a la db\n        $rootScope.loading = true; // Puede que ya este en true desde antes\n        Cipressus.db.push(reference,\"submissions/\"+$rootScope.user.course)\n            .then(function (res2) {\n                //console.log(res2);\n                $scope.submissions[res2.key] = reference;\n                $scope.submCnt++;\n                document.getElementById(\"fileInput\").files[0] = null;\n                document.getElementById(\"fileInputText\").value = \"\";\n                M.toast({\n                    html: \"Entrega realizada correctamente\",\n                    classes: 'rounded green',\n                    displayLength: 1500\n                });\n\n                // Notificar admins sobre la nueva entrega\n                Cipressus.db.query(\"users_private\", \"admin\", true)\n                .then(function(snapshot){\n                    var notif = { // Detalles de la notificacion\n                        icon: \"info\",\n                        link: \"submissions\",\n                        title: \"Nueva entrega\",\n                        text: \"Nueva actividad presentada: \"+reference.activityName\n                    };\n                    var admins = snapshot.val();\n                    for(var k in admins){\n                        if(admins[k].course == $rootScope.user.course) // Si pertenece al mismo curso\n                            Cipressus.utils.sendNotification(k, notif);\n                    }\n                })\n                .catch(function (err2) {\n                    console.log(err2);\n                });\n\n                $rootScope.loading = false;\n                files_modal.close();\n                $scope.$apply();\n            })\n            .catch(function (err2) {\n                console.log(err2);\n                M.toast({\n                    html: \"Ocurrió un error al subir el archivo\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.pushFile = function () { // Agregar archivos de entrega\n        \n        if($scope.selectedActivity){ // Si eligio el nombre de la actividad correctamente, continuar\n            var file = document.getElementById(\"fileInput\").files[0];\n            if(file){ // Si el input tiene archivos\n                $rootScope.loading = true;\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + file.name.split(\".\")[1];\n                var observs = document.getElementById(\"obsTextarea\").value; // Observaciones\n                if(!observs) observs = \"\"; // Evitar que la variable sea undefined o null\n                Cipressus.storage.put(file,\"Submissions\",filename)\n                .then(function (res) {\n                    //console.log(res);\n                    var reference = {\n                        name: file.name.split(\".\")[0], // Extraer nombre de archivo\n                        activityId: $scope.selectedActivity.id,\n                        activityName: $scope.selectedActivity.name,\n                        created: Date.now(),\n                        type: \"report\", // Tipo de entrega\n                        size: res.size, // Tamanio de archivo\n                        format: file.name.split(\".\")[1] ? file.name.split(\".\")[1] : \"indef.\", // Extension del archivo\n                        link: res.url, // Url \n                        filename: filename, // Nombre de archivo en el storage\n                        authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n                        status: [{ // Estados de la evaluacion (se concatenan)\n                            timestamp: Date.now(),\n                            action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                            display: \"Archivo subido\",\n                            user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                            obs: observs // Cada status lleva un mensaje opcional\n                        }]\n                    };\n                    pushSubmission(reference);\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al subir el archivo\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si no ingreso ningun archivo\n                console.log(\"Problema con el archivo\");\n                M.toast({\n                    html: \"Debe seleccionar un archivo!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });            \n            }\n        }else{ // Si no eligio nombre de actividad, no continuar\n            console.log(\"Identificador de actividad desconocido\");\n            M.toast({\n                html: \"Debe seleccionar una actividad!\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }\n    };\n\n    $scope.submitSim = function(){ // Presentacion de simulacion\n        var reference = {\n            name: $scope.selectedSim.name, // Nombre de la simulacion\n            activityId: $scope.selectedActivity.id,\n            activityName: $scope.selectedActivity.name,\n            created: Date.now(), // Fecha de entrega\n            type: \"sim\", // Tipo de entrega\n            size: $scope.selectedSim.size, // Tamanio del modelo\n            format: \"simcir\", // Para respetar el formato\n            data: $scope.selectedSim.data, // Va el modelo del circuito guardado\n            authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n            status: [{ // Estados de la evaluacion (se concatenan)\n                timestamp: Date.now(),\n                action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                display: \"Archivo subido\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                obs: document.getElementById(\"obsTextarea\").value || \"\" // Mensaje opcional\n            }]\n        };\n        pushSubmission(reference);\n    };\n\n    $scope.downloaded = function(key, subm){ // Agregar registro de movimiento sobre este archivo\n        if($scope.submissions[key].status[$scope.submissions[key].status.length-1].action == 0){ // Solo la primera vez\n            var newStatus = { // Nuevo estado del envio a registrar\n                timestamp: Date.now(),\n                action: 1, // 0 -> subido, 1 -> evaluando (descargado), 2 -> revisar, 3 -> evaluado\n                display: \"Archivo en revisión\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                obs: $scope.submissions[key].status[$scope.submissions[key].status.length-1].obs // Copiar original\n            };\n            $scope.submissions[key].status.push(newStatus); // Agrego el estado al objeto local\n            var upd = JSON.parse(angular.toJson($scope.submissions[key]));\n            Cipressus.db.update(upd,\"submissions/\"+$rootScope.user.course+\"/\"+key) // Registrar accion\n            .then(function (res) {\n                M.toast({\n                    html: \"Movimiento registrado\",\n                    classes: 'rounded green',\n                    displayLength: 1000\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al registrar movimiento\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            });\n        }else{\n            M.toast({\n                html: \"El archivo ya está siendo evaluado\",\n                classes: 'rounded cyan',\n                displayLength: 1500\n            });\n        }\n        // Abrir el enlace\n        switch(subm.type){\n            case \"report\": // Abrir archivo cargado\n                window.open(subm.link,'_blank','noopener');    \n                break;\n            case \"sim\":\n                $rootScope.openSimulation = subm.data; // Pasar modelo como string al controller del simulador\n                $location.path(\"/simulator\");\n                break;\n            default:\n                break;\n        }\n    };\n\n    $scope.viewSubm = function(key){ // Seleccionar entrega para ver detalles\n        $scope.submKeyView = key;\n        submission_modal.open();\n    };\n\n    $scope.evaluated = function(key){ // Seleccion de entrega para marcar como evaluada (para confirmar accion)\n        $scope.evaluatingKey = key;\n\n        // Obtener los aspectos evaluables de la actividad entregada para mostrar la lista de inputs\n        var evaluatingNode = Cipressus.utils.searchNode($scope.activityTree, $scope.submissions[$scope.evaluatingKey].activityId);\n        $scope.leafActivities = Cipressus.utils.getLeafNodes(evaluatingNode);\n\n        confirm_evaluate_modal.open();\n    };\n\n    $scope.confirmEvaluate = function(){ // Marcar entrega como evaluada\n        var action = parseInt(document.getElementById(\"evaluation_select\").value);\n        var obs = document.getElementById(\"obsTextarea2\").value; // Observaciones de quien corrige\n        \n        // Obtener lista de calificaciones propuestas para la comision\n        var scores = {};\n        for(var k in $scope.leafActivities){\n            var sc = document.getElementById(\"scoreInput_\"+$scope.leafActivities[k].id).value; // Nota propuesta\n            if(sc){\n                scores[$scope.leafActivities[k].id] = parseInt(sc);\n            }\n        }\n\n        if(obs == \"\") obs = \"Sin observaciones\"; // Forzar valor de resultado\n        if(action){ // Si eligio el resultado de la evaluacion\n            if(action==3 && Object.getOwnPropertyNames(scores).length == $scope.leafActivities.length || action != 3){ // Debe indicar una calificacion por subactividad\n                if($scope.submissions[$scope.evaluatingKey].status[$scope.submissions[$scope.evaluatingKey].status.length-1].action == 1){ // Solo la primera vez\n                    \n                    $rootScope.loading = true;\n                    var newStatus = { // Nuevo estado del envio a registrar\n                        timestamp: Date.now(),\n                        action: action, // 2 -> revisar, 3 -> aprobado\n                        display: action == 2 ? \"Revisar\" : action == 3 ? \"Aprobado\" : \"?\",\n                        user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                        obs: obs // Mensaje del evaluador\n                    };\n\n                    // Actualizar el estado en database\n                    var upd_status = JSON.parse(angular.toJson($scope.submissions[$scope.evaluatingKey].status));\n                    upd_status.push(newStatus); // Cargarle el nuevo estado\n\n                    var job = []; // Operaciones de update\n                    \n                    // Registrar accion en lista de entregas (submissions)\n                    job.push(Cipressus.db.update(upd_status,\"submissions/\"+$rootScope.user.course+\"/\"+$scope.evaluatingKey+\"/status\"));\n                    \n                    for(var k in $scope.submissions[$scope.evaluatingKey].authors){ // Pasarle la nota a cada autor                        \n                        \n                        for(var j in scores){ // Para cada actividad evaluada\n                            var sc = { // Objeto de calificacion\n                                evaluator: $rootScope.user.uid,\n                                score: scores[j],\n                                timestamp: Date.now()\n                            };\n                            job.push(Cipressus.db.update(sc, \"users_private/\"+$scope.submissions[$scope.evaluatingKey].authors[k]+\"/scores/\"+j));\n                        }\n\n                        // Fecha de envio para calcular costo en caso de actividad vencida    \n                        var sb = { \n                            evaluator: $rootScope.user.uid,\n                            submitted: $scope.submissions[$scope.evaluatingKey].created,\n                            timestamp: Date.now()\n                        };\n                        job.push(Cipressus.db.update(sb, \"users_private/\"+$scope.submissions[$scope.evaluatingKey].authors[k]+\"/submits/\"+$scope.submissions[$scope.evaluatingKey].activityId));\n\n                        // Notificar autores\n                        var notif = { \n                            icon: \"info\",\n                            link: \"submissions\",\n                            title: \"Presentación evaluada\",\n                            text: \"La actividad \"+$scope.submissions[$scope.evaluatingKey].activityName+\" que presentaste ya fue calificada.\"\n                        };\n                        Cipressus.utils.sendNotification($scope.submissions[$scope.evaluatingKey].authors[k], notif);\n                    }\n\n                    Promise.all(job)               \n                    .then(function (res) {\n                        $scope.submissions[$scope.evaluatingKey].status.push(newStatus); // Agrego el estado al objeto local\n                        M.toast({\n                            html: \"Movimiento registrado\",\n                            classes: 'rounded green',\n                            displayLength: 1000\n                        });\n                        $rootScope.loading = false;\n                        confirm_evaluate_modal.close();\n                        document.getElementById(\"evaluation_select\").value = \"\";\n                        document.getElementById(\"obsTextarea2\").value = \"\";\n                        $scope.$apply();                        \n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al registrar movimiento\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                    });\n\n                }else{\n                    console.log($scope.submissions[key].status);\n                    M.toast({\n                        html: \"El archivo ya fue evaluado!\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                }\n            }else{\n                console.log(\"Evaluadas: \"+Object.getOwnPropertyNames(scores).length, \"Totales: \"+$scope.leafActivities.length);\n                M.toast({\n                    html: \"Complete las calificaciones!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            }\n        }else{\n            console.log(\"Input select con opcion por defecto.\");\n            M.toast({\n                html: \"Seleccione resultado de evaluación\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });\n        }\n\n        \n    };\n\n    $scope.deleteFile = function(key){ // Marcar el archivo a borrar para que el usuario confirme        \n        $scope.fileKeyToDelete = key;\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n\n        var deleteDBRef = function(){ // Elimina la referencia a la entrega de la db\n            Cipressus.db.set(null, \"submissions/\"+$rootScope.user.course+\"/\"+$scope.fileKeyToDelete) \n                .then(function (res2) {\n                    // Eliminar entrada de la tabla y decrementar contador de elementos\n                    delete $scope.submissions[$scope.fileKeyToDelete];\n                    $scope.fileKeyToDelete = \"\";\n                    $rootScope.loading = false;\n                    $scope.submCnt--;\n                    confirm_delete_modal.close();\n                    $scope.$apply();\n                })\n                .catch(function (err2) {\n                    console.log(err2);\n                    M.toast({\n                        html: \"Ocurrio un error al eliminar archivos\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        $rootScope.loading = true;\n        if($scope.submissions[$scope.fileKeyToDelete].type == \"report\"){\n            Cipressus.storage.delete($scope.submissions[$scope.fileKeyToDelete].filename, \"Submissions\")\n                .then(function (res) {\n                    // Borrar la referencia de la db\n                    deleteDBRef();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrio un error al eliminar archivos\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }else{ // Si no es con entrega almacenada en storage, solo eliminar la referencia\n            deleteDBRef();\n        }   \n    };\n\n\n\n    ///// Inicialización controller\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var confirm_evaluate_modal = M.Modal.init(document.getElementById(\"confirm_evaluate_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var submission_modal = M.Modal.init(document.getElementById(\"submission_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n\n    $scope.fileKeyToDelete = \"\"; // Identificador del archivo seleccionado para elliminar previo confirmacion\n    $scope.selectedActivity = null; // Actividad seleccionada en el input del formulario antes de elegir archivo\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"submissions\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('submissions/'+$rootScope.user.course) // Descargar lista de archivos entregados por todos los alumnos\n        .then(function (submissions_data) { // Nota: No hay filtrado de archivos descargados -> usuarios pueden leer entregas de otros alumnos\n            $scope.submissions = {};\n            $scope.submCnt = 0; // Contador de entregas\n            if($rootScope.user.admin && submissions_data){ // Si es admin, bajar todas las entregas\n                $scope.submissions = submissions_data; // Lista de entregas realizadas\n                $scope.submCnt = Object.getOwnPropertyNames($scope.submissions).length\n            }else // Si no es admin, descargar las realizadas por este usuario o por comision\n                for(var k in submissions_data){ // Buscar entregas realizadas \n                    if(submissions_data[k].authors.indexOf($rootScope.user.uid) > -1){\n                        $scope.submissions[k] = submissions_data[k]; // Agregar entrega a la lista\n                        $scope.submCnt++;\n                    }\n                }\n            Cipressus.db.get('users_public') // Descargar lista de usuarios para tener info de las comisiones\n            .then(function (users_data) {\n                $scope.users = users_data; // Lista de usuarios\n                Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar datos de la materia para tener info de vencimientos\n                .then(function (activities_data) {\n                    $scope.activityTree = activities_data; // Guardo el arbol completo \n                    $scope.activities = Cipressus.utils.getArray(activities_data); // Lista de actividades\n                    //console.log($scope.activities);        \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                    M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                    document.getElementById(\"activity_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                        var sel = document.getElementById(\"activity_select\"); // Se puede usar this?\n                        var actIdx = $scope.activities.findIndex(function(x){ return x.id == sel.options[sel.selectedIndex].value}); // Buscar la actividad seleccionada\n                        \n                        $scope.selectedActivity = null;\n\n                        // Buscar si la actividad que intenta subir ya fue entregada\n                        for(var k in $scope.submissions){\n                            if($scope.submissions[k].activityId == sel.options[sel.selectedIndex].value && $scope.submissions[k].authors.includes($rootScope.user.uid) ){ // Misma actividad\n                                M.toast({\n                                    html: \"Ya realizó la entrega de esta actividad. Elimine la anterior.\",\n                                    classes: 'rounded red',\n                                    displayLength: 2000\n                                });\n                                $scope.$apply();\n                                return;\n                            }\n                        }\n\n                        $scope.selectedActivity = { // Objeto con info de la actividad sobre la que se entrega el trabajo\n                            id: sel.options[sel.selectedIndex].value, // Identificador de la actividad\n                            name: sel.options[sel.selectedIndex].text, // Nombre legible de la actividad\n                            deadline: $scope.activities[actIdx].dl.date, // Vencimiento\n                            type: $scope.activities[actIdx].dl.submit // Tipo de actividad (informe, simulacion, test)\n                        };\n\n                        if($scope.activities[actIdx].dl.submit == \"sim\"){ // Si la actividad es tipo simulacion, hay que descargar las guardadas\n                            $rootScope.loading = true;\n                            $scope.$apply();\n                            $scope.simulations = []; // Lista de simulaciones\n                            Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n                            .then(function(snapshot){\n                                snapshot.forEach(function(sim){\n                                    var simObj = sim.val();\n                                    simObj.id = sim.key; // Id en el arbol de simulaciones\n                                    simObj.index = $scope.simulations.length; // Para ubicarlo en el objeto\n                                    $scope.simulations.push(simObj);\n                                });\n                                $rootScope.loading = false;\n                                $scope.$apply();\n                                M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                                document.getElementById(\"simulation_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                                    var sim_sel = document.getElementById(\"simulation_select\");\n                                    var simIdx = $scope.simulations.findIndex(function(x){ return x.id == sim_sel.options[sim_sel.selectedIndex].value}); // Buscar la simulacion seleccionada\n                                    $scope.selectedSim = $scope.simulations[simIdx];\n                                });\n                            })\n                            .catch(function(err){\n                                console.log(err);\n                            });\n                        }else{\n                            $scope.$apply();\n                        }\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al acceder a la base de datos\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"hardware\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.sidenav.close();        \r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"hardware\").catch(function (err) {console.log(err)});\r\n    \r\n    var initTester = function(){ // Inicializar controladores de la vista\r\n        if(Cipressus.hardware.status == \"CONNECTED\"){\r\n            \r\n            $scope.tester = [ // Entrada/salida del probador\r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}\r\n            ];\r\n        \r\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\r\n\r\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar la vista\r\n                $scope.$apply(); \r\n            };\r\n        }\r\n    };\r\n\r\n    var stopTester = function(){ // Al desconectar, borrar objeto para que no muestre nada\r\n        if($scope.tester)\r\n            $scope.tester = null;\r\n    };\r\n    \r\n    // Inicializar\r\n    initTester();\r\n\r\n    // Conectar callbacks\r\n    $rootScope.onWssDisconnect = function(){\r\n        stopTester();\r\n    };\r\n\r\n    $rootScope.onWssConnect = function(){\r\n        initTester();\r\n    };\r\n    \r\n}]);","app.controller(\"analizer\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();        \n    Cipressus.utils.activityCntr($rootScope.user.uid, \"analizer\").catch(function (err) {console.log(err)});\n\n    $scope.running = false; // Controlar encendido/apagado del analizador (inicialmente apagado)\n\n    var chart = Highcharts.chart('chart_container', {\n        chart: {\n            type: 'line',\n            animation: false,\n            height: \"50%\"\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: 'Analizador lógico'\n        },  \n        yAxis: {\n            title: {\n                text: 'Voltaje'\n            }\n        },        \n        tooltip: {\n            headerFormat: '<b>{series.name}</b><br/>',\n            pointFormat: '{point.y:.2f}'\n        },\n        legend: {\n            enabled: false\n        },\n        exporting: {\n            enabled: false\n        },\n        series: [{\n            name: 'Entrada 1',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 2',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 3',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 4',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 5',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 6',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 7',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 8',\n            data: [[Date.now(),0]]\n        }]\n    });\n\n    var series = chart.series; // Series de datos (inicialmente todo en 0 con un solo dato)\n\n    var initAnalizer = function(){ // Inicializar controladores de la vista\n        if(Cipressus.hardware.status == \"CONNECTED\"){\n        \n            $scope.tester = [ // Entrada/salida del probador\n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}\n            ];\n\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\n\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar el grafico   \n                var timestamp = Date.now(); \n                for(var k = 0; k < 8; k++)\n                    series[k].addPoint([timestamp, $scope.tester[k].input ? 5:0], false, series[k].data.length>300);\n            };\n        }\n    };\n\n    var startChartUpdater = function(){ // Esta funcion dispara el refresco continuo del grafico\n        chart.redraw(); // Redibujar\n        if($scope.running) // Si esta corriendo, disparar el timeout\n            setTimeout(startChartUpdater,100); // El periodo es de 100ms fijo\n    };\n\n    $scope.toggleStartStop = function(){// Iniciar-detener el analizador\n        $scope.running = !$scope.running;\n        if($scope.running)\n            startChartUpdater(); // Al iniciar, hay que disparar el evento por primera vez\n    };\n    \n    // Conectar callbacks\n    $rootScope.onWssDisconnect = function(){\n        if($scope.tester) $scope.tester = null;\n    };\n\n    $rootScope.onWssConnect = function(){\n        initAnalizer();\n    };\n\n    // Inicializar analizador logico\n    initAnalizer();\n    \n}]);","app.controller(\"simulator\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    $scope.updateFields = function(){ // Funcion auxiliar\n        setTimeout(function(){\n            M.updateTextFields();\n        },200);\n    };\n\n    $scope.getSimulations = function () { // Descargar lista de archivos de simulacion del usuario\n        if(!$scope.simulations){ // Si no se descargaron los archivos, bajar\n            $rootScope.loading = true;\n            Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n            .then(function(snapshot){\n                simulations_data = {};\n                snapshot.forEach(function(sim){\n                    simulations_data[sim.key] = sim.val();\n                });\n\n                if(simulations_data){\n                    $scope.simulations = simulations_data;\n                    //console.log($scope.simulations);\n                    load_modal.open();\n                }else\n                    M.toast({html: \"No hay circuitos guardados!\",classes: 'rounded green darken-3',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al mostrar archivos\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si ya se habia descargado la info de la db, abrir directamente modal\n            load_modal.open();\n        }\n    };\n\n    $scope.loadCircuit = function(key, model){ // Cargar circuito\n        var data;\n        if(key) // Si se pasa clave, cargar desde los guardados, sino, usar data del argumento\n            data = JSON.parse($scope.simulations[key].data);\n        else\n            data = JSON.parse(model);\n\n        simcir.clearDevices(); // Borrar caches de managers\n\n        // Poner barra de herramientas\n        data.showToolbox = true;\n        data.width = document.getElementById(\"simcir\").clientWidth;\n        data.height = document.getElementById(\"simcir\").clientHeight\n        data.toolbox = [\n          {\"type\":\"In\"},\n          {\"type\":\"Out\"},\n          {\"type\":\"Joint\"},\n          {\"type\":\"DC\"},\n          {\"type\":\"LED\"},\n          {\"type\":\"PushOff\"},\n          {\"type\":\"PushOn\"},\n          {\"type\":\"Toggle\"},\n          {\"type\":\"BUF\"},\n          {\"type\":\"NOT\"},\n          {\"type\":\"AND\"},\n          {\"type\":\"NAND\"},\n          {\"type\":\"OR\"},\n          {\"type\":\"NOR\"},\n          {\"type\":\"XOR\"},\n          {\"type\":\"XNOR\"},\n          {\"type\":\"OSC\"},\n          {\"type\":\"7seg\"},\n          {\"type\":\"16seg\"},\n          {\"type\":\"4bit7seg\"},\n          {\"type\":\"RotaryEncoder\"},\n          {\"type\":\"BusIn\"},\n          {\"type\":\"BusOut\"},\n          {\"type\":\"RS-FF\"},\n          {\"type\":\"JK-FF\"},\n          {\"type\":\"T-FF\"},\n          {\"type\":\"D-FF\"},\n          {\"type\":\"8bitCounter\"},\n          {\"type\":\"HalfAdder\"},\n          {\"type\":\"FullAdder\"},\n          {\"type\":\"4bitAdder\"},\n          {\"type\":\"2to4BinaryDecoder\"},\n          {\"type\":\"3to8BinaryDecoder\"},\n          {\"type\":\"4to16BinaryDecoder\"},\n          {\"type\":\"Virtual-In\"},\n          {\"type\":\"Virtual-Out\"},\n          {\"type\":\"Test-In\"},\n          {\"type\":\"Test-Out\"},\n          {\"type\":\"Audio-Out\"}\n        ];\n        simcir.setupSimcir($('#simcir'), data);\n\n        if(key){\n            currentSim = {\n                key: key,\n                name: $scope.simulations[key].name\n            };\n            $scope.circuitFileName = $scope.simulations[key].name;\n            load_modal.close();\n        }\n    };\n\n    $scope.saveCircuit = function () {\n        $rootScope.loading = true;\n\n        // Verificar si el nombre existe para saber si hay que actualizar o crear nuevo\n        currentSim = {};\n        if($scope.simulations)\n            for(var k in $scope.simulations)\n                if($scope.simulations[k].name == $scope.circuitFileName) // Coincidencia\n                    currentSim = { // Guardar datos de actualizacion\n                        key: k,\n                        name: $scope.simulations[k].name\n                    };\n\n        // Crear objeto a guardar en db\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data(); // Objeto con datos de simulacion\n        //var data = JSON.stringify((({ devices, connectors }) => ({ devices, connectors }))(model)); // Solo guardar dos propiedades\n        // Metodo alternativo para sintaxis de bundle-assets 3\n        var data = JSON.stringify((function(model){return {devices:model.devices, connectors:model.connectors};})(model));\n\n        if(model.devices.length == 0){ // No guardar si no hay componentes\n            M.toast({html: \"No hay componentes!\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n        }else{ // Si hay al menos un componente, guardar en db\n            var sim = {\n                timestamp: Date.now(),\n                size: model.devices.length,\n                data: data, \n                name: $scope.circuitFileName\n            };\n    \n            if(currentSim.key){ // Si se esta trabajando sobre un modelo existente\n                Cipressus.db.update(sim,\"simulations/\"+currentSim.key)\n                .then(function(res){\n                    //console.log(res);   \n                    $scope.simulations[currentSim.key] = sim; // Actualizar local\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si se creo un nuevo modelo\n                sim.uid = $rootScope.user.uid;\n                Cipressus.db.push(sim,\"simulations\")\n                .then(function(res){\n                    //console.log(res);    \n                    currentSim = {\n                        key: res.key,\n                        name: sim.name\n                    };\n                    if(!$scope.simulations)\n                        $scope.simulations = {};\n                    $scope.simulations[res.key] = sim; // Agregar nueva\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }\n        }\n    };\n\n\n    $scope.analizeCircuit = function(){ // Analisis combinacional del circuito\n        // Las funciones declaradas mas abajo se ejecutan desde el final hacia arriba\n\n        // Obtener nombres de las entradas y salidas\n        var inputs = simcir.getExternalLabels(\"input\");\n        var outputs = simcir.getExternalLabels(\"output\");\n\n        // Si no hay, retornar\n        if(inputs.length == 0){\n            M.toast({html: \"El circuito no tiene entradas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n        if(outputs.length == 0){\n            M.toast({html: \"El circuito no tiene salidas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n\n        // Iniciar\n        $rootScope.loading = true;\n\n        // Cantidad de entradas y salidas (para calcular cantidad de dispositivos) \n        // (Antes de eliminar nodos repetidos)\n        var ioDevices = inputs.length + outputs.length;\n\n        // Eliminar nombres repetidos (externalPortManager sigue teniendo duplicados si se carga varias veces)\n        inputs = inputs.filter(function(value, index, self){ return self.indexOf(value) === index}); \n        //outputs = outputs.filter((value, index, self) => self.indexOf(value) === index); \n\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data();\n\n        // Objeto para mostrar resultados en modal\n        $scope.circuitDetails = {\n            model: model,\n            deviceCnt: model.devices.length - ioDevices, // Cantidad de componentes sin contar entradas y salidas\n            connectorCnt: model.connectors.length,\n            truthTable: { // Objeto para genrar la tabla de verdad en la vista\n                header:{ // Nombres de las variables de entrada y salida\n                    inputs:inputs,\n                    outputs:outputs\n                },\n                rows:[] // Combinaciones de entrada\n            },\n            expressions: [], // Funciones de salida minimizadas\n            canonMinTerm: [], // Funciones de salida canonicas suma de productos\n            canonMaxTerm: [] // Funciones de salida canonicas producto de sumas\n        };\n\n        var combMax = Math.pow(2,inputs.length); // Cantidad de combinaciones\n        var minterms = []; // Miniterminos de cada salida\n        var maxterms = []; // Maxiterminos de cada salida\n        var primeImplicants = [];\n        var minifiedExpresions = [];\n        var canonMinExpressions = [];\n        var canonMaxExpressions = [];\n\n\n        var getCanonicalExpressions = function(){ // Obtener las expresiones canonicas a partir de miniterminos y maxiterminos\n            \n            for(var k in outputs){ // Para cada funcion de salida                \n                if(!minterms[k]){ // Si no hay minterms, la funcion es siempre nula                    \n                    canonMinExpressions[k] = \"0\";\n                    canonMaxExpressions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(!maxterms[k]){ // Si no hay maxterms, la salida es siempre 1\n                    canonMinExpressions[k] = \"1\";\n                    canonMaxExpressions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n            \n                /////// Minterms\n                for(var j in minterms[k]){ // Para cada minitermino\n                    for(var t in minterms[k][j]){ // Para cada variable dentro del termino\n                        switch(minterms[k][j][t]){\n                            case \"1\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t];\n                                else\n                                    canonMinExpressions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t]+\"'\";\n                                else\n                                    canonMinExpressions[k] = inputs[t]+\"'\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMinExpressions[k] += \" + \";\n                }\n                canonMinExpressions[k] = canonMinExpressions[k].substring(0,canonMinExpressions[k].length-3);// Remover el ultimo \"+\"\n            \n                /////// Maxterms\n                for(var j in maxterms[k]){ // Para cada minitermino\n                    if(canonMaxExpressions[k])\n                        canonMaxExpressions[k] += \"(\";\n                    else\n                        canonMaxExpressions[k] = \"(\";\n                    for(var t in maxterms[k][j]){ // Para cada variable dentro del termino\n                        switch(maxterms[k][j][t]){\n                            case \"0\":\n                                canonMaxExpressions[k] += inputs[t]+\"+\";                                \n                                break;\n                            case \"1\":\n                                canonMaxExpressions[k] += inputs[t]+\"'+\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-1);// Remover el ultimo \"+\"    \n                    canonMaxExpressions[k] += \") · \";\n                }\n                canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-3);// Remover el ultimo \"·\"\n            }\n            \n\n            // Generar expresiones para mostrar en vista de analisis\n            for(var k in canonMinExpressions) \n                $scope.circuitDetails.canonMinTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMinExpressions[k];\n            for(var k in canonMaxExpressions) \n                $scope.circuitDetails.canonMaxTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMaxExpressions[k];\n            \n            // Para terminar, ocultar el preloader y mostrar el modal con resultados\n            $rootScope.loading = false;\n            results_modal.open();\n            $scope.$apply();\n        };\n\n        var getBooleanExpressions = function(){ // A partir de miniterminos y maxiterminos, devuelve las expresiones logicas\n\n            for(var k in outputs){\n                //if(minterms[k].length == 0){ // Si no hay miniterminos, la funcion es siempre nula\n                if(!minterms[k]){              // Si no hay miniterminos, la funcion es siempre nula                    \n                    minifiedExpresions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(minterms[k].length == combMax){ // Si hay tantos miniterminos como combinaciones, la salida es siempre 1\n                    minifiedExpresions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n                \n                // Si ninguno de los casos anteriores se dio, obtener implicantes primos con el metodo QMC\n                primeImplicants[k] = Cipressus.utils.getPrimeImplicants(minterms[k]);\n                for(var j in primeImplicants[k]){ // Para cada implicante                  \n                    for(var t in primeImplicants[k][j]){ // Para cada variable del implicante\n                        switch(primeImplicants[k][j][t]){\n                            case \"1\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t];\n                                else\n                                    minifiedExpresions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t]+\"'\";\n                                else\n                                    minifiedExpresions[k] = inputs[t]+\"'\";\n                                break;\n                            case \"-\":\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    minifiedExpresions[k] += \" + \";\n                }\n                minifiedExpresions[k] = minifiedExpresions[k].substring(0,minifiedExpresions[k].length-3);// Remover el ultimo \"+\"\n            }\n            //console.log($scope.circuitDetails);\n            for(var k in minifiedExpresions) // Generar expresiones para mostrar en vista de analisis\n                $scope.circuitDetails.expressions[k] = \"<b>\" + outputs[k] + \"</b>= \" + minifiedExpresions[k];\n            \n            getCanonicalExpressions();\n        };\n  \n        var evalInput = function(k){ // Evaluar entrada k-esima (en binario) (esta es una funcion recursiva)\n            var inputBin = k.toString(2).padStart(inputs.length,\"0\"); // Convertir numero de combinacion a binario\n            $scope.circuitDetails.truthTable.rows[k] = { \n                inputs: inputBin.split(\"\"), // Separar bits en arreglo\n                outputs: [] // Completar salidas despues\n            }\n            for(var j in $scope.circuitDetails.truthTable.rows[k].inputs) // Escribir entrada en el circuito del simulador\n                simcir.setInputStatus(inputs[j], $scope.circuitDetails.truthTable.rows[k].inputs[j] == \"1\");\n\n            // Esperar un poco antes de leer la salida\n            setTimeout(function(){\n                // Leer cada una de las salidas de la simulacion\n                for(var n in outputs){\n                    $scope.circuitDetails.truthTable.rows[k].outputs[n] = simcir.getOutputStatus(outputs[n]) == 1 ? \"1\":\"0\";\n                    if($scope.circuitDetails.truthTable.rows[k].outputs[n] == \"1\"){ // Si la salida es H (alto), agregar minitermino\n                        if(minterms[n])\n                            minterms[n].push(inputBin);\n                        else\n                            minterms[n] = [inputBin];\n                    }else{\n                        if(maxterms[n])\n                            maxterms[n].push(inputBin);\n                        else\n                            maxterms[n] = [inputBin];\n                    }\n                }\n                k++; // Siguiente combinacion\n                if(k < combMax) // Si quedan, pasar a la siguiente\n                    evalInput(k);\n                else // Sino, pasar a calcular las funciones\n                    getBooleanExpressions();\n            },50);    \n        };\n        evalInput(0); // Empezar por la primera\n    };\n\n    $scope.selectToDelete = function(key){ // Seleccionar circuito para eliminar\n        $scope.selected = $scope.simulations[key];\n        $scope.selected.key = key;\n        load_modal.close(); // Cerrar el modal de abrir circuito\n        setTimeout(function(){delete_modal.open()},500); // Abrir el modal de confirmacion\n    };\n\n    $scope.deleteCircuit = function(){ // Eliminar circuito\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"simulations/\"+$scope.selected.key)\n        .then(function(){\n            delete $scope.simulations[$scope.selected.key];\n            $scope.selected = null;\n            delete_modal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n\n    ///// Inicializacion del controller\n    $scope.circuitFileName = \"\";\n    var currentSim = {}; // Datos de la simulacion actual (se crean al abrir o guardar nuevo)\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n    var load_modal = M.Modal.init(document.getElementById(\"load_modal\"), {preventScrolling: false});\n    var save_modal = M.Modal.init(document.getElementById(\"save_modal\"), {preventScrolling: false});\n    var delete_modal = M.Modal.init(document.getElementById(\"delete_modal\"), {preventScrolling: false});\n    var results_modal = M.Modal.init(document.getElementById(\"results_modal\"), {preventScrolling: false});\n\n    // Inicializar simulador\n    // Para abrir simulaciones externas, se pasan por rootScope\n    if($rootScope.openSimulation){\n        var data = $rootScope.openSimulation;\n        $rootScope.openSimulation = null; // Eliminar para que no lo siga abriendo\n        $scope.loadCircuit(null,data);\n    }else{\n        simcir.setupSimcir($('#simcir'), {\n            width: document.getElementById(\"simcir\").clientWidth,\n            height: document.getElementById(\"simcir\").clientHeight\n        });\n    }\n\n    window.onresize = function(ev){ // Simulador responsive\n        // Dimensiones del card (que es responsive)\n        var w = document.getElementById('simcir').clientWidth;\n        var h = document.getElementById('simcir').clientHeight;\n        //console.log(h,w);\n        var el = document.getElementsByClassName(\"simcir-workspace\")[0]; // Div contenedor (generado por simcir)\n        el.setAttribute(\"viewBox\", \"0 0 \"+w+\" \"+h); // Dimensiones del svg\n        el.setAttribute(\"width\", w); // Escala\n        el.setAttribute(\"height\", h); \n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"simulator\").catch(function (err) {console.log(err)});\n}]);","app.controller(\"kMaps\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    qmc = new QuineMcCluskey(\"\", 2, 4, 0);\n    qmc.init();\n    karnaugh = new KarnaughMap(\"myKarnaughMap\", qmc);\n    karnaugh.init();\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n        karnaugh.setNoOfVars($scope.varsNum);\n    };\n\n    $scope.dCareChange = function() {\n        karnaugh.allowDontCares($scope.showDCares);\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"kMaps\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"tables\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n\n    };\n\n    $scope.dCareChange = function() {\n\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"tables\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"users\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n    $scope.selectedKey = null;\n    $scope.selectedIndex = null;\n    $scope.showAll = true;\n    var attendableEvents=0; // Contador de eventos para calcular asistencia\n\n    $scope.orderTag = 'name';\n    $scope.reverseOrder = false;\n\n    $scope.changeOrder = function(tag) { // Acmbiar el sentido de ordenamiento de la tabla\n        if($scope.orderTag === tag) {\n            $scope.reverseOrder = !$scope.reverseOrder;\n        } else {\n            $scope.orderTag = tag;\n            $scope.reverseOrder = false;\n        }\n    };\n\n    // Los inputs date no funcionan con ng-change entonces la actualizacion\n    // la hago programaticamente. Este es el callback de cambios\n    var onInputDateChange = function () {\n        $scope.auxiliarySubmits[this.id] = {\n            submitted: moment(this.value).unix() * 1000,\n            timestamp: Date.now(),\n            evaluator: $rootScope.user.uid\n        };\n        $scope.$apply();\n    };\n\n    $scope.viewUser = function (key) { // Selecciona un usuario de la lista para ver detalles\n        // Tambien se abre el modal con detalles desde la vista\n        $scope.selectedKey = key; // Recordar limpiar esta variable despues de usar\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        evalAttendance();\n        updatePolarPlot();\n    };\n\n    $scope.selectUser = function(key) { // Seleccionar usuario para aprobar inscripcion a un curso\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        confirmEnrollModal.open();\n    };\n\n    var evalAttendance = function(){ // Calcular asistencia del alumno seleccionado\n        if($scope.users[$scope.selectedIndex].scores){\n            if($scope.users[$scope.selectedIndex].attendance){ // Calcular asistencia aquí (solo se usa para mostrar pero no se guarda en db)\n                var userAttendedEvents = Object.getOwnPropertyNames($scope.users[$scope.selectedIndex].attendance).length; // Cantidad de clases asistidas por el usuario\n                var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0;\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: parseInt(att.toFixed(2)), // Calcular porcentaje de asistencia\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };                                \n            }else{ // Si no asistió a nada, entonces la asistencia queda en 0\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: 0,\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };\n            }   \n        }\n    };\n\n    var updatePolarPlot = function(){ // Actualizar grafico de notas del alumno seleccionado\n        var data = []; // Datos para mostrar en el grafico polar\n        // Buscar nodo de la actividad seleccionada\n        $scope.currentNode = Cipressus.utils.searchNode($scope.activitiesTree,\"final\");\n        var sc = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode);\n        var value = sc.score/$scope.currentNode.score*100;        \n        $scope.currentActivityScores = { // Para detallar textualmente\n            name: $scope.currentNode.name,\n            points: ($scope.currentNode.score*value/100).toFixed(2), \n            score: value.toFixed(2),\n            children:[] // Asjuntar los nodos hijos\n        };\n        for(k in $scope.currentNode.children){ // Para cada sub actividad\n            // Calcular nota de las sub actividades\n            var subsc = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode.children[k]);\n            var subValue = subsc.score/$scope.currentNode.children[k].score*100;\n            // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n            $scope.currentActivityScores.children.push({\n                name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                score: subValue.toFixed(2) // Nota en porcentaje\n            });\n            data.push({ // Agregar nota de esa actividad a los datos para el chart\n                y: $scope.currentNode.children[k].score,\n                z: parseInt(subValue.toFixed(2)),\n                name: $scope.currentNode.children[k].name\n            })\n        }\n        Highcharts.chart('variable_pie_container', {\n            chart: {type: 'variablepie',height: '100%'},\n            title: {text: 'Calificaciones'},\n            tooltip: {\n                headerFormat: '',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                    'Nota actividad: <b>{point.z}%</b><br/>'\n            },\n            series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n        });\n    };\n\n    $scope.enrollUser = function () { // Aprobar usuario como alumno\n        var user_private = { // Objeto a subir\n            admin: false,\n            course: $rootScope.user.course, // El ID del curso del admin que esta dando de alta\n            enrolled: Date.now()\n            // scores y submits se completan a medida que apruebe actividades\n        };\n        if($scope.selectedKey){ // Habria que agregar un mejor control de la key que se esta escribiendo\n            $rootScope.loading = true;\n            Cipressus.db.update(user_private, \"users_private/\" + $scope.selectedKey)\n                .then(function (snapshot) {\n                    // Copiar atributos para actualizar vista\n                    $scope.users[$scope.selectedIndex].admin = false;\n                    $scope.users[$scope.selectedIndex].enrolled = user_private.enrolled;\n                    M.toast({\n                        html: \"Listo!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2000\n                    });\n                    confirmEnrollModal.close();\n                    \n                    // Notificar al usuario sobre su aceptacion al curso\n                    var notif = { \n                        icon: \"info\",\n                        link: \"home\",\n                        title: \"Inscripción aceptada\",\n                        text: \"Has sido incorporado al curso: \"+$scope.activitiesTree.course.name\n                    };\n                    Cipressus.utils.sendNotification($scope.selectedKey, notif);\n\n                    $scope.selectedKey = null; // Deseleccionar user\n                    $scope.selectedIndex = null;\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n        }\n    };\n\n    $scope.evalUser = function (key) { // Preparar para ingresar calificaciones al usuario seleccionado\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n\n        evalAttendance(); // Calcular asistencia automáticamente\n\n        // Generar arreglos auxiliares para no sobreescribir el original\n        $scope.auxiliaryScores = {};\n        for (var k in $scope.users[$scope.selectedIndex].scores) // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliaryScores[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].scores[k].evaluator,\n                score: $scope.users[$scope.selectedIndex].scores[k].score,\n                timestamp: $scope.users[$scope.selectedIndex].scores[k].timestamp\n            };\n        $scope.auxiliarySubmits = {};\n        for (var k in $scope.users[$scope.selectedIndex].submits) { // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliarySubmits[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].submits[k].evaluator,\n                submitted: $scope.users[$scope.selectedIndex].submits[k].submitted,\n                timestamp: $scope.users[$scope.selectedIndex].submits[k].timestamp\n            };\n        }\n\n        // Inicializo los listeners de inputs date aca porque no pude usar ni ng-model ni ng-change\n        for (var k in $scope.activities)\n            if ($scope.activities[k].dl) { // Si la actividad tiene vencimiento\n                if ($scope.auxiliarySubmits[$scope.activities[k].id]) // Si la actividad fue entregada/evaluada\n                    document.getElementById($scope.activities[k].id).value = moment($scope.auxiliarySubmits[$scope.activities[k].id].submitted).format(\"YYYY-MM-DD\");\n                else // Si no borrarla\n                    document.getElementById($scope.activities[k].id).value = '';\n                document.getElementById($scope.activities[k].id).removeEventListener(\"change\", onInputDateChange); // Lo quito para no duplicar\n                document.getElementById($scope.activities[k].id).addEventListener(\"change\", onInputDateChange);\n            }\n        scoresModal.open(); // Lo hago aca porque se hace lio con los trigger de materialize\n    };\n\n    $scope.getCost = function (key) { // Calcular el costo por perdida de vencimiento de una actividad\n        if ($scope.activities[key] && $scope.auxiliarySubmits) { // Si ya existen los arreglos, usarlos\n            if ($scope.auxiliarySubmits[$scope.activities[key].id]) { // Control de coherencia\n                if ($scope.auxiliarySubmits[$scope.activities[key].id].submitted > $scope.activities[key].dl.date) { // Si paso el vencimiento\n                    // Calcular costo\n                    var cost = Cipressus.utils.defaultCostFunction($scope.auxiliarySubmits[$scope.activities[key].id].submitted, $scope.activities[key].dl.date, $scope.activities[key].dl.param);\n                    if (cost > $scope.activities[key].score) // El costo no puede superar el puntaje maximo\n                        return $scope.activities[key].score;\n                    else // Si no supera, retornar el valor\n                        return cost.toFixed(2);\n                } else // Si no paso el vencimiento, el costo es nulo\n                    return 0;\n            }\n        }\n    };\n\n    $scope.deleteSubmit = function (key) { // Esta se llama al eliminar una nota oprimiendo en el logo de usuario\n        // Para el caso de notas puedo quitar con instrucciones dentro del ng-click pero para este no\n        document.getElementById(key).removeEventListener(\"change\", onInputDateChange); // Lo quito para que no dispare al cambiar valor\n        document.getElementById(key).value = ''; // Limpiar input date\n        $scope.auxiliarySubmits[key] = null; // Borrar timestamp, evaluator y submitted\n        document.getElementById(key).addEventListener(\"change\", onInputDateChange); // Vuelvo a habilitar\n    }\n\n    $scope.saveScores = function () { // Guardar el formulario de notas\n        $rootScope.loading = true;\n        var obj = {}; // Objeto a actualizar en DB\n        obj.scores = $scope.auxiliaryScores;\n        obj.submits = $scope.auxiliarySubmits;\n        Cipressus.db.update(obj, \"users_private/\" + $scope.selectedKey)\n            .then(function (snapshot) {\n\n                // Notificar al usuario\n                var notif = { \n                    icon: \"info\",\n                    link: \"dashboard\",\n                    title: \"Cambios en calificaciones\",\n                    text: \"Tus calificaciones fueron actualizadas\"\n                };\n                Cipressus.utils.sendNotification($scope.selectedKey, notif);\n\n                $scope.users[$scope.selectedIndex].scores = $scope.auxiliaryScores;\n                $scope.users[$scope.selectedIndex].submits = $scope.auxiliarySubmits;\n                scoresModal.close();\n                // Borrar los datos temporales\n                $scope.selectedIndex = null;\n                $scope.auxiliaryScores = null;\n                $scope.auxiliarySubmits = null;\n                M.toast({\n                    html: \"Calificaciones actualizadas\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"No se pudo guardar\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    ///// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {\n        preventScrolling: false\n    });\n    var messageModal = M.Modal.init(document.getElementById(\"message_modal\"), {\n        preventScrolling: false\n    });\n    var confirmEnrollModal = M.Modal.init(document.getElementById(\"confirm_enroll_modal\"), {\n        preventScrolling: false\n    });\n    var scoresModal = M.Modal.init(document.getElementById(\"scores_modal\"), {\n        preventScrolling: false,\n        dismissible: false\n    });\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"users\").catch(function (err) {\n        console.log(err)\n    });\n\n    $scope.users = [];\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\n        .then(function (users_public_data) {\n            // Convertir objeto a arreglo y copiar claves\n            $scope.getUserIndex = {}; // Arreglo para mapear uid a indice de arreglo\n            for(var k in users_public_data){\n                $scope.users.push(users_public_data[k]);\n                $scope.users[$scope.users.length-1].key = k;\n                $scope.getUserIndex[k] = $scope.users.length-1; // Mapear indice\n            }\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\n                .then(function (users_private_data) {\n                    // Mezclar los atributos\n                    //console.log($scope.users);\n                    for (var k in users_private_data)\n                        for (var j in users_private_data[k]){ // Dos niveles de entrada\n                            $scope.users[$scope.getUserIndex[k]][j] = users_private_data[k][j];\n                        }\n                    // Descargar lista de actividades\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\n                        .then(function (activities_data) {\n                            $scope.activitiesTree = activities_data;\n                            $scope.activities = Cipressus.utils.getArray(activities_data);\n                            Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                            .then(function(events_data){\n                                events_data.forEach(function(childSnapshot){\n                                    var ev = childSnapshot.val();                                    \n                                    if(ev.start <= Date.now() && ev.attendance) // Si es un evento pasado y con asistencia obligatoria\n                                        attendableEvents++; // Contar para calcular porcentaje de asistencia \n                                });                                \n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            })\n                            .catch(function(err){ // events\n                                console.log(err);\n                                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            });\n                        })\n                        .catch(function (err) {\n                            console.log(err);\n                            M.toast({\n                                html: \"Ocurrió un error al acceder a la base de datos\",\n                                classes: 'rounded red',\n                                displayLength: 2000\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                        });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n\n}]);","app.controller(\"stats\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    var scatter_data = {}; // Arreglo de datos para graficos de correlacion\r\n\r\n    var updateScoreBarPlot = function () { // Genera los arreglos de calificaciones\r\n\r\n        var seriesData = [];\r\n        var drillDownData = [];\r\n\r\n        for (var k in $scope.users) { // Para cada usuario\r\n            if (!$scope.users[k].admin && $scope.users[k].scores && !$scope.users[k].excludeStat) { // Si tiene notas y no es admin y no queda excluido\r\n                var sc = (Cipressus.utils.eval($scope.users[k], $scope.activities)).score / $scope.activities.score * 100;\r\n                scatter_data[k] = { // Este dato se emplea luego para el grafico de correlacion de notas vs actividad\r\n                    score: sc,\r\n                    activity: 0,\r\n                    attendance: $scope.users[k].scores.asistencia.score\r\n                };\r\n                seriesData.push({ // Evaluar e insertar resultado en array\r\n                    name: $scope.users[k].secondName,\r\n                    y: sc,\r\n                    drilldown: k\r\n                });\r\n\r\n                var tempData = []; // Arreglo temporal con notas del alumno\r\n                for (var j in $scope.activities.children) { // Evaluar tambien las principales actividades\r\n                    tempData.push([\r\n                        $scope.activities.children[j].id,\r\n                        (Cipressus.utils.eval($scope.users[k], $scope.activities.children[j])).score / $scope.activities.children[j].score * 100\r\n                    ]);\r\n                }\r\n\r\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\r\n                    name: $scope.users[k].secondName,\r\n                    id: k,\r\n                    data: tempData\r\n                })\r\n            }\r\n        }\r\n\r\n        seriesData.sort(function(a, b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0) });\r\n\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                drillUpText: '<< Volver a {series.name}'\r\n            }\r\n        });\r\n\r\n        Highcharts.chart('score_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '75%'\r\n            },\r\n            title: {\r\n                text: 'Calificaciones del curso'\r\n            },\r\n            xAxis: {\r\n                type: 'category'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Puntaje acumulado'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y:.1f}%'\r\n                    }\r\n                }\r\n            },\r\n\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b>'\r\n            },\r\n\r\n            series: [{\r\n                name: \"Alumno\",\r\n                colorByPoint: true,\r\n                data: seriesData\r\n            }],\r\n            drilldown: {\r\n                colorByPoint: true,\r\n                series: drillDownData\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    $scope.drillUp = function () {\r\n        $(\"#score_barplot_container\").highcharts().drillUp();\r\n    };\r\n\r\n    var updateAttendancePlot = function () {\r\n        var seriesData = [];\r\n        var categories = []; // Lista de fechas de los eventos\r\n\r\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\r\n        for (var j in $scope.users) { // Para cada usuario, calcular progreso de asistencia\r\n            if ($scope.users[j].attendance && !$scope.users[j].excludeStat) {\r\n                var data = []; // Asistencia acumulada por clase\r\n                var evCnt = 0; // Contador de eventos\r\n                var evAtt = 0; // Contador de eventos asistidos\r\n                for (var k in $scope.events) {\r\n                    if ($scope.events[k].start < Date.now() && $scope.events[k].attendance) { // Solo eventos pasados y de asistencia obligatoria\r\n                        evCnt++; // Contar evento\r\n                        if ($scope.users[j].attendance[k]) // Si asistio a esta clase\r\n                            evAtt++;\r\n                        if (evAtt != 0)\r\n                            data.push(Math.round(evAtt / evCnt * 10000) / 100); // Redondear a dos digitos\r\n                        else\r\n                            data.push(0);\r\n                        if (first) // Primera pasada\r\n                            categories.push($rootScope.getTime(3,$scope.events[k].start)); // Agregar evento a la lista\r\n                    }\r\n                }\r\n                first = false;\r\n                seriesData.push({\r\n                    data: data,\r\n                    name: $scope.users[j].secondName\r\n                })\r\n            }\r\n        }\r\n\r\n        Highcharts.chart('attendance_container', {\r\n            chart: {\r\n                type: 'spline',\r\n                height: '70%'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: 'Asistencia a clases'\r\n            },\r\n            xAxis: {\r\n                categories: categories\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateTechPie = function () { // Tecnologias utilizadas mas frecuentemente\r\n        // Calcular uso de navegadores        \r\n        var totalBr = 0; // Cantidad total de datos naveg.\r\n        var totalOs = 0; // Cantidad total de datos so\r\n        var br = { // Contadores de accesos con navegadores\r\n            Firefox: 0,\r\n            Chrome: 0,\r\n            IE: 0,\r\n            Opera: 0,\r\n            Safari: 0,\r\n            Otro: 0\r\n        };\r\n        var os = { // Contadores de accesos con navegadores\r\n            Windows: 0,\r\n            Linux: 0,\r\n            IOS: 0,\r\n            Android: 0,\r\n            Otro: 0\r\n        };\r\n        for (var k in $scope.users)\r\n            if (!$scope.users[k].admin && !$scope.users[k].excludeStat) {\r\n                for (var j in $scope.users[k].activity.browser) {\r\n                    br[j] += $scope.users[k].activity.browser[j];\r\n                    totalBr += $scope.users[k].activity.browser[j];\r\n                }\r\n                for (var j in $scope.users[k].activity.os) {\r\n                    os[j] += $scope.users[k].activity.os[j];\r\n                    totalOs += $scope.users[k].activity.os[j];\r\n                }\r\n            }\r\n\r\n        /* // Esta porcion da error cuando se ejecuta por segunda vez (al cambiar de vista y volver)\r\n        Highcharts.setOptions({ // Gradiente de colores\r\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n                return {\r\n                    radialGradient: {\r\n                        cx: 0.5,\r\n                        cy: 0.3,\r\n                        r: 0.7\r\n                    },\r\n                    stops: [\r\n                        [0, color],\r\n                        [1, Highcharts.Color(color).brighten(-0.3).get('rgb')]\r\n                    ]\r\n                };\r\n            })\r\n        });\r\n        */\r\n\r\n        Highcharts.chart('browser_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de navegadores'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Chrome',\r\n                        y: br.Chrome / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Firefox',\r\n                        y: br.Firefox / totalBr\r\n                    },\r\n                    {\r\n                        name: 'IE',\r\n                        y: br.IE / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Opera',\r\n                        y: br.Opera / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Safari',\r\n                        y: br.Safari / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: br.Otro / totalBr\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('so_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de S.O.'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Windows',\r\n                        y: os.Windows / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Linux',\r\n                        y: os.Linux / totalOs\r\n                    },\r\n                    {\r\n                        name: 'IOS',\r\n                        y: os.IOS / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Android',\r\n                        y: os.Android / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: os.Otro / totalOs\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateMenuAccessPlot = function () {\r\n\r\n        var itemCntr = { // Nombres de las secciones en db\r\n            home: 'Inicio',\r\n            dashboard: 'Dashboard',\r\n            calendar: 'Cronograma',\r\n            sources: 'Material',\r\n            submissions: 'Entregas',\r\n            simulator: 'Simulador',\r\n            hardware: 'Probador',\r\n            profile: 'Perfil'\r\n        };\r\n\r\n        // Secciones\r\n        var categoriesData = []; // Nombres de los alumnos\r\n        var seriesData = []; // Datos a graficar\r\n        var first = true; // Primera pasada por lista de usuarios\r\n        for (var j in itemCntr) { // Para cada seccion\r\n            var data = []; // Accesos a la seccion actual por usuario\r\n            for (var k in $scope.users) // Para cada usuario\r\n                if (!$scope.users[k].admin && !$scope.users[k].excludeStat) { // Usuarios sobre los que se realiza estadistica\r\n                    if (first) // En la primera pasada, agregar la lista de nombres\r\n                        categoriesData.push($scope.users[k].secondName); // Agregar alumno a la lista\r\n                    if ($scope.users[k].activity.items[j]) { // Si tiene accesos a esta seccion\r\n                        data.push($scope.users[k].activity.items[j]) // Agregar valor\r\n                    } else { // Sino, el contador es 0\r\n                        data.push(0);\r\n                    }\r\n                    // Registrar cantidad de accesos (solo usuarios con nota)\r\n                    if (j == 'home' && $scope.users[k].scores) // Los accesos a home equivale a la cantidad de logueos\r\n                        scatter_data[k].activity = $scope.users[k].activity.items.home;\r\n                }\r\n            seriesData.push({\r\n                name: itemCntr[j],\r\n                data: data\r\n            });\r\n            first = false;\r\n        }\r\n\r\n        Highcharts.chart('items_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '150%'\r\n            },\r\n            title: {\r\n                text: 'Uso de herramientas'\r\n            },\r\n            xAxis: {\r\n                categories: categoriesData,\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: 'Accesos',\r\n                    align: 'high'\r\n                },\r\n                labels: {\r\n                    overflow: 'justify'\r\n                }\r\n            },\r\n            tooltip: {\r\n                valueSuffix: ' accesos'\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    dataLabels: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'top',\r\n                x: -40,\r\n                y: 80,\r\n                floating: true,\r\n                borderWidth: 1,\r\n                backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n                shadow: true\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateScatterPlot = function () { // Espacio para variables correlacionadas\r\n        var seriesData1 = [];\r\n        var seriesData2 = [];\r\n        for (var k in scatter_data){\r\n            seriesData1.push([scatter_data[k].score,scatter_data[k].activity]);\r\n            seriesData2.push([scatter_data[k].score,scatter_data[k].attendance]);\r\n        }\r\n\r\n        Highcharts.chart('scatterplot_container1', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs actividad'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Accesos'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} accesos'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(223, 83, 83, .5)',\r\n                data: seriesData1\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('scatterplot_container2', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs asistencia'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Asistencia'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} %'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(83, 83, 223, .5)',\r\n                data: seriesData2\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateProfilesPlot = function(){ // Mostrar un grafico de barras para el test de FS con los datos promedios\r\n        var avgScales = [0,0,0,0]; // Valores promedios de las escalas\r\n        var dataCnt = 0; // Cantidad de individuos\r\n        for(var k in $scope.users){ // Calcular promedio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes\r\n                        avgScales[j] += scales[j];\r\n                }\r\n        }\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            avgScales[j] = Math.round(avgScales[j]/dataCnt*100)/100;\r\n\r\n        // Calcular desvio estandar\r\n        var stdScales = [0,0,0,0];\r\n        for(var k in $scope.users){ // Calcular desvio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes de la ecuacion de desvio\r\n                        stdScales[j] += (scales[j]-avgScales[j])*(scales[j]-avgScales[j]); // Suma de diferencias cuadraticas\r\n                }\r\n        }\r\n\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            stdScales[j] = Math.round(Math.sqrt(stdScales[j]/dataCnt)*100)/100; // Formula std (redondeo 2 decimales)\r\n\r\n        for (var k = 0; k < 4; k++) {\r\n            var elem = document.getElementById(\"scale_\" + k);\r\n            var width = 2*Math.abs(avgScales[k]) * 50 / 11; //(50% hacia los costados dividido 11 puntaje max)\r\n            elem.style.width = width + '%';\r\n            if (avgScales[k] < 0) {\r\n                elem.style.marginLeft = 50 - width + '%';\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\r\n            } else {\r\n                elem.style.marginLeft = \"50%\";\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\r\n            }\r\n            elem.innerHTML = Math.abs(avgScales[k])+\" &#177;\"+stdScales[k];\r\n        }\r\n    };\r\n\r\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\r\n        .then(function (users_public_data) {\r\n            $scope.users = users_public_data;\r\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\r\n                .then(function (users_private_data) {\r\n                    // Mezclar los atributos\r\n                    // #TODO listar solo usuarios del curso actual\r\n                    for (var k in users_private_data) // Para cada usuario\r\n                        for (var j in users_private_data[k]) // Para cada atributo del usuario actual\r\n                            $scope.users[k][j] = users_private_data[k][j];\r\n                    // Descargar lista de actividades\r\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\r\n                        .then(function (activities_data) {\r\n                            $scope.activities = activities_data;\r\n                            Cipressus.db.get('events/'+$rootScope.user.course) // Descargar la lista de clases\r\n                                .then(function (events_data) {\r\n                                    $scope.events = events_data;\r\n                                    updateScoreBarPlot(); // Cargar los datos al grafico de barras                    \r\n                                    updateAttendancePlot(); // Actualizar grafico de asistencia\r\n                                    updateTechPie(); // Mostrar estadisticas de uso                            \r\n                                    updateMenuAccessPlot(); // Estadisticas de uso de alumnos\r\n                                    updateScatterPlot(); // Grafico de correlacion entre variables\r\n                                    updateProfilesPlot(); // Perfil promedio y desvio\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                });                            \r\n                        })\r\n                        .catch(function (err) { // activities\r\n                            console.log(err);\r\n                            M.toast({\r\n                                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                classes: 'rounded red',\r\n                                displayLength: 2000\r\n                            });\r\n                            $rootScope.loading = false;\r\n                            $scope.$apply();\r\n                        });\r\n                })\r\n                .catch(function (err) { // users_private\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n        })\r\n        .catch(function (err) { // users_public\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                classes: 'rounded red',\r\n                displayLength: 2000\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n}]);","app.controller(\"attendance\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.updateLists = function(){ // En base a la fecha seleccionada se generan las listas de ausentes y presentes\n        if($scope.changes){ // Si hubo cambios, preguntar si guardar antes de borrar\n            confirmModal.open();\n            return;\n        } \n        \n        $scope.absents = []; // Lista con id de usuarios ausentes al evento actual\n        $scope.presents = []; // Lista de presentes\n        for(var k in $scope.users){ // Recorrer lista de usuarios\n            if(!$scope.users[k].admin){ // A los usuarios admin no se les computa asistencia\n                if($scope.users[k].attendance){ // Si el usuario asistio a alguna clase\n                    if($scope.users[k].attendance[$scope.selectedEventKey]) // Si tiene el evento actual\n                        $scope.presents.push(k); // Marcar alumno como presente\n                    else // Si no tiene el evento actual\n                        $scope.absents.push(k); // Agregar a lista de ausentes\n                }else // Si no asistio a ningun evento, marcar como ausente \n                    $scope.absents.push(k); // Agregar a lista de ausentes\n            }\n        }\n\n        $scope.$apply();\n    };\n\n    $scope.isPresent = function(idx){ // Mover el user key a lista de ausentes\n        $scope.changes = true;\n        $scope.presents.push($scope.absents[idx]); // Agregar a prsentes\n        $scope.absents.splice(idx,1); // Quitar de ausentes\n    };\n\n    $scope.isAbsent = function(idx){ // Mover el user key a la lista de presentes\n        $scope.changes = true;\n        $scope.absents.push($scope.presents[idx]); // Agregar a ausentes\n        $scope.presents.splice(idx,1); // Quitar de presentes\n    };\n\n    $scope.saveList = function(){ // Guardar la lista de presentes\n        var updates = {};\n        for(var k in $scope.presents){ // Guardar referencia al evento actual en la entrada del usuario\n            var value = { // A insertar para marcar asistencia\n                evaluator: $rootScope.user.uid,\n                timestamp: Date.now()\n            };\n            updates[\"users_private/\"+$scope.presents[k]+\"/attendance/\"+$scope.selectedEventKey] = value;\n            // Actualizar objeto local\n            if(!$scope.users[$scope.presents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.presents[k]].attendance = {}\n            $scope.users[$scope.presents[k]].attendance[$scope.selectedEventKey] = value;\n        }\n        for(var k in $scope.absents){ // Quitar referencia en la entrada del usuario\n            updates[\"users_private/\"+$scope.absents[k]+\"/attendance/\"+$scope.selectedEventKey] = null;\n            if(!$scope.users[$scope.absents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.absents[k]].attendance = {}\n            $scope.users[$scope.absents[k]].attendance[$scope.selectedEventKey] = null;\n        }\n\n        // Guardar cambios\n        Cipressus.db.update(updates)\n        .then(function(snapshot){\n            M.toast({html: \"Cambios guardados!\",classes: 'rounded green darken-3 darken-3',displayLength: 1500});        \n            $rootScope.loading = false;\n            $scope.changes = false;\n            $scope.$apply();\n            confirmModal.close();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al actualizar cambios\",classes: 'rounded red',displayLength: 2000});        \n        });\n\n    };\n    \n    //// Inicializacion //// \n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"attendance\").catch(function(err){console.log(err)});\n\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false});\n    document.getElementById(\"event_select\").addEventListener(\"change\",function(){ // No se puede poner en ng-change\n        $scope.selectedEventKey = this.value;\n        $scope.updateLists();\n    });\n    \n    Cipressus.db.getSorted(\"events/\"+$rootScope.user.course,\"start\") // Descargar todos los eventos ordenados por fecha\n    .then(function(events_data){\n        $scope.events = {}; // Lista de eventos que completo dentro del iterator\n        // Tengo que buscar el evento que acaba de empezar (para usar en la clase actual por ejemplo)\n        var today = Date.now(); // Ahora\n        var nextKey = \"\"; // En esta variable dejo el key del evento que pongo por defecto        \n        events_data.forEach(function(childSnapshot){ // Lista ordenada de menor a mayor (esto no es asincrono)            \n            key = childSnapshot.ref_.path.pieces_[2]; // Esto seria el key (#HARDCODED el 2 es porque son dos niveles de keys dentro del arbol\n            $scope.events[key] = childSnapshot.val(); // Hago push del evento (no se puede mandar todos de una)\n            if($scope.events[key].start < today) // Los eventos futuros ya no los guardo\n                nextKey = key; // Guardo el key del evento\n            \n        });        \n        $scope.$apply(); // Hay que actualizar dom antes de inicializar el select\n        document.getElementById(\"event_select\").value = nextKey; // Seleccionar el valor defecto del select\n        $scope.selectedEventKey = nextKey; // Para actualizar la tabla una vez que tenga los usuarios\n        M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n        Cipressus.db.get(\"users_private\") // Descargar lista de usuarios\n        .then(function(users_private_data){\n            $scope.users = {};\n            for(var k in users_private_data) \n                if(users_private_data[k].course == $rootScope.user.course) // Solo tomo los del curso actual\n                    $scope.users[k] = users_private_data[k];\n            Cipressus.db.get(\"users_public\") // Descargar datos de usuario\n            .then(function(users_public_data){\n                for(var k in users_public_data) // Los datos de usuario para listar\n                    if($scope.users[k]) // Si este usuario esta en lista de habilitados\n                        $scope.users[k].data = users_public_data[k]; \n                $scope.updateLists(); // Como ya tengo el selectedEventKey, puedo generar las listas para ese dia\n                $rootScope.loading = false;\n                $scope.changes = false; // Para habilitar el boton de guardar\n                $scope.$apply();    \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            });        \n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n        });        \n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });    \n\n}]);","app.controller(\"activities\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function (node) { // Graficar sunburst\n\n        var data = Cipressus.utils.getArray(node); // Obtener el formato que requiere el grafico\n\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '90%'},\n            title: {text: 'Proporción de calificaciones'},\n            subtitle: {text: $scope.activities.course.name},\n            credits: {enabled: false},\n            plotOptions: {\n                series: {\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            //console.log(event.point.node.id);\n                            var node = Cipressus.utils.searchNode($scope.activities, event.point.node.id); \n                            if(node)\n                                $scope.selectActivity(node, false, true);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",\n                id: \"Activities\",\n                data: data,\n                allowDrillToNode: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    format: '{point.name}',\n                    filter: {property: 'innerArcLength',operator: '>',value: 16}\n                },\n                levels: [{\n                        level: 1,\n                        levelIsConstant: false,\n                        dataLabels: {\n                            filter: {property: 'outerArcLength',operator: '>',value: 64}\n                        }\n                    },\n                    {\n                        level: 2,\n                        colorIndex: 1\n                    },\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}\n                }]\n\n            }],\n            tooltip: {\n                headerFormat: \"\",\n                pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'\n            }\n        });\n    };\n\n    var tree = null; // Global\n\n    var updateTree = function () {\n        \n        if (tree !== null) {\n            tree.destroy();\n            tree = null;\n        }\n\n        var data = Cipressus.utils.getTree($scope.activities); // Obtener esquema en formato de arbol jerarquico para vis.js\n\n        var container = document.getElementById('tree_container');\n        var options = {            \n            layout: {\n                hierarchical: {\n                    direction: \"UD\"\n                }\n            }\n        };\n\n        tree = new vis.Network(container, data, options);\n\n        /*\n        tree.once('afterDrawing', function() {\n            container.style.height = '75vh'\n        });\n        */\n\n        tree.on('select', function (params) { // Callback de seleccion de nodos del arbol\n            var node = Cipressus.utils.searchNode($scope.activities, params.nodes[0]); \n            if(node)\n                $scope.selectActivity(node, true, true);\n        });\n    };\n\n    $scope.selectActivity = function(node, update_sunburst, apply){ // Selecciona un nodo\n        if(node){ // Checkeo de validez\n            if($scope.selectedHistory)\n                $scope.selectedHistory.push($scope.selectedNode);\n            else\n                $scope.selectedHistory = [$scope.selectedNode];\n\n            $scope.selectedNode = node;\n\n            if(update_sunburst)\n                updateSunburst(node);\n            \n            if(apply)\n                $scope.$apply();\n            M.updateTextFields();\n        }\n    };\n\n    $scope.selectPreviousActivity = function(){ // Callback de boton para volver hacia atras la seleccion\n        if($scope.selectedHistory){\n            var node = $scope.selectedHistory.pop(); // Devuelve el anterior al actual y lo quita\n            // De aca en adelante es lo mismo que $scope.selectActivity pero sin insertar en el historial\n            if(node){\n                $scope.selectedNode = node;\n                updateSunburst(node);\n                M.updateTextFields();\n            }\n        }\n    };\n    \n    var courseID = $location.$$search.id;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"activities\", courseID).catch(function (err) {\n        console.log(err);\n    });\n\n    //console.log(courseID);\n\n    $rootScope.loading = true;\n    if(courseID){\n        Cipressus.db.get('activities/' + courseID) // Descargar arbol de actividades\n        .then(function (data) {\n            $scope.activities = data;\n\n            updateSunburst($scope.activities);\n            updateTree();\n            $scope.selectedNode = angular.copy($scope.activities);\n            $scope.selectedHistory = [$scope.selectedNode]; // Historial para hacer drillup\n\n            M.updateTextFields();\n            $rootScope.loading = false;\n            $rootScope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n    }else{\n        $scope.activities = {\n            childres:[],\n            course:{\n                start: Date.now(),\n                end: Date.now()+9504000000,\n                name: \"Nuevo curso\"\n            },\n            id: \"final\",\n            name: \"Nota final\",\n            score: 100\n        };\n        $scope.selectedNode = angular.copy($scope.activities);\n        updateSunburst($scope.activities);\n        updateTree();\n        $rootScope.loading = false;\n    }\n\n}]);\n\n","app.controller(\"courses\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n    \n    // Modal de confirmacion de eliminacion de curso\n    var deleteCourseModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); \n\n\n    // Registrar actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"courses\").catch(function (err) {\n        console.log(err)\n    });\n\n    // Eliminación de curso\n    $scope.deleteCourse = function(key){\n        if(key){ // Si se pasa clave, abrir modal para confirmar\n            $scope.selectedCourseKey = key;\n            $scope.selectedCourseIndex = $scope.courses.findIndex(function(el){return el.key == key});\n            deleteCourseModal.open();\n        }else{ // Si no tiene clave (key == null), es confirmacion de eliminacion del curso seleccionado\n            if($scope.selectedCourseKey){ // Debe estar definido\n\n            }else{\n                M.toast({html: \"La clave de curso no es válida.\",classes: 'rounded red',displayLength: 2000});\n            }\n        }\n    }\n\n    // Descargar informacion sobre los cursos\n    Cipressus.db.get(\"metadata/courses\") // Descargar datos de los cursos disponibles\n    .then(function(courses){\n        $scope.courses = [];\n        for(var k in courses){\n            courses[k].key = k;\n            $scope.courses.push(courses[k]);\n        }\n        //console.log($scope.courses);\n        $rootScope.loading = false;\n        $rootScope.$apply();\n        M.FormSelect.init(document.querySelectorAll('select'), {});\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n    });\n\n}]);","app.controller(\"editor\", ['$scope','$rootScope','$location','localStorageService', function ($scope,$rootScope,$location,localStorageService) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.select = function(key){ // Seleccionar noticia para ver, editar o borrar\n        // Aunque no edite se inicializa el editor igual. Para evitarlo hay que meter esto en otra funcion\n        var quilleditor = document.createElement(\"div\"); // Crear el contenedor cada vez para reiniciar\n        quilleditor.id = \"quill\";\n        document.getElementById(\"quill_container\").innerHTML = \"\";\n        document.getElementById(\"quill_container\").appendChild(quilleditor);            \n        quill = new Quill('#quill', { // Controlador del editor (inicializo cada vez)\n            modules: {            \n                toolbar: [ // Botones de la barra de tareas\n                    ['bold', 'italic', 'underline', 'strike'],        \n                    [{ 'size': ['small', false, 'large', 'huge'] }], \n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],            \n                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                    [{ 'script': 'sub'}, { 'script': 'super' }],      \n                    [{ 'indent': '-1'}, { 'indent': '+1' }],         \n                    [{ 'direction': 'rtl' }],                         \n                    [{ 'color': [] }, { 'background': [] }],          \n                    [{ 'font': [] }],\n                    [{ 'align': [] }],\n                    ['link', 'image'],\n                    ['clean']                                         \n                ],\n                imageResize: {} // Este funciona con un script adicional\n            },\n            theme: 'snow'\n        });        \n        if(key != undefined){ // Editar, ver o eliminar existente\n            $scope.selected = angular.copy($scope.news[key]);\n            quill.container.firstChild.innerHTML = $scope.selected.content;\n        }else{ // Editar nueva\n            quill.container.firstChild.innerHTML = \"\";\n            $scope.selected = {\n                title: \"\",\n                content: \"\",\n                order: $scope.news.length,\n                timestamp: 0,\n                author: $rootScope.user.uid\n            }\n        }\n    };\n\n    var updateTimestamp = function(){ // Actualizar fecha de actualizacion de noticias en db\n        var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\n        Cipressus.db.update(ts,\"metadata/updates/news\")\n        .then(function(){\n            console.log(\"Actualización de metadata\");\n            // Actualizar informacion en localstorage\n            newsData = { // Objeto a guardar en localStorage\n                news: $scope.news,\n                authors: $scope.users,\n                last_update: Date.now()\n            };\n            localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    $scope.deleteSelected = function(){ // Borrar noticia seleccionada\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"news/\"+$rootScope.user.course+\"/\"+$scope.selected.key)\n        .then(function(snapshot){\n            $scope.news.splice($scope.selected.order,1); // Quitar del view\n            // Actualizar orden de cada elemento\n            var updates = {};\n            for(k in $scope.news){ \n                $scope.news[k].order = parseInt(k);\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[k].key+\"/order\"] = parseInt(k);\n            }\n            Cipressus.db.update(updates)\n            .then(function(snapshot){\n                M.toast({html: \"Listo!\",classes: 'rounded green darken-3',displayLength: 1000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                $rootScope.loading = false;\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            $rootScope.loading = false;\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n        updateTimestamp();\n        confirmModal.close();\n    };\n\n    $scope.moveSelected = function(up, key){ // Mover noticia hacia arriba(true) o abajo(false). key es el numero de elemento\n        if(up){ // Subir\n            if(key > 0){ // No puede subirse el primero\n                $rootScope.loading = true;\n                var updates = {};\n                // Hacer un swap con el de arriba\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order - 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key-1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates)\n                .then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order-1;\n                    $scope.news[key-1].order = $scope.news[key-1].order+1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key-1]);\n                    $scope.news[key-1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }\n        }else{ // Bajar\n            if(key < $scope.news.length - 1){ // No puede bajarse el ultimo\n                console.log($scope.news[key].key);\n                console.log($scope.news[key+1].key);\n                $rootScope.loading = true;\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order + 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key+1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates).then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order + 1;\n                    $scope.news[key+1].order = $scope.news[key+1].order - 1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key+1]);\n                    $scope.news[key+1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                }); \n            }\n        }\n        updateTimestamp();\n    };\n\n    $scope.saveSelected = function(){ // Guardar nueva noticia o guardar cambios editados\n        \n        $rootScope.loading = true;\n        \n        if($scope.scheduledNew){ // Si es publicacion programada\n            var date = document.getElementById(\"schedule_date\").value;\n            var time = document.getElementById(\"schedule_time\").value;\n            var timestamp = moment(time+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n            if(timestamp){ // Chequear que haya puesto bien la fecha\n                $scope.selected.timestamp = timestamp;\n            }else{\n                M.toast({html: \"Ingrese fecha de publicación programada\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                return;\n            }\n        }else{ // Si no es publicación programada, usar fecha actual\n            $scope.selected.timestamp = Date.now(); // Fecha:hora actuales\n        }\n\n        $scope.selected.content = quill.container.firstChild.innerHTML.replace(new RegExp(\"<img src=\", 'g'), \"<img class='responsive-img' src=\"); // Agregar clase responsive a las imagenes\n        \n        if($scope.selected.key){ // Si ya tiene una clave, hay que sobreescribir noticia en DB\n            var key = $scope.selected.key;            \n            $scope.selected.key = null; // Borro la clave para que no quede en la db\n            Cipressus.db.update($scope.selected,'news/'+$rootScope.user.course+\"/\"+key)\n            .then(function(snapshot){\n                $scope.selected.key = key; // Volver a poner la clave para que no se pierda\n                var index = $scope.news.findIndex(function(el){return el.key == key;});\n                $scope.news[index] = angular.copy($scope.selected); // Actualizar local\n                M.toast({html: \"Comunicado actualizado\",classes: 'rounded green darken-3',displayLength: 1500});\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si no tiene key, hacer push\n            $rootScope.loading = true;\n            Cipressus.db.push($scope.selected,'news/'+$rootScope.user.course)\n            .then(function(snapshot){\n                // Si el autor aun no habia creado noticias, guardar su avatar y nombre\n                if(!$scope.users[$rootScope.user.uid]){\n                    $scope.users[$rootScope.user.uid] = {\n                        name: $rootScope.user.name,\n                        avatar:$rootScope.user.avatar\n                    }\n                }\n                $scope.selected.key = snapshot.key;\n                $scope.news.push($scope.selected);\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }\n        updateTimestamp();\n    };\n\n    \n    //// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {preventScrolling: false});\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false, dismissible: false});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {preventScrolling: false, dismissible: false});\n    $scope.selected = {};\n    $scope.scheduledNew = false;\n    var quill; // El editor se inicializa al seleccionar una entrada\n\n    var downloadNews = function(){ // Descargar noticias y usuarios de la db\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\n        var authors = []; // Uids de usuarios que hicieron publicaciones\n        Cipressus.db.getSorted('news/'+$rootScope.user.course,'order') // Descargar lista de novedades\n        .then(function(snapshot){\n            snapshot.forEach(function(childSnapshot){ // Lista ordenada\n                var child = childSnapshot.val();\n                child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\n                child.key = childSnapshot.key; // Hay que guardar el key para actualizar\n                if(authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\n                    authors.push(child.author); // Agregar a la lista\n                $scope.news.push(child);\n            });  \n            $scope.users = {};\n            if(authors.length > 0){\n                var job = [];\n                for(var k in authors)\n                    job.push(Cipressus.db.get('users_public/'+authors[k])) // Descargar datos de los autores de publicaciones solamente\n                Promise.all(job)\n                .then(function(users_data){\n                    for(var k in users_data)\n                        $scope.users[authors[k]] = users_data[k]; \n                    newsData = { // Objeto a guardar en localStorage\n                        news: $scope.news,\n                        authors: $scope.users,\n                        last_update: Date.now()\n                    };\n                    localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }else{\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    // Monitoreo de actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"editor\").catch(function(err){console.log(err)});\n\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\n    if(newsData){ // Si hay datos en local storage\n        $scope.news = newsData.news;\n        $scope.users = newsData.authors;\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\n        .then(function(updateTimestamp){\n            if(newsData.last_update < updateTimestamp) // Hay cambios en la base de datos\n                downloadNews(); // Descargar\n            else{ // Si no hay cambios, terminar\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    }else{ // Si no hay datos, descargar si o si\n        downloadNews();\n    }\n\n}]);","app.controller(\"profile\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    document.getElementById(\"imgInput\").addEventListener('change', // Callback al subir foto de perfil\n        function () { // Cuando sube una nueva foto, agregar a la vista como base64\n            $rootScope.loading = true;\n            $scope.$apply();\n            var file = document.getElementById(\"imgInput\").files[0];\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                $scope.newAvatar = reader.result; // Se muestra temporalmente esta imagen\n                $scope.avatarFile = file; // Guardo el archivo para subir luego a storage\n                $scope.newProfilePic = true;\n                $rootScope.loading = false;\n                $scope.$apply();\n            }\n            if (file) reader.readAsDataURL(file);\n        });\n\n    $scope.uploadPic = function () { // Redirigir el evento al input para cargar una foto\n        document.getElementById(\"imgInput\").click();\n    };\n\n    $scope.saveForm = function () { // Guardar cambios en db\n        $rootScope.loading = true;\n\n        // Valores de los formularios\n        var newData = {\n            name: document.getElementById(\"inputName\").value,\n            secondName: document.getElementById(\"inputSecondName\").value,\n            lu: document.getElementById(\"inputLU\").value,\n            degree: document.getElementById(\"inputDegree\").value,\n            partners: [] // Arreglo de companeros de comision, se completa luego\n        }\n\n        // Validar datos de formulario\n        if (newData.name == \"\" || newData.secondName == \"\" || newData.lu == \"\" || newData.degree == \"\") {\n            console.log(\"Uno de los campos queda vacio.\");\n            M.toast({\n                html: \"Complete todos los campos\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n            $rootScope.loading = false;\n            return;\n        }\n\n        // Buscar companeros de comision ingresados y generar arreglo de uids\n        var getUserUID = function (name) { // Obtener el uid a partir del nombre completo\n            for (var k in $scope.users)\n                if ($scope.users[k].name + \" \" + $scope.users[k].secondName == name) // Coincidencia\n                    return k;\n        };\n\n        // Validar los nombres de companeros de comision (deben existir usuarios, no pueden ser iguales)\n        if (document.getElementById(\"partner1\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner1\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (document.getElementById(\"partner2\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner2\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (newData.partners.length == 2) { // En caso de ingresar dos compañeros\n            if (newData.partners[0] == newData.partners[1]) { // No pueden ser iguales\n                M.toast({\n                    html: \"Nombres de compañeros iguales\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        // Falta verificar que ninguno de los dos companeros ingresado sean iguales al usuario actual\n\n        // Habria que incluir referencia al usuario actual en los companeros indicados\n        var updateNewData = function(){ // Actualizar entrada en la db\n            Cipressus.db.update(newData, \"users_public/\" + $rootScope.user.uid) // Actualizar\n                .then(function (res) {\n                    M.toast({\n                        html: \"Datos actualizados!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                    // Actualizar datos de view\n                    $rootScope.user.name = newData.name;\n                    $rootScope.user.secondName = newData.secondName;\n                    $rootScope.user.lu = newData.lu;\n                    $rootScope.user.degree = newData.degree;\n                    $rootScope.user.partners = newData.partners;\n                    $rootScope.loading = false;\n                    $scope.edit = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un problema al actualizar los datos\",\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        if ($scope.newProfilePic) { // Si puso nueva foto\n            var saveNewAvatar = function () { // Guardar nueva foto de perfil en storage\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + $scope.avatarFile.name.split(\".\")[1]; // Generar nombre de archivo\n                Cipressus.storage.put($scope.avatarFile, \"Images\", filename) // Guardar imagen en storage\n                    .then(function (res) {                        \n                        // Datos que van al storage\n                        newData.avatar = res.url;\n                        newData.avatarFilename = filename;\n                        // Actualizar datos de la vista\n                        $rootScope.user.avatar = res.url; // Enlace a la imagen\n                        $rootScope.user.avatarFilename = filename; // Nombre de archivo en storage\n                        updateNewData(); // Finalmente, actualizar todos los datos\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            }\n            // Si ya tenia foto de perfil, eliminar la anterior\n            if ($rootScope.user.avatarFilename) {\n                Cipressus.storage.delete($rootScope.user.avatarFilename, \"Images\")\n                    .then(function (res) {\n                        saveNewAvatar(); // Luego de borrar, guardar la nueva\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        saveNewAvatar(); // Intentar cargar nueva de todas maneras\n                    });\n            }else{ // Si no tenia foto de perfil, cargar directamente\n                saveNewAvatar();\n            }\n        }else{ // Si no cambio la foto de perfil, actualizar solo los datos\n            updateNewData();\n        }\n    };\n\n\n    ///// Inicialización controller\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.edit = false; // Toggle para la edicion de los datos del perfil\n    $scope.newProfilePic = false; // Indicador para saber si hay que actualizar foto de perfil\n    $scope.created = $rootScope.user.enrolled > 0 ? moment($rootScope.user.enrolled).format(\"DD/MM/YYYY HH:mm\") : \"(Aún no aprobado)\"; // Formato legible\n    $scope.newAvatar = $rootScope.user.avatar; // Nuevo src si carga nueva foto de perfil\n\n    M.Tooltip.init(document.querySelectorAll('.tooltipped'), {}); // Inicializar tooltips      \n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"profile\").catch(function (err) {\n        console.log(err)\n    });\n\n    Cipressus.db.get(\"users_public\") // Descargar datos de usuarios\n        .then(function (users_public_data) {\n            $scope.users = users_public_data;\n            // Lista de usuarios para autocompletador\n            var userList = {};\n            for (var k in $scope.users) // Para excluir admins o usuarios de otros cursos hay que bajar users_private\n                userList[$scope.users[k].name + \" \" + $scope.users[k].secondName] = $scope.users[k].avatar; // Lista de nombres y fotos\n            M.Autocomplete.init(document.querySelectorAll('.autocomplete'), {\n                data: userList\n            });\n\n            // Inicializar inputs\n            document.getElementById(\"inputName\").value = $rootScope.user.name;\n            document.getElementById(\"inputSecondName\").value = $rootScope.user.secondName;\n            document.getElementById(\"inputLU\").value = $rootScope.user.lu;\n            document.getElementById(\"inputDegree\").value = $rootScope.user.degree;\n            if ($rootScope.user.partners) {\n                if ($rootScope.user.partners[0])\n                    document.getElementById(\"partner1\").value = $scope.users[$rootScope.user.partners[0]].name + \" \" + $scope.users[$rootScope.user.partners[0]].secondName;\n                if ($rootScope.user.partners[1])\n                    document.getElementById(\"partner2\").value = $scope.users[$rootScope.user.partners[1]].name + \" \" + $scope.users[$rootScope.user.partners[1]].secondName;\n            }\n\n            M.FormSelect.init(document.querySelectorAll('select'), {});\n            M.updateTextFields(); // Para mostrar los placeholders\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);"],"sourceRoot":"/source/"}