{"version":3,"sources":["src/assets/custom/cipressus.js","src/assets/custom/cipressus-utils.js","src/assets/custom/cipressus-hardware.js","src/assets/custom/cipressus-test-fs.js","src/controllers/index.js","src/controllers/testResults.js","src/controllers/login.js","src/controllers/home.js","src/controllers/dashboard.js","src/controllers/calendar.js","src/controllers/sources.js","src/controllers/submissions.js","src/controllers/hardware.js","src/controllers/analizer.js","src/controllers/simulator.js","src/controllers/kMaps.js","src/controllers/tables.js","src/controllers/users.js","src/controllers/stats.js","src/controllers/attendance.js","src/controllers/activities.js","src/controllers/courses.js","src/controllers/editor.js","src/controllers/profile.js"],"names":["window","Cipressus","public","globalTarget","db","storage","users","hardware","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","publicvapidkey","listen","path","callback_success","callback_error","firebase","database","ref","on","snapshot","val","key","error","listenChild","child","value","orderByChild","equalTo","stopListener","Promise","fulfill","reject","off","then","get","once","getSorted","query","set","data","update","push","pushMultiple","dataArray","job","k","all","put","file","filename","size","totalBytes","getDownloadURL","url","putMultiple","files","filenames","res","sizes","results","urls","putString","str","onUserSignedIn","uid","console","log","onUserSignedOut","signIn","form","auth","signInWithEmailAndPassword","email","password","errorMessage","errorCode","code","result","signOut","signUp","createUserWithEmailAndPassword","users_public","activity","last_login","Date","now","browser","os","name","secondName","degree","lu","avatar","Math","floor","random","is","firefox","chrome","ie","opera","safari","ios","android","windows","linux","user","err","resetPwd","sendPasswordResetEmail","initialize","initializeApp","messaging","usePublicVapidKey","requestPermission","onMessage","payload","opts","body","icon","sound","registration","showNotification","getToken","currentToken","onTokenRefresh","refreshedToken","showToken","navigator","serviceWorker","getRegistration","reg","onAuthStateChanged","actionStack","utils","searchNode","node","id","children","defaultCostFunction","submitMs","deadlineMs","param","ceil","eval","student","sum","deadline","submits","submitted","date","cost","spublic","spublics","getArray","root","getArrRec","arr","parent","dl","getTree","treeRec","tree","nodes","edges","color","label","shape","font","face","strokeWidth","strokeColor","toString","from","to","course","replace","sendEmail","sendNotification","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","json","JSON","parse","responseText","msg","stringify","send","generateFileName","len","text","possible","i","charAt","length","quillToHTML","activityCntr","userUid","item","activity_data","updates","logAction","actionMsg","timestamp","logError","stack","getPrimeImplicants","mark2","j","c","p","n","r","q","combine","m","a","count","repeatelem","elem","accu","addOneAndRecurse","remaining","newList","concat","IM","im","im2","mark","sort","socket","timerId","serialPorts","initServer","params","sample_period","sp","io","onUpdate","WebSocket","onerror","onopen","clearInterval","onSocketOpen","onclose","setInterval","ci","onSocketClose","onmessage","message","input","stopServer","close","ioUpdate","outputs","output","setTimeout","connectTo","portIndex","getSerialPorts","test_FS","questions","options","evalMatrix","profileDesc","answers","var_sum","vble","quest","this","reduce","b","scales","sc","app","angular","module","$routeProvider","when","templateUrl","controller","filter","$sce","trustAsResourceUrl","$locationProvider","hashPrefix","run","$rootScope","$location","loading","userLogged","bodyClass","notifications","notifCnt","moment","locale","relativeTime","future","past","s","ss","mm","h","hh","d","dd","M","MM","y","yy","greetings","split_afternoon","split_evening","currentHour","parseFloat","format","getTime","stamp","time","fromNow","getUserNames","userUids","names","join","readableFileSize","bytes","si","thresh","abs","units","u","toFixed","openNotification","idx","read","link","sidenav","Sidenav","init","document","querySelector","side","inDuration","Collapsible","Modal","getElementById","usb_modal","help_modal","addEventListener","resizeEvent","Dropdown","querySelectorAll","toast","html","classes","displayLength","sendHelp","helpMessage","public_data","private_data","admin","enrolled","OS","update_activity","$apply","lastView","route","split","search","usbStatus","wssIconColor","onWssConnect","onWssDisconnect","hardwareConfig","FormSelect","openUSBModal","connectToServer","disconnectFromServer","enableConnect","connectToSerialPort","isInStandaloneMode","setState","showInstallMessage","e","userChoice","choiceResult","outcome","directive","restrict","scope","$watch","width","style","marginLeft","innerHTML","$scope","keypressed","btn_click","loginAttempt","userForm","retrievePassword","registerNewUser","formOk","passwordConfirm","updateButtons","login_mode","btn_text","menu_left","menu_right","welcomeText","updateTextFields","localStorageService","testFSAnswers","testStatus","test_fs","test_modal","dismissible","loadTest","startTime","timeline","changes","putOption","opt","undefined","prev","next","saveTestResults","downloadNews","news","authors","forEach","childSnapshot","content","indexOf","author","comments","unshift","getUser","user_data","newsData","last_update","comment_modal","commentText","commentPost","commEntryIdx","publishComment","comment","snap","ts","deleteComment","commentId","entryId","news_update","updateSunburst","Highcharts","chart","height","title","credits","enabled","plotOptions","series","events","click","event","updatePolarPlot","point","type","allowDrillToNode","cursor","dataLabels","property","operator","levels","level","levelIsConstant","colorIndex","colorByPoint","colorVariation","tooltip","headerFormat","pointFormat","currentNode","activities","score","currentActivityScores","points","subValue","z","parseInt","minPointSize","innerSize","zMin","updateProgressPlot","progressData","totalEvents","futureEvents","attendanceData","scores","asistencia","plotBorderWidth","pie","startAngle","endAngle","center","updateBarPlot","seriesData","drillDownData","drilldown","tempData","setOptions","lang","drillUpText","xAxis","yAxis","legend","borderWidth","drillUp","$","highcharts","updateAttendancePlot","categories","first","attendance","evCnt","evAtt","eventsAll","start","attendableEvents","activities_data","events_data","ev","userAttendedEvents","Object","getOwnPropertyNames","att","evaluator","viewModal","editModal","confirmDeleteModal","confirmMoveModal","refreshCalendar","fullCalendar","weekends","editable","allDaySlot","minTime","maxTime","timeFormat","dateFormat","slotLabelInterval","slotLabelFormat","header","eventSources","eventDrop","selectedEvent","_d","unix","end","info","selectedEventExtras","eventResize","eventClick","startDay","endTime","viewRender","view","element","confirmDeleteEvent","editEvent","newEvent","saveEvent","formStatus","deleteEvent","splice","moveEvent","durationEditable","pushFiles","folderName","uploadFiles","folderKey","fileList","uploadingFiles","fileListQueue","uploaded","downloads","res2","sources","files_modal","deleteFile","folder","fileKeyToDelete","fileToDelete","confirmDelete","confirm_delete_modal","err2","openImage","src","image_viewer_modal","openPdfViewer","pdfURL","pdf_viewer_modal","preventScrolling","folderList","Autocomplete","resetForm","selectedActivity","pushSubmission","reference","submissions","submCnt","pushFile","observs","activityId","activityName","partners","action","display","obs","submitSim","selectedSim","downloaded","subm","newStatus","openSimulation","viewSubm","submKeyView","submission_modal","evaluated","evaluatingKey","confirm_evaluate_modal","confirmEvaluate","toJson","deleteDBRef","submissions_data","users_data","sel","actIdx","findIndex","x","selectedIndex","includes","submit","simulations","sim","simObj","index","sim_sel","simIdx","initTester","tester","stopTester","running","animation","exporting","initAnalizer","addPoint","startChartUpdater","redraw","toggleStartStop","updateFields","getSimulations","load_modal","simulations_data","loadCircuit","model","simcir","clearDevices","showToolbox","clientWidth","clientHeight","toolbox","setupSimcir","currentSim","circuitFileName","saveCircuit","find","devices","connectors","save_modal","analizeCircuit","inputs","getExternalLabels","ioDevices","self","circuitDetails","deviceCnt","connectorCnt","truthTable","rows","expressions","canonMinTerm","canonMaxTerm","combMax","pow","minterms","maxterms","primeImplicants","minifiedExpresions","canonMinExpressions","canonMaxExpressions","getCanonicalExpressions","t","substring","results_modal","getBooleanExpressions","evalInput","inputBin","padStart","setInputStatus","getOutputStatus","selectToDelete","selected","delete_modal","deleteCircuit","onresize","w","el","getElementsByClassName","setAttribute","qmc","QuineMcCluskey","karnaugh","KarnaughMap","varsNum","showDCares","varNumChange","setNoOfVars","dCareChange","allowDontCares","selectedKey","showAll","orderTag","reverseOrder","changeOrder","tag","onInputDateChange","auxiliarySubmits","viewUser","getUserIndex","evalAttendance","selectUser","confirmEnrollModal","activitiesTree","enrollUser","user_private","evalUser","auxiliaryScores","removeEventListener","scoresModal","getCost","deleteSubmit","saveScores","obj","users_public_data","users_private_data","scatter_data","updateScoreBarPlot","excludeStat","round","updateTechPie","totalBr","totalOs","br","Firefox","Chrome","IE","Opera","Safari","Otro","Windows","Linux","IOS","Android","plotBackgroundColor","plotShadow","allowPointSelect","theme","contrastTextColor","connectorColor","updateMenuAccessPlot","itemCntr","home","dashboard","calendar","simulator","profile","categoriesData","items","min","align","labels","overflow","valueSuffix","bar","layout","verticalAlign","floating","backgroundColor","defaultOptions","shadow","updateScatterPlot","seriesData1","seriesData2","zoomType","startOnTick","endOnTick","showLastLabel","scatter","marker","radius","states","hover","lineColor","updateProfilesPlot","avgScales","dataCnt","stdScales","sqrt","updateLists","confirmModal","absents","presents","selectedEventKey","isPresent","isAbsent","saveList","today","nextKey","ref_","pieces_","subtitle","selectActivity","updateTree","destroy","container","hierarchical","direction","vis","Network","update_sunburst","apply","selectedHistory","selectedNode","selectPreviousActivity","pop","courseID","$$search","copy","childres","deleteCourseModal","deleteCourse","selectedCourseKey","selectedCourseIndex","courses","select","quilleditor","createElement","appendChild","quill","Quill","modules","toolbar","list","script","indent","background","imageResize","firstChild","order","updateTimestamp","deleteSelected","moveSelected","up","temp","saveSelected","scheduledNew","RegExp","reader","FileReader","onloadend","newAvatar","avatarFile","newProfilePic","readAsDataURL","uploadPic","saveForm","newData","getUserUID","partUid","updateNewData","edit","saveNewAvatar","avatarFilename","created","Tooltip","userList"],"mappings":"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","file":"main-063ce95fd7.js","sourcesContent":["window.Cipressus = (function () {\n    // Libreria para el control de la base de datos, storage, metodos utiles de la app y de comunicacion con hardware\n\n    var public = { // Instancia de la clase\n        globalTarget: null, // Este atributo se usa para poder acceder a variables desde la consola\n        db: {}, // Operaciones de base de datos\n        storage: {}, // Almacenamiento de archivos\n        users: {}, // Operaciones de autenticacion\n        hardware: {} // Metodos de control de hardware (probador de circuitos)\n    };\n\n    //// BASE DE DATOS /////\n\n    public.db.config = { // Configuracion de la base de datos\n        apiKey: \"AIzaSyAHpgtsZeQbcoCbKNE1dNjd7gUbSIFWz6M\",\n        authDomain: \"cipressus-0000.firebaseapp.com\",\n        databaseURL: \"https://cipressus-0000.firebaseio.com\",\n        projectId: \"cipressus-0000\",\n        storageBucket: \"cipressus-0000.appspot.com\",\n        messagingSenderId: \"927588929794\",\n        publicvapidkey: \"BF0sMjIt0y1H_3oyJzmkBmPkrG9UK7HL5ekgRXj50jEYc3MZSfpjCd051A0tNkNfEtLmmVlYILFvi8PQ0BDXRNM\"\n    };\n\n    public.db.listen = function (path, callback_success, callback_error) { // Escuchar cambios\n        firebase.database().ref(path).on('value',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.listenChild = function(path, child, value, callback_success, callback_error) { // Escucha cambios con filtro\n        firebase.database().ref(path).orderByChild(child).equalTo(value).on('child_added',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.stopListener = function(path){ // Detener escuchador\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).off()\n                .then(function () {\n                    return fulfill();\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.get = function (path) { // Descargar informacion de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot.val());\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.getSorted = function (path, key) { // Obtener lista ordenada por key\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.query = function(path, key, value) { // Consulta por valor\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).equalTo(value).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.set = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).set(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.update = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).update(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.push = function (data, path) { // Nueva entrada (retorna id)\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).push(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.pushMultiple = function (dataArray, path) { // Subir multiples entradas a un mismo directorio\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in dataArray) // Para cada objeto \n                job.push(firebase.database().ref(path).push(dataArray[k])); // TODO: usar multiples paths \n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot es un array que contiene los keys\n                    return fulfill(snapshot); // Del otro lado se puede hacer un for para retornar\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n\n    //// ALMACENAMIENTO ////\n\n    public.storage.put = function (file, path, filename) { // Subir archivo\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).put(file)\n                .then(function (snapshot) {\n                    var size = snapshot.totalBytes; // Tamanio de archivo\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill({\n                            size: size,\n                            url: url\n                        }); // Devolver tamanio y url del archivo\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putMultiple = function (files, path, filenames) { // Subir muchos archivos\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in files) // Para cada archivo                \n                job.push(firebase.storage().ref().child(path + \"/\" + filenames[k]).put(files[k]));\n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot devuelve las url de manera asincrona pero en este caso es un array\n                    var res = []; // Nuevamente generar promesas\n                    var sizes = []; // Lista de tamanios de archivos\n                    for (var k in snapshot) {\n                        sizes.push(snapshot[k].totalBytes);\n                        res.push(snapshot[k].ref.getDownloadURL());\n                    }\n                    Promise.all(res) // Ejecutar promise para obtener urls\n                        .then(function (results) { // Results es un array con los urls                    \n                            return fulfill({\n                                sizes: sizes,\n                                urls: results\n                            }); // Mandar tamanio y urls\n                        });\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putString = function (str, path, filename) { // Guardar string\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).putString(str)\n                .then(function (snapshot) {\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill(url); // Devolver url de descarga\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.delete = function (filename, path) { // Borrar un archivo de storage\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).delete()\n                .then(function () {\n                    return fulfill(\"Borrado: \" + path + \"/\" + filename);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n    //// USUARIOS /////\n\n    public.users.onUserSignedIn = function (uid) { // Overridable - inicio de sesion\n        console.log(\"default -- logged in \" + uid);\n    };\n\n    public.users.onUserSignedOut = function () { // Overridable - cierre de sesion\n        console.log(\"default -- logged out\");\n    };\n\n    public.users.signIn = function (form) { // Iniciar sesión\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/wrong-password':\n                            errorMessage = \"La contraseña es incorrecta.\";\n                            break;\n                        case 'auth/user-disabled':\n                            errorMessage = \"El usuario se haya inhabilitado momentáneamente.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Quizá esté mal escrito o no exista.\";\n                            break;\n                        case 'auth/user-not-found':\n                            errorMessage = \"El usuario no existe.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó.. revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    return fulfill(\"Logeado correctamente.\");\n                });\n        });\n    };\n\n    public.users.signOut = function () {\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signOut()\n                .then(function () {\n                    return fulfill(\"Ha salido de Cipressus.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n    public.users.signUp = function (form) { // Registrarse como nuevo usuario\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/weak-password':\n                            errorMessage = \"La contraseña es demasiado débil. Intenta con una más segura.\";\n                            break;\n                        case 'auth/email-already-in-use':\n                            errorMessage = \"Éste email ya existe en nuestra base de datos.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Revisa lo ingresado.\";\n                            break;\n                        case 'auth/operation-not-allowed':\n                            errorMessage = \"No se puede crear la cuenta para ese usuario. Ponete en contacto con los administradores.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó... revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    // Guardar informacion del usuario en la db\n                    var users_public = { // Informacion editable por usuarios\n                        activity: {\n                            last_login: Date.now(),\n                            browser: {}, // Contador de navegadores\n                            os: {} // Contador de sistemas operativos\n                        },\n                        name: form.name,\n                        secondName: form.secondName,\n                        email: form.email,\n                        degree: form.degree,\n                        lu: form.lu,\n                        avatar: \"images/robohashes/robohash\"+Math.floor(Math.random()*20+1)+\".png\" // Imagen de perfil aleatoria\n                    };\n                    // Inicializar contadores de navegador y so\n                    users_public.activity.browser[is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))))] = 1;\n                    users_public.activity.os[is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')))] = 1;\n\n                    public.db.set(users_public, 'users_public/' + result.user.uid)\n                        .then(function (res) {\n                            // #NOTIFICAR ADMINS\n                            return fulfill(\"Datos de nuevo usuario registrados.\");\n                        })\n                        .catch(function (err) {\n                            return reject([err, \"Ocurrió un problema al guardar los datos.\"]);\n                        });\n                });\n        });\n    };\n\n    public.users.resetPwd = function (email) { // Restablecer contrasenia\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().sendPasswordResetEmail(email)\n                .then(function () {\n                    return fulfill(\"Listo. Revisa tu correo electrónico.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n\n    ///// INICIALIZACION /////\n\n    public.initialize = function () { // Instrucciones de inicializacion de las utilidades        \n        return new Promise(function (fulfill, reject) {\n            firebase.initializeApp(public.db.config); // Inicializar base de datos\n\n            // Configurar mensajeria y notificaciones push\n            var messaging = firebase.messaging();\n            \n            messaging.usePublicVapidKey(public.db.config.publicvapidkey);\n            \n            messaging.requestPermission()\n                .then(function () {\n                    console.log('Permisos de notificación otorgados.');\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    console.log('No es posible habilitar notificaciones.');\n                });\n\n            /* Importar el script de notifications\n            firebase.notifications().onNotification((notification) => {\n                console.log('Notificacion: ',notification);\n                //firebase.notifications().displayNotification(notification);\n            });\n            */\n\n            messaging.onMessage(function(payload) {\n                console.log('Message received: ', payload);\n                // Mostrar notificacion popup\n                const opts = {\n                    body: 'Se actualizó tu calificación \"Informe laboratorio 1\"',\n                    icon: '/images/mainlogo.png',\n                    sound: '/sounds/notification.mp3' // No soportado\n                };\n                public.registration.showNotification(\"Cipressus\", opts);\n            });\n\n            messaging.getToken().then(function (currentToken) {\n                if (currentToken) \n                    console.log(\"Current token\", currentToken);\n                else \n                    console.log('No Instance ID token available. Request permission to generate one.');\n            }).catch(function (err) {\n                console.log('An error occurred while retrieving token. ', err);\n            });\n\n            messaging.onTokenRefresh(function () {\n                messaging.getToken().then(function (refreshedToken) {\n                    console.log('Token refreshed.');\n                    // Indicate that the new Instance ID token has not yet been sent to the\n                    // app server.\n                    //setTokenSentToServer(false);\n                    // Send Instance ID token to app server.\n                    //sendTokenToServer(refreshedToken);\n                    // ...\n                }).catch(function (err) {\n                    console.log('Unable to retrieve refreshed token ', err);\n                    showToken('Unable to retrieve refreshed token ', err);\n                });\n            });\n\n            navigator.serviceWorker.getRegistration().then(function(reg){\n                public.registration = reg; // Nuevo atributo\n                // messaging.useServiceWorker(reg); //\n            });\n\n            // Autenticacion\n            firebase.auth().onAuthStateChanged(function (user) { // Escuchar cambios de logeo de usuario\n                if (user) // El usuario esta logeado\n                    public.users.onUserSignedIn(user.uid); // Pasar uid a los callbacks\n                else // Si cerro sesión, se llama al callback\n                    public.users.onUserSignedOut();\n            });\n\n            return fulfill();\n        });\n    };\n\n    return public;\n})();","(function (public) { //// UTILIDADES ////\n\n    var actionStack = [];\n\n    public.utils = {};\n\n    public.utils.searchNode = function (node, id) { // Obtener el objeto de un nodo a partir del id\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = null;\n        if (node.id == id) // Coincidencia\n            return node;\n        else\n        if (node.children) // Si el nodo tiene hijos, recorrer buscando\n            for (var k in node.children) { // Para cada hijo del nodo\n                result = public.utils.searchNode(node.children[k], id); // Buscar\n                if (result)\n                    return result;\n            }\n        return result;\n    };\n\n    public.utils.defaultCostFunction = function (submitMs, deadlineMs, param) { // Funcion de costo por perdida de vencimiento de una actividad\n        // Entradas:\n        //\t\t- submitMs: es la fecha de entrega expresada en unix time\n        //\t\t- deadlineMs: es la fecha de vencimiento (debe ser menor que submitMs)\n        //\t\t- param: contiene el o los parametros de la funcion de costo (extender a vector si hace falta)\n        return Math.ceil((submitMs - deadlineMs) / 86400000) * param; // Desgaste lineal por dia\n    };\n\n    public.utils.eval = function (student, node) { // Computar nota de un alumno en puntaje absoluto\n        // Entradas:\n        //\t\t- student: contiene la informacion de entregas y notas asignadas por los profesores\n        //\t\t- node: es el nodo del arbol de actividades al que se le quiere calcular el puntaje total \n\n        if (node.children) { // Si el nodo tiene hijos, calcular suma ponderada de los hijos\n            var sum = 0; // Contador de puntajes\n            for (var k in node.children) // Para cada hijo del nodo\n                sum += public.utils.eval(student, node.children[k]); // Sumar nota obtenida de los hijos\n            if (node.deadline) // Si la actividad tiene fecha de vencimiento\n                if (student.submits) // Si el alumno tiene alguna entrega\n                    if (student.submits[node.id]) // Y si esta actividad ya fue entregada por el alumno y recibida por el profesor\n                        if (student.submits[node.id].submitted > node.deadline.date) { // Si se paso el vencimiento, hay que descontar puntos segun funcion de desgaste\n                            var cost = public.utils.defaultCostFunction(student.submits[node.id].submitted, node.deadline.date, node.deadline.param);\n                            if (cost > node.spublic) cost = node.spublic; // Habria que considerar la nota puesta\n                            sum -= cost; // Restar costo\n                            if (sum < 0) sum = 0; // La nota no puede ser negativa\n                        }\n            return sum;\n        } else { // Es hoja\n            if(student.spublics){ // Puede que no tenga ninguna calificacion aun\n                if (student.spublics[node.id]) // Si ya esta evaluado este campo\n                    return student.spublics[node.id].spublic * node.spublic / 100; // Retornar el valor de la nota multiplicado por el puntaje de la actividad\n                else\n                    return 0; // Si no tiene nota, devolver 0\n            }else{\n                return 0;\n            }\n        }\n    };\n\n    public.utils.getArray = function (root) { // Convertir el arbol en arreglo referenciado\n        // Sirve para exportar a formato de highcharts y para listar actividades en vista de alumnos\n\n        var getArrRec = function (node, arr, parent) { // Recorrido recursivo\n            if (node.children) {\n                for (var k in node.children) // Para cada hijo del nodo\n                    getArrRec(node.children[k], arr, node.id); // Obtener arreglo de los hijos\n                \n                arr.push({ // Agregar el nodo actual \n                    id: node.id,\n                    parent: parent, // Referencias hacia atras\n                    name: node.name,\n                    spublic: node.spublic, // Higcharts calcula este valor y por eso se llama value en las hojas\n                    dl: node.deadline // Vencimiento si existe\n                });\n            } else { // Es hoja, agregar hoja y retornar\n                arr.push({\n                    id: node.id,\n                    parent: parent,\n                    name: node.name,\n                    value: node.spublic, // Este dato lo usa highcarts (se calcula para los nodos padres)\n                    dl: node.deadline // Vencimiento si existe\n                });\n            }\n        }\n\n        var arr = [];\n\n        getArrRec(root, arr, ''); // Iniciar\n        \n        return arr;\n    };\n\n    public.utils.getTree = function(root){ // Obtener arbol como nodos y lazos\n        \n        var treeRec = function(tree, nodes, edges, color){ // Funcion recursiva para recorrer el arbol\n            \n            nodes.push({\n                id: tree.id,\n                label: tree.name+\"\\nPuntaje: \"+tree.spublic,\n                shape: \"box\",\n                color: color ? color : \"#555555\",                \n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            });\n\n            if(tree.children){ \n                var color = '#'+Math.floor(Math.random()*16777215).toString(16);\n                for(var k in tree.children){\n                    treeRec(tree.children[k], nodes, edges, color);\n                    edges.push({\n                        from: tree.id,\n                        to: tree.children[k].id\n                    });\n                }\n            }else{                \n                return;\n            }\n        };\n\n        // Hay que crear un nodo root con un solo children para que funcione con la libreria vis.js\n        var nodes = [\n            {\n                id: \"main\", \n                label: root.course.name.replace(/\\s/g,\"\\n\"),\n                shape: \"box\",\n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            }\n        ]; \n\n        var edges = [{from: \"main\", to: root.id}];\n\n        treeRec(root, nodes, edges); // Iniciar\n\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n\n    public.utils.sendEmail = function (data) { // Enviar email (requiere script php en hosting)\n        return new Promise(function (fulfill, reject) {\n            /*\n            var uriData = 'nombre=' + data.name + '&email=' + data.email + '&cc=' + data.cc.join() + '&asunto=' + data.subject + '&mensaje=' + data.message;\n            var ajax_url = 'https://cipressus.uns.edu.ar/mail.php';\n            var ajax_request = new XMLHttpRequest();\n            ajax_request.onreadystatechange = function () {\n                if (ajax_request.readyState === 4)\n                    return fulfill({\n                        response: ajax_request.responseText,\n                        type: \"success\",\n                        status: ajax_request.status\n                    });\n            };\n            try {\n                ajax_request.open(\"POST\", ajax_url, false);\n                ajax_request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                ajax_request.send(encodeURI(uriData));\n            } catch (err) {\n                return reject(err);\n            }\n            */\n            return reject(\"Email no implementado\");\n        });\n    };\n\n    public.utils.sendNotification = function (data) { // Enviar notificaciones por FCM\n        var xhr = new XMLHttpRequest();\n        var url = \"https://fcm.googleapis.com/fcm/send\";\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", \"key=AAAA1_ib0QI:APA91bHVFpFU4-CAibNhNmCriYbWcqbmhQuuCZa1sITD4BgF2wBBYZ8-WPc30NI0n_HfPFHEIzG1THqKgtWS8gd1bUROftZpW_o2OqBP64IgciaQMNnp4_nKU5vysZmAACjToKWFsPGe\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                var json = JSON.parse(xhr.responseText);\n                console.log(json);\n            }\n        };\n\n        /*var data = {\n            \"notification\": {\n                \"title\": \"Cipressus\",\n                \"body\": \"Hola mundo\",\n                \"icon\": \"images/mainlogo.png\"\n            },\n            \"to\": \"eY9vq-H4hws:APA91bHwMxWW5K6jEySnJGpkOEHc9RiY6aCjEUl1yK0xqf4LHeOmgGMUYlYlBYDiN7inFJjz1vMHeb3GGAg-yQPYJphveS_Q7q_i2JY1VKgSv7HqGMY3mUW4uKqph7NQt48b4KXyh5B-\" // Token que devuelve\n        };*/\n\n        var msg = JSON.stringify(data);\n        xhr.send(msg);\n    };\n\n    public.utils.generateFileName = function (len) { // Nombres aleatorios para archivos\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < len; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n\n    public.utils.quillToHTML = function (str) { // Hacer la adaptacion del formato quill al formato html de home\n        return str.replace(/ql-align-center/g, \"center-align\"); // Por ahora solo este, buscar otros\n    };\n\n    public.utils.activityCntr = function (userUid, item, param) { // Incrementador de contadores para monitoreo de actividad de usuarios\n        return new Promise(function (fulfill, reject) {\n            public.db.get(\"users_public/\" + userUid + \"/activity/items/\" + item)\n                .then(function (activity_data) {\n                    var data = {};\n                    if (activity_data) // Tiene valores en este item de actividad\n                        data[item] = activity_data + 1;\n                    else // Aun no registra actividad en este item\n                        data[item] = 1;\n                    var updates = {};\n                    updates[\"users_public/\" + userUid + \"/activity/items\"] = data; // Contadores\n                    if(param)\n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item+\"?id=\"+param; // Ultima vista\n                    else    \n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item; // Ultima vista\n                    public.db.update(updates)\n                        .then(function (res) {\n                            return fulfill(res);\n                        })\n                        .catch(function (err) {\n                            return reject(err);\n                        });\n                })\n                .catch(function (err) {\n                    return reject(err);\n                });\n        });\n    };\n\n    public.utils.logAction = function(actionMsg){ // Registra acciones del usuario localmente. Si ocurre error se guarda el registro en la db\n        actionStack.push({\n            msg: actionMsg,\n            timestamp: Date.now()\n        });\n    };\n\n    public.utils.logError = function(error){ // Registra error en db para llevar estadistica de funcionamiento\n        /* Formato:\n        error = {\n            source: [string], // Nombre del controller o libreria donde ocurre el error\n            line: [number], // Numero de linea del codigo donde se dispara el error\n            code: [string], // Si hay codigo de error disponible o mensaje (generado por librerias, dependencias, etc)\n            msg: [string], // Mensaje de error (redactado por programador)\n            uid: [string], // Usuario que genero ese error\n        }\n\n        Ejemplo (sin codigo de error):\n\n        var error = {\n            source: \"main.js\", \n            line: 54,  // TODO: generar automaticamente\n            msg: \"Error actualizando dato\", // Mensaje de error (redactado por programador)\n            uid: \"erfd6f7a8dfadyfgad\" // Usuario que genero ese error\n        }\n        Cipressus.utils.logError(error);\n        */\n\n        // Agregar un par de atributos automaticos\n        error.timestamp = Date.now(); // Hora local (usar de firebase?)\n\n        if(actionStack.length > 0) // Registro de acciones\n            error.stack = actionStack;\n\n        // Logear en firestore\n        public.db.push(error, \"errorLog\")\n        .then(function(){\n            actionStack = []; // Se reinicia la pila de acciones\n            console.log(\"Error reportado\");\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    public.utils.getPrimeImplicants = function (data) { // Obtener implicantes primos a partir de los miniterminos\n        // Autor del metodo: Janus Troelsen (https://gist.github.com/ysangkok/5707171)\n        /*\n        var minterms = ['1101', '1100', '1110', '1111', '1010', '0011', '0111', '0110'];\n        var minterms2 = ['0000', '0100', '1000', '0101', '1100', '0111', '1011', '1111'];\n        var minterms3 = ['0001', '0011', '0100', '0110', '1011', '0000', '1000', '1010', '1100', '1101'];\n        console.log( 'PI(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms)));\n        console.log( 'PI2(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms2)));\n        console.log( 'PI3(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms3)));\n        */\n\n        var combine = function (m, n) {\n            var a = m.length,\n                c = '',\n                count = 0,\n                i;\n            for (i = 0; i < a; i++) {\n                if (m[i] === n[i]) {\n                    c += m[i];\n                } else if (m[i] !== n[i]) {\n                    c += '-';\n                    count += 1;\n                }\n            }\n            if (count > 1)\n                return \"\";\n            return c;\n        };\n\n        var repeatelem = function (elem, count) {\n            var accu = [],\n                addOneAndRecurse = function (remaining) {\n                    accu.push(elem);\n                    if (remaining > 1) {\n                        addOneAndRecurse(remaining - 1);\n                    }\n                };\n            addOneAndRecurse(count);\n            return accu;\n        };\n\n        var newList = [].concat(data),\n            size = newList.length,\n            IM = [],\n            im = [],\n            im2 = [],\n            mark = repeatelem(0, size),\n            mark2, m = 0,\n            i, j, c, p, n, r, q;\n        for (i = 0; i < size; i++) {\n            for (j = i + 1; j < size; j++) {\n                c = combine(newList[i], newList[j]);\n                if (c !== \"\") {\n                    im.push(c);\n                    mark[i] = 1;\n                    mark[j] = 1;\n                }\n            }\n        }\n\n        mark2 = repeatelem(0, im.length);\n        for (p = 0; p < im.length; p++) {\n            for (n = p + 1; n < im.length; n++) {\n                if (p !== n && mark2[n] === 0 && im[p] === im[n]) {\n                    mark2[n] = 1;\n                }\n            }\n        }\n\n        for (r = 0; r < im.length; r++) {\n            if (mark2[r] === 0) {\n                im2.push(im[r]);\n            }\n        }\n\n        for (q = 0; q < size; q++) {\n            if (mark[q] === 0) {\n                IM.push(newList[q]);\n                m = m + 1;\n            }\n        }\n\n        if (m !== size && size !== 1)\n            IM = IM.concat(Cipressus.utils.getPrimeImplicants(im2));\n\n        IM.sort();\n        return IM;\n    };\n})(Cipressus);","(function (public) { ////// HARDWARE /////\n    var socket; // Objeto privado para comunicarse con el server\n    var timerId = null; // Timer para temporizar los llamados al socket\n    var serialPorts = []; // Lista de puertos serie disponibles (objeto privado)\n\n    public.hardware.initServer = function (params) { // Inicializar conexion con WebSocketServer      \n        /*\n            params: {\n                io: array con estados de entradas/salidas (para hacer binding con objetos de controllers)\n                sp: periodo de muestreo (ms) de envio de salidas\n                ci: periodo de intento de reconexion con server (ms)\n                onUpdate(): funcion que se llama en cada actualizacion de la entrada (para hacer apply por ej)\n            }\n        */\n\n        public.hardware.status = \"CONNECTING\"; // Inicialmente, el estado es de conectando (intenta cada tanto volver a abrir la conexion)\n        public.hardware.sample_period = params.sp; // Periodo de actualizacion de salidas\n        public.hardware.io = params.io; // Binding con view\n        public.hardware.onUpdate = params.onUpdate;\n\n        socket = new WebSocket(\"ws://localhost:8081\"); // Conectarse al server por web socket\n\n        socket.onerror = function (error) {\n            console.log(error);\n        };\n\n        socket.onopen = function () { // Puerto conectado\n            if (timerId) {\n                clearInterval(timerId);\n                timerId = null;\n            }\n            public.hardware.onSocketOpen(); // Ejecutar el callback\n        };\n\n        socket.onclose = function () { // Server no disponible (seguir intentando conectar)\n            if (public.hardware.status == \"CONNECTED\" || public.hardware.status == \"IDLE\") // Si la conexion con server estaba abierta significa que se cerro el server\n                public.hardware.status = \"CONNECTING\"; // Pasar a estado conectando\n            if (!timerId) {\n                timerId = setInterval(function () {\n                    socket = null;\n                    public.hardware.initServer(params);\n                }, params.ci);\n            }\n            public.hardware.onSocketClose(); // Ejecutar el callback\n        };\n\n        socket.onmessage = function (message) { // Respuesta del server\n            serialPorts = JSON.parse(message.data); // El primer mensaje que manda el server es la lista de puertos\n            public.hardware.status = \"IDLE\"; // Una vez que recibe la lista de puertos, espera conexion\n            socket.onmessage = function (message) { // Redefinir la funcion a partir de aqui                                        \n                for (var k = 0; k < 8; k++) // Debe mandar siempre un string de 8 caracteres \n                    public.hardware.io[k].input = (message.data[k] == \"1\"); // Configurar inputs segun caracter sea 1 o 0\n                public.hardware.onUpdate();\n            };\n        };\n    };\n\n    public.hardware.stopServer = function () { // Desconectarse del server (para liberar el uso de recursos)\n        public.hardware.status = \"DISCONNECTED\";\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n        }\n        socket.onclose = function () {}; // Borrar la funcion para que no se vuelva a conectar\n        socket.close();\n        socket = null;\n    };\n\n    public.hardware.ioUpdate = function () { // Envio de string al server para actualizar salidas\n        var outputs = \"\";\n        for (var k in public.hardware.io)\n            outputs += public.hardware.io[k].output ? \"1\" : \"0\";\n        socket.send(outputs);\n        if (public.hardware.status == \"CONNECTED\")\n            setTimeout(public.hardware.ioUpdate, public.hardware.sample_period);\n    };\n\n    public.hardware.connectTo = function (portIndex) { // Conectarse con un puerto de la lista    \n        if (serialPorts.length > 0) {\n            socket.send(portIndex); // Esto solo funciona mientras no se haya iniciado el streaming con el probador\n            public.hardware.status = \"CONNECTED\";\n            setTimeout(public.hardware.ioUpdate, 500); // Esperar 500ms e iniciar envio de comandos\n        } else\n            console.log(\"El listado de puertos no está disponible\");\n    };\n\n    public.hardware.getSerialPorts = function () { // Se puede pedir la lista de puertos en cualquier momento\n        return serialPorts; // Puede que un puerto ya no este disponible\n    };\n\n    public.hardware.onSocketOpen = function () { // Overridable - al conectarse con server\n        console.log(\"Socket abierto.\");\n    };\n\n    public.hardware.onSocketClose = function () { // Overridable - cuando se detiene el server\n        console.log(\"Socket cerrado.\");\n    }\n})(Cipressus);","(function (public) { ///// Test Felder-Silverman de estilos de aprendizaje\n    public.test_FS = {\n        questions: [{\n                text: \"Entiendo mejor algo\",\n                options: [\"si lo practico.\", \"si pienso en ello.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"realista.\", \"innovador.\"]\n            },\n            {\n                text: \"Cuando pienso acerca de lo que hice ayer, es más probable que lo haga sobre la base de\",\n                options: [\"una imagen.\", \"palabras.\"]\n            },\n            {\n                text: \"Tengo tendencia a\",\n                options: [\"entender los detalles de un tema pero no ver claramente su estructura completa\", \"entender la estructura completa pero no ver claramente los detalles.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo algo nuevo, me ayuda\",\n                options: [\"hablar de ello.\", \"pensar en ello.\"]\n            },\n            {\n                text: \"Si yo fuera profesor, yo preferiría dar un curso\",\n                options: [\"que trate sobre hechos y situaciones reales de la vida.\", \"que trate con ideas y teorías.\"]\n            },\n            {\n                text: \"Prefiero obtener información nueva de\",\n                options: [\"imágenes, diagramas, gráficas o mapas.\", \" instrucciones escritas o información verbal.\"]\n            },\n            {\n                text: \"Una vez que entiendo\",\n                options: [\"todas las partes, entiendo el total.\", \"el total de algo, entiendo como encajan sus partes.\"]\n            },\n            {\n                text: \"En un grupo de estudio que trabaja con un material difícil, es más probable que\",\n                options: [\"participe y contribuya con ideas.\", \"no participe y solo escuche.\"]\n            },\n            {\n                text: \"Es más fácil para mí\",\n                options: [\"aprender hechos.\", \"aprender conceptos.\"]\n            },\n            {\n                text: \"En un libro con muchas imágenes y gráficas es más probable que\",\n                options: [\"revise cuidadosamente las imágenes y las gráficas.\", \" me concentre en el texto escrito.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas de matemáticas\",\n                options: [\"generalmente trabajo sobre las soluciones con un paso a la vez.\", \"frecuentemente sé cuales son las soluciones, pero luego tengo dificultad para imaginarme los pasos para llegar a ellas.\"]\n            },\n            {\n                text: \"En las clases a las que he asistido\",\n                options: [\"he llegado a saber como son muchos de los estudiantes.\", \"raramente he llegado a saber como son muchos estudiantes.\"]\n            },\n            {\n                text: \"Cuando leo temas que no son de ficción, prefiero\",\n                options: [\"algo que me enseñe nuevos hechos o me diga como hacer algo.\", \"algo que me dé nuevas ideas en que pensar.\"]\n            },\n            {\n                text: \"Me gustan los maestros\",\n                options: [\"que utilizan muchos esquemas en el pizarrón.\", \"que toman mucho tiempo para explicar.\"]\n            },\n            {\n                text: \"Cuando estoy analizando un cuento o una novela\",\n                options: [\"pienso en los incidentes y trato de acomodarlos para configurar los temas.\", \"me doy cuenta de cuales son los temas cuando termino de leer y luego tengo que regresar y encontrar los incidentes que los demuestran.\"]\n            },\n            {\n                text: \"Cuando comienzo a resolver un problema de tarea, es más probable que\",\n                options: [\"comience a trabajar en su solución inmediatamente.\", \"primero trate de entender completamente el problema.\"]\n            },\n            {\n                text: \"Prefiero la idea de\",\n                options: [\"certeza.\", \"teoría.\"]\n            },\n            {\n                text: \"Recuerdo mejor\",\n                options: [\"lo que veo.\", \"lo que oigo.\"]\n            },\n            {\n                text: \"Es más importante para mí que un profesor\",\n                options: [\"exponga el material en pasos secuenciales claros.\", \"me dé un panorama general y relacione el material con otros temas.\"]\n            },\n            {\n                text: \"Prefiero estudiar\",\n                options: [\"en un grupo de estudio.\", \"solo.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"cuidadoso en los detalles de mi trabajo.\", \"creativo en la forma en la que hago mi trabajo.\"]\n            },\n            {\n                text: \"Cuando alguien me da direcciones de nuevos lugares, prefiero\",\n                options: [\"un mapa.\", \"instrucciones escritas.\"]\n            },\n            {\n                text: \"Aprendo\",\n                options: [\"a un paso constante. Si estudio con ahínco consigo lo que deseo.\", \"en inicios y pausas. Me llego a confundir y súbitamente lo entiendo.\"]\n            },\n            {\n                text: \"Prefiero primero\",\n                options: [\"hacer algo y ver que sucede.\", \"pensar como voy a hacer algo.\"]\n            },\n            {\n                text: \"Cuando leo por diversión, me gustan los escritores que\",\n                options: [\"dicen claramente los que desean dar a entender.\", \"dicen las cosas en forma creativa e interesante.\"]\n            },\n            {\n                text: \"Cuando veo un esquema o bosquejo en clase, es más probable que recuerde\",\n                options: [\"la imagen.\", \"lo que el profesor dijo acerca de ella.\"]\n            },\n            {\n                text: \"Cuando me enfrento a un cuerpo de información\",\n                options: [\"me concentro en los detalles y pierdo de vista el total de la misma.\", \"trato de entender el todo antes de ir a los detalles.\"]\n            },\n            {\n                text: \"Recuerdo más fácilmente\",\n                options: [\"algo que he hecho.\", \"algo en lo que he pensado mucho.\"]\n            },\n            {\n                text: \"Cuando tengo que hacer un trabajo, prefiero\",\n                options: [\"dominar una forma de hacerlo.\", \"intentar nuevas formas de hacerlo.\"]\n            },\n            {\n                text: \"Cuando alguien me enseña datos, prefiero\",\n                options: [\"gráficas.\", \"resúmenes con texto.\"]\n            },\n            {\n                text: \"Cuando escribo un trabajo, es más probable que\",\n                options: [\"lo haga (piense o escriba) desde el principio y avance.\", \" lo haga (piense o escriba) en diferentes partes y luego las ordene.\"]\n            },\n            {\n                text: \"Cuando tengo que trabajar en un proyecto de grupo, primero quiero\",\n                options: [\"realizar una 'tormenta de ideas' donde cada uno contribuye con ideas.\", \"realizar la 'tormenta de ideas' en forma personal y luego juntarme con el grupo para comparar las ideas.\"]\n            },\n            {\n                text: \"Considero que es mejor elogio llamar a alguien\",\n                options: [\"sensible.\", \"imaginativo.\"]\n            },\n            {\n                text: \"Cuando conozco gente en una fiesta, es más probable que recuerde\",\n                options: [\"cómo es su apariencia.\", \"lo que dicen de sí mismos.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo un tema, prefiero\",\n                options: [\"mantenerme concentrado en ese tema, aprendiendo lo más que pueda de él.\", \"hacer conexiones entre ese tema y temas relacionados.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"abierto.\", \"reservado.\"]\n            },\n            {\n                text: \"Prefiero cursos que dan más importancia a\",\n                options: [\"material concreto (hechos, datos).\", \" material abstracto (conceptos, teorías).\"]\n            },\n            {\n                text: \"Para divertirme, prefiero\",\n                options: [\"ver televisión.\", \"leer un libro.\"]\n            },\n            {\n                text: \"Algunos profesores inician sus clases haciendo un bosquejo de lo que enseñarán. Esos bosquejos son\",\n                options: [\"algo útiles para mí.\", \"muy útiles para mí.\"]\n            },\n            {\n                text: \"La idea de hacer una tarea en grupo con una sola calificación para todos\",\n                options: [\"me parece bien.\", \"no me parece bien.\"]\n            },\n            {\n                text: \"Cuando hago grandes cálculos\",\n                options: [\"tiendo a repetir todos mis pasos y revisar cuidadosamente mi trabajo.\", \"me cansa hacer su revisión y tengo que esforzarme para hacerlo.\"]\n            },\n            {\n                text: \"Tiendo a recordar lugares en los que he estado\",\n                options: [\"fácilmente y con bastante exactitud.\", \"con dificultad y sin mucho detalle.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas en grupo, es más probable que yo\",\n                options: [\"piense en los pasos para la solución de los problemas.\", \"piense en las posibles consecuencias o aplicaciones de la solución en un amplio rango de campos.\"]\n            }\n        ],\n        evalMatrix: [ // Puntajes: evalMatrix[escala][pregunta][opcion]\n            [\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Act\n            [\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Refl\n            [\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0]\n            ], // Sens\n            [\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0]\n            ], // Int\n            [\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0]\n            ], // Vis\n            [\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0]\n            ], // Ver\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0]\n            ], // Sec\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1]\n            ] // Glo\n        ],\n        profileDesc: [\n            [\n                \"Aprende por interacción directa con el material de estudio. Prefiere la comunicación visual.\", // Activo\n                \"Le gusta reflexionar sobre el material de estudio. Prefiere el trabajo individual y comunicación grupal mínima.\" // Reflexivo\n            ],\n            [\n                \"Detallista y práctico con preferencia por hechos concretos y aplicaciones del mundo real.\", // Sensitivo\n                \"Creativo y se siente atraído por el contenido teórico y abstracto.\" // Intuitivo\n            ],\n            [\n                \"Recuerda fácilmente imágenes que se le presenta (gráficos, fotos, esquemas, etc.).\", // Visual   \n                \"Recuerda fácilmente frases escritas o habladas.\" // Verbal\n            ],\n            [\n                \"Prefiere aprender de manera lineal, mediante secuencia de pasos lógicos.\", // Secuencial\n                \"Prefiere que se le presente un esquema general y luego aprende y entiende las partes por separado sin seguir un orden específico.\" // Global\n            ],\n        ],\n        eval: function (answers) { // Computo de escalas (metodo general escalas PsiMESH [http://www.psimesh.com])\n            var var_sum = []; // Arreglo de puntajes sumados para cada escala\n            for (var vble = 0; vble < 8; vble++) {\n                var sum = []; // Arreglo con valores de puntajes de cada resepuesta\n                for (var quest in answers) // Para cada pregunta\n                    sum[quest] = this.evalMatrix[vble][quest][answers[quest]]; // Puntaje que otorga cada pregunta a la escala actual\n                var_sum[vble] = sum.reduce(function(a, b){return a + b}, 0); // Sumar arreglo de puntajes de la escala actual\n            }\n            var scales = [];\n            for (var sc = 0; sc < 8; sc += 2)\n                scales[sc / 2] = var_sum[sc + 1] - var_sum[sc];\n            return scales;\n        }\n    }\n})(Cipressus);","var app = angular.module('cipressus', ['ngRoute', 'ngSanitize','LocalStorageModule'])\n.config([\"$routeProvider\",function ($routeProvider) {\n    $routeProvider\n        .when(\"/\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/home\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/login\", {\n            templateUrl: \"views/login.html\",\n            controller: \"login\"\n        })\n        .when(\"/dashboard\", {\n            templateUrl: \"views/dashboard.html\",\n            controller: \"dashboard\"\n        })\n        .when(\"/calendar\", {\n            templateUrl: \"views/calendar.html\",\n            controller: \"calendar\"\n        })\n        .when(\"/sources\", {\n            templateUrl: \"views/sources.html\",\n            controller: \"sources\"\n        })\n        .when(\"/submissions\", {\n            templateUrl: \"views/submissions.html\",\n            controller: \"submissions\"\n        })\n        .when(\"/hardware\", {\n            templateUrl: \"views/hardware.html\",\n            controller: \"hardware\"\n        })\n        .when(\"/analizer\", {\n            templateUrl: \"views/analizer.html\",\n            controller: \"analizer\"\n        })        \n        .when(\"/simulator\", {\n            templateUrl: \"views/simulator.html\",\n            controller: \"simulator\"\n        })\n        .when(\"/kMaps\", {\n            templateUrl: \"views/kMaps.html\",\n            controller: \"kMaps\"\n        })\n        .when(\"/tables\", {\n            templateUrl: \"views/tables.html\",\n            controller: \"tables\"\n        })\n        .when(\"/users\", {\n            templateUrl: \"views/users.html\",\n            controller: \"users\"\n        })\n        .when(\"/stats\", {\n            templateUrl: \"views/stats.html\",\n            controller: \"stats\"\n        })\n        .when(\"/attendance\", {\n            templateUrl: \"views/attendance.html\",\n            controller: \"attendance\"\n        })\n        .when(\"/activities\", {\n            templateUrl: \"views/activities.html\",\n            controller: \"activities\"\n        })\n        .when(\"/courses\", {\n            templateUrl: \"views/courses.html\",\n            controller: \"courses\"\n        })\n        .when(\"/editor\", {\n            templateUrl: \"views/editor.html\",\n            controller: \"editor\"\n        })\n        .when(\"/profile\", {\n            templateUrl: \"views/profile.html\",\n            controller: \"profile\"\n        });\n}])\n.filter('trusted', ['$sce', function ($sce) {\n    // Ver: https://stackoverflow.com/questions/39480969/angular-interpolateinterr-error-when-adding-url-from-variable\n    return $sce.trustAsResourceUrl;\n }])\n.config(['$locationProvider', function($locationProvider) {\n    // Ver: https://stackoverflow.com/questions/41272314/angular-all-slashes-in-url-changed-to-2f\n    $locationProvider.hashPrefix('');\n  }])\n.run([\"$rootScope\", \"$location\", function ($rootScope, $location) {\n\n    $rootScope.loading = true; // Preloader\n    $rootScope.userLogged = false; // Indicador de usuario logeado para habilitar componentes de ventana\n    $location.path(\"/login\"); // Ir a vista de logeo #TODO: cambiar modelo por uno que admita acceso sin login\n    $rootScope.bodyClass = \"\"; // Clase del body (para poner fondos)\n    $rootScope.notifications = []; // Lista de notificaciones del usuario\n    $rootScope.notifCnt = 0; // Contador de notificaciones sin leer\n\n    // Configuracion de moment.js\n    moment.locale('es', {\n        relativeTime : {\n            future: \"dentro de %s\",past: \"hace %s\",s: \"pocos segundos\",ss: \"%d segundos\",m: \"un minuto\",mm: \"%d minutos\",\n            h: \"una hora\",hh: \"%d horas\",d: \"un día\",dd: \"%d días\",M: \"un mes\",MM: \"%d meses\",y: \"un año\",yy: \"%d años\"\n        }\n    });\n\n    //// Utilidades ////\n    $rootScope.greetings = function(){ // Retorna saludo de bienvenida\n        var split_afternoon = 12;\n        var split_evening = 19; \n        var currentHour = parseFloat(moment().format(\"HH\"));\n        if(currentHour >= split_afternoon && currentHour <= split_evening)\n            return \"Buenas tardes\";\n        else if(currentHour >= split_evening)\n            return \"Buenas noches\";\n        else\n            return \"Buenos días\";\n    };\n\n    $rootScope.getTime = function(code,stamp){ // Para ejecutar moment en view\n        var time;\n        switch(code){\n            case 0: // Estampa de tiempo en view\n                time = Date.now();\n                break;\n            case 1: // Fecha y hora actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 2: // Solo fecha actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY\");\n                break;\n            case 3: // Fecha y hora de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 4: // Solo fecha de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY\");\n                break;\n            case 5: // Relativo al actual\n                time = moment(stamp).fromNow();\n                break;\n            case 6: // Fecha corta y hora\n                time = moment(stamp).format(\"DD/MM HH:mm\");\n                break;\n            default:\n                time = null;\n        }\n        return time;\n    };\n\n    $rootScope.getUserNames = function (users, userUids) { // Devuelve los apellidos de los usuarios cuyos uid se pasa como arreglo\n        if (users) { // Se puede llamar a esta funcion cuando aun no hay datos porque se ejecuta en view\n            var names = [];\n            for (var k in userUids)\n                names.push(users[userUids[k]].secondName);\n            return names.join(\", \"); // Apellidos separados por coma\n        }\n    };\n\n    $rootScope.readableFileSize = function(bytes, si) { // Devuelve tamanio de archivo en formato legible\n        var thresh = si ? 1000 : 1024;\n        if(Math.abs(bytes) < thresh) {\n            return bytes + ' B';\n        }\n        var units = si\n            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n        var u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while(Math.abs(bytes) >= thresh && u < units.length - 1);\n        return bytes.toFixed(1)+' '+units[u];\n    };\n\n    $rootScope.openNotification = function(idx){ // Abrir enlace de notificacion y marcar leida\n        if(!$rootScope.notifications[idx].read){ // Si no estaba leida, cambiar estado\n            $rootScope.notifications[idx].read = true;\n            $rootScope.notifCnt--; // Descontar contador\n            Cipressus.db.update({read:true},\"notifications/\"+$rootScope.notifications[idx].key); // Actualizar en db\n        }\n        if($rootScope.notifications[idx].link) // Si tiene un enlace, abrir\n            $location.path($rootScope.notifications[idx].link);\n    };\n\n    // Inicializacion componentes de materialize\n    $rootScope.sidenav = M.Sidenav.init(document.querySelector('.sidenav'), {\n        side: \"left\", \n        inDuration:400,  \n    });\n\n    M.Collapsible.init(document.querySelector('.collapsible_1'));\n    M.Collapsible.init(document.querySelector('.collapsible_2'));\n    M.Collapsible.init(document.querySelector('.collapsible_3'));\n    \n    M.Modal.init(document.getElementById(\"about_modal\"),{});\n    var usb_modal = M.Modal.init(document.getElementById(\"usb_modal\"),{});\n    var help_modal = M.Modal.init(document.getElementById(\"help_modal\"),{});\n\n    window.addEventListener(\"resize\", function(){\n        if($rootScope.resizeEvent)\n            $rootScope.resizeEvent()\n    });\n\n    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\n\n    $rootScope.signOut = function(){ // Callback para el boton de salir\n        $location.path(\"/login\"); // #TODO: navigation no debe forzar ir a login\n        $rootScope.userLogged = false;\n        Cipressus.users.signOut()\n        .then(function(res){\n            console.log(res);\n            $rootScope.user = null;\n            M.toast({html: \"Hasta pronto!\",classes: 'rounded green darken-3',displayLength: 1500});\n        })\n        .catch(function(err){\n            console.log(err[0]);\n            M.toast({html: err[1],classes: 'rounded green darken-3',displayLength: 1500});\n        });\n    };\n\n    $rootScope.sendHelp = function(){ // Enviar mensaje de ayuda a los usuarios administradores\n        // #TODO: enviar email con el mensaje de auyda\n        console.log($rootScope.helpMessage);\n        M.toast({html: \"Listo! Te enviaremos una respuesta\",classes: 'rounded green darken-3',displayLength: 2500});\n        help_modal.close();\n    };\n\n    Cipressus.users.onUserSignedIn = function(uid){ // Cuando el usuario se logea o si estaba logeado al actualizar pagina\n        $rootScope.loading = true;\n        Cipressus.db.get('users_public/'+uid) // Descargar datos publicos de usuario\n        .then(function(public_data){\n            $rootScope.user = public_data;\n            $rootScope.user.uid = uid;\n            $rootScope.notifications = []; // Lista de notificaciones del usuario (reinicio del arreglo)\n            $rootScope.notifCnt = 0; // Reiniciar contador de notificaciones no leidas\n            Cipressus.db.get('users_private/'+uid) // Descargar informacion dde usuario para el sistema\n            .then(function(private_data){\n                if(private_data){ // Usuario aceptado por admin\n                    $rootScope.user.admin = private_data.admin;\n                    // #TODO: enrolled y course deberia ser lo mismo\n                    $rootScope.user.enrolled = private_data.enrolled;\n                    $rootScope.user.course = private_data.course;\n                }else{ // Usuario visitante\n                    $rootScope.user.admin = false;\n                    $rootScope.user.enrolled = null;\n                    $rootScope.user.course = null;\n                }\n\n                // Monitoreo de actividad\n                var browser = is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))));\n                var OS = is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')));\n                var update_activity = public_data.activity; // Variable de monitoreo de actividad\n                if(!update_activity)\n                    update_activity = {\n                        browser: {},\n                        os: {},\n                        last_login: 0\n                    }\n                update_activity.last_login = Date.now();\n                if(update_activity.browser){ // Esta registrado la variable de navegador?\n                    if(update_activity.browser[browser]) // Contar si existe\n                        update_activity.browser[browser]++;\n                    else // Si es la primera vez que usa este navegador, iniciar\n                        update_activity.browser[browser] = 1;\n                }else{ // Si no tiene variable de navegadores, inicializar\n                    update_activity.browser = {};\n                    update_activity.browser[browser] = 1;\n                }\n                if(update_activity.os){ // Puede que no este registrado este campo\n                    if(update_activity.os[OS]) // Verificar si tiene este os contado\n                        update_activity.os[OS]++; \n                    else // Si no tiene el os, inicializar\n                        update_activity.os[OS] = 1;                \n                }else{\n                    update_activity.os = {};\n                    update_activity.os[OS] = 1;\n                }\n                \n                Cipressus.db.update(update_activity,'users_public/'+uid+'/activity').then(function(res){console.log(\"Actividad actualizada\")}); // Actualizar logeo y dispositivo usado\n\n                // Inicializar escuchador de notificaciones\n                Cipressus.db.listenChild(\"notifications\", \"uid\", uid,\n                function(data, key){\n                    data.key = key; // Copiar id de la notificacion para actualizar estado\n                    $rootScope.notifications.push(data);\n                    if(!data.read)\n                        $rootScope.notifCnt++;\n                    $rootScope.$apply();\n                },\n                function(err){\n                    console.log(err);\n                });\n\n                if($location.path() == \"/login\"){ // Si se acaba de logear en la vista de login\n                    if($rootScope.user.lastView){ // Si tiene guardado la ultima vista que uso\n                        var route = $rootScope.user.lastView.split(\"?id=\"); // Obtener parametros\n                        if(route.length > 1) // Si hay parametros, abrir vista y pasar argumento\n                            $location.path(\"/\"+route[0]).search({id:route[1]});\n                        else // Si no tiene parametros, abrir vista sola\n                            $location.path(\"/\"+route[0]);\n                    }else // Si no hay vista, ir a home\n                        $location.path(\"/\"); \n                    $rootScope.bodyClass = \"\";\n                }\n                $rootScope.userLogged = true;\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    Cipressus.users.onUserSignedOut = function(){ // Cuando cierra la sesion (puede ser desde otro lugar)\n        $rootScope.sidenav.close();\n        $rootScope.userLogged = false;\n        $location.path(\"/login\"); // #TODO: Ir a vista de login?\n        $rootScope.loading = false; // Preloader\n        $rootScope.$apply();\n    };\n\n    Cipressus.initialize() // Inicializar libreria principal de la app\n    .then(function(){ // Inicializacion exitosa\n        console.log(\"Cipressus inicializado.\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    })\n    .catch(function(){ // Error en inicializacion\n        console.log(\"Error de incialización de Cipressus\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    });  \n\n\n\n    /////// Funciones para conexion con websocket server ///////\n    Cipressus.hardware.status = \"DISCONNECTED\";\n    $rootScope.usbStatus = \"DISCONNECTED\"; // Esto es copia del status anterior, pero para no hacer binding\n    $rootScope.wssIconColor = 'red-text'; // Color del icono\n\n    // Callbacks de estado de conexion con probador para que las vistas ejecuten acciones\n    $rootScope.onWssConnect = function(){};\n    $rootScope.onWssDisconnect = function(){};\n\n    var hardwareConfig = { // Configuracion de la interface con probador        \n        io:[ // Se redefine en cada vista que use el probador\n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true}, \n            {output: false, input: true}, \n            {output: false, input: false}, \n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true},\n        ],\n        ci: 5000, // Tiempo de espera para reconexion con server\n        sp: 50, // Intervalo de actualizacion de salidas\n        onUpdate:function(){} // Funcion a ejecutar cuando se actualizan las entradas\n    };\n\n    Cipressus.hardware.onSocketClose = function(){ // Definir funcion a ejecutar si se cierra la conexion con el server (cuando se cierra el server de node)\n        // Este callback no se ejecuta si se desconecta el server desde esta misma app (con disconnectFromServer())\n        console.log(\"Socket cerrado. Reconectando...\");\n        //M.toast({html: \"Reconectando con Web Socket...\",classes: 'rounded red',displayLength: 2000});        \n        M.toast({html: \"Reconectando con server...\",classes: 'rounded blue darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"CONNECTING\";\n        $rootScope.wssIconColor = 'blue-text'; // Color del icono    \n        $rootScope.$apply();        \n    };\n\n    Cipressus.hardware.onSocketOpen = function(){ // Esto se ejecuta al iniciarse la conexion con el server\n        console.log(\"Socket abierto.\");\n        $rootScope.usbStatus = 'IDLE'; // Habilitar boton de conectar\n        $rootScope.wssIconColor = 'yellow-text'; // Color del icono\n        $rootScope.$apply();        \n        \n        M.toast({html: \"Server conectado\",classes: 'rounded blue darken-3',displayLength: 2000});\n        setTimeout(function(){ // Espera a que se envie la lista de puertos serie\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();        \n            $rootScope.$apply();\n            M.FormSelect.init(document.querySelectorAll('select'), {});            \n            M.toast({html: \"Puertos disponibles\",classes: 'rounded green darken-3',displayLength: 2000});\n        },500);\n    };\n\n    $rootScope.openUSBModal = function(){\n        if(Cipressus.hardware.status == \"IDLE\"){ // Si esta esperando puerto, actualizar lista de puertos\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();    \n            M.FormSelect.init(document.querySelectorAll('select'), {}); // Si es default-browser no se si hace falta correr esto           \n        }   \n        usb_modal.open();\n    };\n\n    $rootScope.connectToServer = function(){ // Abrir conexion con server\n        if(Cipressus.hardware.status == \"DISCONNECTED\") // Solo si esta desconectado\n            Cipressus.hardware.initServer(hardwareConfig); \n    };\n\n    $rootScope.disconnectFromServer = function(){ // Cerrar la conexion con el server\n        Cipressus.hardware.stopServer();\n        $rootScope.enableConnect = false; // Habilitar boton de conectar\n        M.toast({html: \"Server desconectado\",classes: 'rounded green darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"DISCONNECTED\";\n        $rootScope.wssIconColor = 'red-text'; // Color del icono\n        $rootScope.onWssDisconnect(); // Ejecutar callback que despues emplean las vistas\n        usb_modal.close();\n    };\n\n    $rootScope.connectToSerialPort = function(){ // Cuando se elige dispositivo y se presiona \"conectar\"\n        Cipressus.hardware.connectTo(document.getElementById(\"portSelect\").value); // Port Connection Request                \n        $rootScope.usbStatus = \"CONNECTED\";\n        $rootScope.wssIconColor = 'green-text'; // Color del icono\n        $rootScope.onWssConnect(); // Ejecutar callback que despues emplean las vistas\n        M.toast({html: \"Probador conectado!\",classes: 'rounded green darken-3',displayLength: 2000});\n        usb_modal.close();\n    }; \n    \n    ///////////\n\n\n\n\n    /////// PWA ///////\n\n    // #TODO: agregar boton para permitir instalar aunque haya cancelado la primera vez\n\n    var isInStandaloneMode = function() { return ('standalone' in window.navigator) && (window.navigator.standalone); };\n    \n    if (is.ios() && !isInStandaloneMode()) {\n       this.setState({ showInstallMessage: true });\n    }\n\n    window.addEventListener('beforeinstallprompt', function(e) {\n        e.userChoice.then(function(choiceResult) {\n            console.log(choiceResult.outcome);\n            if(choiceResult.outcome == 'dismissed') {\n                console.log('User cancelled home screen install');\n            }\n            else {\n                console.log('User added to home screen');\n            }\n        });\n    });\n}]);","app.directive(\"testResults\",function(){ // Evalua el test de Felder-Silverman\n    return {\n        restrict: 'E',\n        templateUrl : function() {\n            return \"views/testResults.html\";\n        },\n        scope: {\n            answers: '@'\n        },\n        link: function(scope){\n            scope.$watch('answers', function () {   \n                if (scope.answers){\n                    var scales = Cipressus.test_FS.eval(JSON.parse(scope.answers)); // Toma la funcion de la libreria\n                    for (var k = 0; k < 4; k++) {\n                        var elem = document.getElementById(\"scale_\" + k);\n                        var width = Math.abs(scales[k]) * 50 / 11;\n                        elem.style.width = width + '%';\n                        if (scales[k] < 0) {\n                            elem.style.marginLeft = 50 - width + '%';\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\n                        } else {\n                            elem.style.marginLeft = \"50%\";\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\n                        }\n                        elem.innerHTML = Math.abs(scales[k]);\n                    }\n                }    \n            }, true);\n        }\n    };\n});\n    ","app.controller(\"login\", ['$scope', '$rootScope', function ($scope, $rootScope) {\n\n    $scope.keypressed = function (code) { // Al oprimir enter hacer login con los datos de autenticacion\n        if (code === 13) // Verificar codigo de tecla\n            $scope.btn_click();\n    };\n\n    $scope.loginAttempt = function () { // Intentar logear usuario\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            $rootScope.loading = true;\n            Cipressus.users.signIn($scope.userForm).then(function (res) {\n                console.log(res);                \n                setTimeout(function(){\n                    if($rootScope.user) // Si ya se realizo el chequeo y descarga de datos\n                        M.toast({\n                            html: $rootScope.greetings()+\" \"+$rootScope.user.name+\"!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 5000\n                        });\n                },2000);\n                $rootScope.$apply();\n            }).catch(function (err) {                \n                $scope.userForm.password = null;\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            });\n        } else {\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.retrievePassword = function () {\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            Cipressus.users.resetPwd($scope.userForm.email).then(function (res) {\n                console.log(res);\n                M.toast({\n                    html: \"Listo! Te enviamos el formulario a tu correo electrónico\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2500\n                });\n            }).catch(function (err) {\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n            });\n        }else{\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.registerNewUser = function () {\n        var formOk = false; // Chequeo de formulario\n        if (typeof($scope.userForm) != 'undefined'){ // Al menos un dato\n            $scope.userForm.degree = document.getElementById(\"degreeSelect\").value; // No funciona el ng-model\n            if($scope.userForm.name != \"\" && $scope.userForm.secondName != \"\" && typeof($scope.userForm.lu) != 'undefined' && $scope.userForm.degree != \"\") // Chequeo de campos\n                formOk = true;\n        }\n        if (formOk) { // Registrar usuario\n            if($scope.userForm.password == $scope.passwordConfirm){ // Contraseñas ingresadas deben coincidir\n                Cipressus.users.signUp($scope.userForm).then(function (res) {\n                    console.log(res);\n                    M.toast({\n                        html:  $rootScope.greetings()+\" \"+$scope.userForm.name+\"!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                }).catch(function (err) {\n                    console.log(err[0]);\n                    M.toast({\n                        html: err[1],\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                });\n            }else{ // Si no coinciden, avisar\n                console.log(\"Confirmación de contraseña fallida\");                \n                M.toast({\n                    html: \"Verificación de contraseña incorrecto!\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            }\n        }else{ \n            console.log(\"Formulario incompleto\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.updateButtons = function () { // De acuerdo al modo, cambia el texto de los botones y los callbacks\n        switch ($scope.login_mode) {\n            case 0: // login\n                $scope.btn_text = \"Iniciar sesión\";\n                $scope.menu_left = \"Registrarse\";\n                $scope.menu_right = \"¿Olvidó su contraseña?\";\n                $scope.btn_click = $scope.loginAttempt;\n                $scope.welcomeText = \"Iniciar sesión en \";\n                break;\n            case 1: // registro\n                $scope.btn_text = \"Registrarse\";\n                $scope.menu_left = \"¿Olvidó su contraseña?\";\n                $scope.menu_right = \"Iniciar sesión\";\n                $scope.btn_click = $scope.registerNewUser;\n                $scope.welcomeText = \"Registrarse en \";\n                break;\n            case 2: // recuperacion\n                $scope.btn_text = \"Recuperar contraseña\";\n                $scope.menu_left = \"Iniciar sesión\";\n                $scope.menu_right = \"Registrarse\";\n                $scope.btn_click = $scope.retrievePassword;\n                $scope.welcomeText = \"Recuperar contraseña de \";\n                break;\n        }\n    };\n\n    $scope.login_mode = 0; // 0->login; 1->registro; 2->recuperacion de clave\n    $scope.updateButtons();\n    $rootScope.bodyClass = \"body-login\";\n    M.FormSelect.init(document.querySelectorAll('select'), {});    \n    setTimeout(function(){M.updateTextFields();},1500); // Esto no funciona \n}]);","app.controller(\"home\", ['$scope', '$rootScope', '$location', 'localStorageService', function ($scope, $rootScope, $location, localStorageService) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    $scope.testFSAnswers = []; // Objeto auxiliar para mostrar las respuestas del tests (esta con un watch dentro de la directiva)\r\n\r\n    ///// Cuestionario Felder-Silvermann\r\n    $scope.testStatus = 0; // 0->Espera inicio, 1->Espera completar respuestas, 2->Respuestas completas, espera \"Finalizar\", 3->Respuestas enviados\r\n    if(!$rootScope.user.test_fs && !$rootScope.user.admin && $rootScope.user.enrolled){ // Si el usuario no es admin y aun no responde el test de FS, mostrar modal\r\n        var test_modal = M.Modal.init(document.getElementById(\"test_modal\"), {\r\n            dismissible: false\r\n        });\r\n\r\n        $scope.loadTest = function () { // Mostrar preguntas\r\n            $scope.test_FS = Cipressus.test_FS.questions;\r\n            $scope.results = localStorageService.get(\"testFS\");\r\n            if (!$scope.results)\r\n                $scope.results = {\r\n                    startTime: Date.now(),\r\n                    answers: [],\r\n                    timeline: [],\r\n                    changes: []\r\n                };\r\n            $scope.testStatus = 1; // Mostrar test\r\n        };\r\n\r\n        $scope.putOption = function (quest, opt) {\r\n            if ($scope.results.answers[quest] != undefined) { // Si ya existia la respuesta, registrar cambio\r\n                $scope.results.changes.push({\r\n                    quest: quest,\r\n                    prev: $scope.results.answers[quest],\r\n                    next: opt\r\n                });\r\n            }\r\n            $scope.results.answers[quest] = opt; // Respuesta\r\n            $scope.results.timeline[quest] = (Date.now() - $scope.results.startTime) / 1000; // Tiempo de respuesta en segundos\r\n            localStorageService.set(\"testFS\", $scope.results); // Actualizar en LS\r\n            if ($scope.results.answers.filter(function (value) {\r\n                    return value !== undefined && value !== null\r\n                }).length == 44) // Cantidad de preguntas contestadas\r\n                $scope.testStatus = 2; // Habilitar boton \"finalizar\"\r\n        };\r\n\r\n        $scope.saveTestResults = function () { // Guardar los resultados del test y mostrar resultados\r\n            $rootScope.loading = true;\r\n            console.log($scope.results);\r\n            $scope.testFSAnswers = $scope.results.answers; // Copio en otra variable para que se ejecute la fc de la directiva\r\n            Cipressus.db.set($scope.results, \"users_public/\" + $rootScope.user.uid + \"/test_fs\")\r\n                .then(function (res) {\r\n                    //console.log(res);\r\n                    M.toast({\r\n                        html: \"Gracias por tu tiempo!\",\r\n                        classes: 'rounded green darken-3',\r\n                        displayLength: 2000\r\n                    });                    \r\n                    $scope.testStatus = 3; // Para mostrar resultados, pasar al modo 3\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al guardar resultados\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                })\r\n        };\r\n\r\n        test_modal.open();\r\n    }\r\n\r\n    var downloadNews = function () { // Descargar noticias y usuarios de la db\r\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\r\n        var authors = []; // Uids de usuarios que hicieron publicaciones\r\n        if($rootScope.user.course){ // Si tiene asignado un curso, descargar noticias\r\n            Cipressus.db.getSorted('news/'+$rootScope.user.course, 'order') // Descargar lista de novedades\r\n                .then(function (snapshot) {\r\n                    snapshot.forEach(function (childSnapshot) { // Lista ordenada\r\n                        var child = childSnapshot.val();\r\n                        child.key = childSnapshot.key;\r\n                        child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\r\n                        if (authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\r\n                            authors.push(child.author); // Agregar a la lista\r\n                        for(var k in child.comments){ // Para cada comentario, obtener autores\r\n                            if (authors.indexOf(child.comments[k].uid) == -1) // Si todavia no se guardo el uid del autor de este comentario\r\n                                authors.push(child.comments[k].uid); // Agregar a la lista\r\n                        }\r\n                        $scope.news.unshift(child); // Sentido inverso para que las nuevas noticias queden arriba\r\n                    });\r\n                    $scope.users = {};\r\n                    if(authors.length > 0){ // Descargar datos de los usuarios que publicaron o comentaron\r\n                        var k = 0; // Indice de arreglo de authors\r\n                        var getUser = function(k){ // Funcion recursiva para ir descargando los datos de usuarios\r\n                            Cipressus.db.get('users_public/' + authors[k]) // Descargar datos de los autores de publicaciones solamente\r\n                                .then(function (user_data) {\r\n                                    $scope.users[authors[k]] = user_data;\r\n                                    k++; // Pasar al siguiente\r\n                                    if (k == authors.length) { // Si no quedan mas, terminar\r\n                                        newsData = { // Objeto a guardar en localStorage\r\n                                            news: $scope.news,\r\n                                            authors: $scope.users,\r\n                                            last_update: Date.now()\r\n                                        };\r\n                                        localStorageService.set(\"newsData_\"+$rootScope.user.course, newsData);\r\n                                        $rootScope.loading = false;\r\n                                        $rootScope.$apply();\r\n                                        setTimeout(function(){\r\n                                            M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {}); // Dropdown eliminar comentario\r\n                                        },200);\r\n                                    }else{ // Si quedan mas, pasar al siguiente\r\n                                        getUser(k);\r\n                                    }\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                });\r\n                        };\r\n                        getUser(0); // Empezar\r\n                    }else{\r\n                        $rootScope.loading = false;\r\n                        $rootScope.$apply();\r\n                    }\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                });\r\n        }else{ // Si el usuario no tiene curso asignado\r\n            $rootScope.loading = false;\r\n        }\r\n    };\r\n\r\n    /// Comentarios\r\n    var comment_modal = M.Modal.init(document.getElementById(\"comment_modal\"), {});\r\n    $scope.commentText = \"\"; // Input de texto para comentarios\r\n\r\n    $scope.commentPost = function(idx){ // Abrir modal para escribir comentario\r\n        $scope.commEntryIdx = idx;\r\n        comment_modal.open();\r\n        setTimeout(function(){\r\n            M.updateTextFields();\r\n        },100);\r\n    };\r\n\r\n    $scope.publishComment = function(){ // Adjuntar comentario al post correspondiente        \r\n        if($scope.commentText != \"\"){ // Tiene que existir texto\r\n            $rootScope.loading = true;\r\n            var comment = {\r\n                uid: $rootScope.user.uid,\r\n                text: $scope.commentText,\r\n                timestamp: Date.now()\r\n            };\r\n            Cipressus.db.push(comment,'news/'+$rootScope.user.course+'/'+$scope.news[$scope.commEntryIdx].key+'/comments')\r\n            .then(function(snap){\r\n                // Actualizar objeto local\r\n                if(!$scope.news[$scope.commEntryIdx].comments)\r\n                    $scope.news[$scope.commEntryIdx].comments = {};\r\n                $scope.news[$scope.commEntryIdx].comments[snap.key] = comment;\r\n                $scope.commentText = \"\"; // Borrar el input\r\n                if(!$scope.users[$rootScope.user.uid]){ // Si no estan los datos de este usuario, agregar\r\n                    $scope.users[$rootScope.user.uid] = $rootScope.user;\r\n                }\r\n                // Actualizar estampa de tiempo para cacheos\r\n                var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n                Cipressus.db.update(ts,\"metadata/updates/news\")\r\n                .then(function(res){\r\n                    M.toast({\r\n                        html: \"Comentario publicado correctamente\",\r\n                        classes: 'rounded green',\r\n                        displayLength: 1500\r\n                    });\r\n                    // Reinicializar dropdowns\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    comment_modal.close();\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function(err){\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al publicar comentario\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 1500\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        }else{\r\n            M.toast({\r\n                html: \"El comentario está vacío!\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.deleteComment = function(commentId, entryId){ // Eliminar comentario\r\n\r\n        $rootScope.loading = true;\r\n        \r\n        Cipressus.db.set(null,'news/'+$rootScope.user.course+'/'+$scope.news[entryId].key+'/comments/'+commentId)\r\n        .then(function(snap){\r\n            // Actualizar objeto local\r\n            delete $scope.news[entryId].comments[commentId];\r\n            // Actualizar estampa de tiempo para cacheos\r\n            var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n            Cipressus.db.update(ts,\"metadata/updates/news\")\r\n            .then(function(res){\r\n                M.toast({\r\n                    html: \"Comentario eliminado\",\r\n                    classes: 'rounded green',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                comment_modal.close();\r\n                $scope.$apply();\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al publicar comentario\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n\r\n    };\r\n\r\n    // Monitoreo de actividad\r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"home\").catch(function (err) {\r\n        console.log(err);\r\n    });\r\n\r\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\r\n    if (newsData) { // Si hay datos en local storage\r\n        $scope.news = newsData.news;\r\n        $scope.users = newsData.authors;\r\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\r\n            .then(function (news_update) {\r\n                if (newsData.last_update < news_update) // Hay cambios en la base de datos\r\n                    downloadNews(); // Descargar de db y guardar en localstorage\r\n                else { // Si no hay cambios, terminar\r\n                    // Inicializar dropdowns de eliminar comentarios\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    $rootScope.$apply();\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al acceder a la base de datos\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 2000\r\n                });\r\n                $rootScope.loading = false;\r\n                $rootScope.$apply();\r\n            });\r\n    } else { // Si no hay datos, descargar si o si\r\n        downloadNews();\r\n    }\r\n}]);","app.controller(\"dashboard\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged) $location.path(\"/login\");\n    \n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function(data){ // Actualiza el grafico de proporciones de notas\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '100%'},\n            title: {\n                text: 'Proporción de calificaciones'\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions:{\n                series:{\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            updatePolarPlot(event.point.node.id);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",data: data, allowDrillToNode: true,cursor: 'pointer',\n                dataLabels: {format: '{point.name}',filter: {property: 'innerArcLength',operator: '>',value: 16}},\n                levels: [\n                    {level: 1,levelIsConstant: false,dataLabels: {filter: {property: 'outerArcLength',operator: '>',value: 64}}},\n                    {level: 2,colorIndex: 1},\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}}\n                ]\n            }],\n            tooltip: {headerFormat: \"\",pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'}\n        });\n    };\n\n    var updatePolarPlot = function(id){ // Actualizar grafico de notas\n        if($scope.user){ // Si el alumno no esta habilitado por el docente no se muestra nada\n            var data = []; // Datos para mostrar en el grafico polar\n            // Buscar nodo de la actividad seleccionada\n            $scope.currentNode = Cipressus.utils.searchNode($scope.activities,id); \n            var value = Cipressus.utils.eval($scope.user,$scope.currentNode)/$scope.currentNode.score*100;\n            $scope.currentActivityScores = { // Para detallar textualmente\n                name: $scope.currentNode.name,\n                points: ($scope.currentNode.score*value/100).toFixed(2), \n                score: value.toFixed(2),\n                children:[] // Asjuntar los nodos hijos\n            };\n            for(k in $scope.currentNode.children){ // Para cada sub actividad\n                // Calcular nota de las sub actividades\n                var subValue = Cipressus.utils.eval($scope.user,$scope.currentNode.children[k])/$scope.currentNode.children[k].score*100;\n                // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n                $scope.currentActivityScores.children.push({\n                    name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                    points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                    score: subValue.toFixed(2) // Nota en porcentaje\n                });\n                data.push({ // Agregar nota de esa actividad a los datos para el chart\n                    y: $scope.currentNode.children[k].score,\n                    z: parseInt(subValue.toFixed(2)),\n                    name: $scope.currentNode.children[k].name\n                })\n            }\n            $scope.$apply();\n            Highcharts.chart('variable_pie_container', {\n                chart: {type: 'variablepie',height: '100%'},\n                credits:{enabled:false},\n                title: {text: 'Mis calificaciones'},\n                tooltip: {\n                    headerFormat: '',\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                        'Nota actividad: <b>{point.z}%</b><br/>'\n                },\n                series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n            });\n        }\n    };\n\n    var updateProgressPlot = function(){ // Generar grafico polar de progreso de la materia\n        var progressData = [ // Progreso de la materia\n            {\n                name: 'Avance programa',\n                y: totalEvents-futureEvents,\n                color: \"#8181F7\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Restantes',\n                y: futureEvents,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        var attendanceData = [ // Porcentaje de asistencia\n            {\n                name: 'Presente',\n                y: $scope.user.scores.asistencia.score,\n                color: \"#FF4444\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Ausente',\n                y: 100-$scope.user.scores.asistencia.score,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        \n        Highcharts.chart('progress_pie_container', {\n            chart: {\n                type: \"pie\",\n                plotBorderWidth: 0\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: 'Mi participación'\n            },\n            tooltip: {\n                pointFormat: '<b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {                    \n                    startAngle: -90,\n                    endAngle: 90,\n                    center: ['50%', '50%']\n                }\n            },\n            series: [\n                {name: 'Asistencia',size: '70%',data: attendanceData},\n                {name: 'Progreso',innerSize: '70%',data: progressData},\n            ]\n        });        \n    };\n\n    var updateBarPlot = function () { // Genera los arreglos de calificaciones\n\n        var seriesData = [];\n        var drillDownData = [];\n\n        for (var k in $scope.users) { // Para cada usuario\n            if(!$scope.users[k].admin && $scope.users[k].scores && $scope.users[k].course == $rootScope.user.course){ // Si tiene notas, no es admin y coincide con el curso\n                seriesData.push({ // Evaluar e insertar resultado en array\n                    name: k,\n                    y: Cipressus.utils.eval($scope.users[k],$scope.activities),\n                    color: k==$rootScope.user.uid ? \"#FF0000\":\"#AAAAAA\",                    \n                    drilldown: k\n                });\n\n                var tempData = []; // Arreglo temporal con notas del alumno\n                for(var j in $scope.activities.children){ // Evaluar tambien las principales actividades\n                    tempData.push([\n                        $scope.activities.children[j].id,\n                        Cipressus.utils.eval($scope.users[k],$scope.activities.children[j])/$scope.activities.children[j].score*100\n                    ]);\n                }\n\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\n                    name: k==$rootScope.user.uid ? \"Yo\" : \"#\"+(seriesData.length+1),\n                    id: k,\n                    data:tempData\n                })\n            }\n        }\n\n        // Ordenar datos por nota\n        seriesData.sort( function(a,b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0)}); \n        // Renombrar datos por sus ordenes excepto mi nota\n        for(var k in seriesData)\n            seriesData[k].name = seriesData[k].name == $rootScope.user.uid ? \"Yo\" : \"#\"+(parseInt(k)+1);\n\n        \n        Highcharts.setOptions({\n            lang: {\n                drillUpText: '<< Volver a {series.name}'\n            }\n        });\n\n        Highcharts.chart('barplot_container', {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Calificaciones del curso'\n            },\n            xAxis: {\n                type: 'category'\n            },\n            yAxis: {\n                title: {\n                    text: 'Puntaje acumulado'\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.y:.1f} pts'\n                    }\n                }\n            },\n\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f} pts</b>'\n            },\n\n            series: [{\n                name: \"Alumno\",                \n                data:seriesData\n            }],\n            drilldown:{\n                series: drillDownData\n            }\n        });\n    };\n\n    $scope.drillUp = function () {\n        $(\"#barplot_container\").highcharts().drillUp();\n    };\n\n    var updateAttendancePlot = function(){\n        var categories = []; // Lista de fechas de los eventos\n\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\n\n        if($scope.user.attendance){\n            var data = []; // Asistencia acumulada por clase\n            var evCnt = 0; // Contador de eventos\n            var evAtt = 0; // Contador de eventos asistidos\n            for(var k in $scope.eventsAll){\n                if($scope.eventsAll[k].start < Date.now() && $scope.eventsAll[k].attendance){\n                    evCnt++; // Contar evento\n                    if($scope.user.attendance[k]) // Si asistio a esta clase\n                        evAtt++; \n                    if(evAtt != 0)\n                        data.push(evAtt/evCnt*100);\n                    else \n                        data.push(0);\n                    if(first) // Primera pasada\n                        categories.push($rootScope.getTime(3,$scope.eventsAll[k].start)); // Agregar evento a la lista\n                }\n            }\n            first = false;\n\n            Highcharts.chart('attendance_container', {\n                chart: {\n                    type: 'spline'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: 'Asistencia a clases'\n                },\n                xAxis: {\n                    categories: categories\n                },\n                series: [{\n                    name:'Mi asistencia',\n                    data: data\n                }]\n            });\n        }\n    };\n\n    // Inicializacion \n    var totalEvents=0, futureEvents=0, attendableEvents=0;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"dashboard\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar arbol de actividades del curso actual\n        .then(function(activities_data){\n            $scope.activities = activities_data; // Nodo root del arbol de notas\n            Cipressus.db.get('users_private') // Descargar datos de todos los usuarios #TODO: filtrar a los del curso actual\n                .then(function(user_data){\n                    $scope.users = user_data;\n                    $scope.user = user_data[$rootScope.user.uid];\n                    if($scope.user){ // Si ya fue aprobado por admin\n                        // Si aun no fue evaluado en nada, dejar arreglos vacios (porque en DB no se guardan)\n                        if(typeof($scope.user.scores) == 'undefined')\n                            $scope.user.scores = [];\n                        if(typeof($scope.user.submits) == 'undefined')\n                            $scope.user.submits = [];\n                    }\n                    // Actualizar graficos al nodo root\n                    var arr = Cipressus.utils.getArray($scope.activities);\n                    $scope.$apply(); // Este es para que actualice la vista antes de graficar\n                    updateSunburst(arr);                    \n                    updatePolarPlot($scope.activities.id);                    \n                    $rootScope.$apply(); \n                    // Descargar lista de eventos para linea del tiempo y para evaluar asistencia del usuario\n                    $scope.events=[];                    \n                    Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                    .then(function(events_data){\n                        $scope.eventsAll = {};\n                        events_data.forEach(function(childSnapshot){\n                            $scope.eventsAll[childSnapshot.key] = childSnapshot.val();\n                            var ev = childSnapshot.val();\n                            totalEvents++; // Contar actividad (se usa para asistencia y avance del programa)\n                            if(ev.start > Date.now()){ // Si es un evento futuro\n                                futureEvents++; // Contar los que faltan\n                                if($scope.events.length < 5){ // Agregar solamente 5\n                                    // Asignar lado de linea del tiempo alternados\n                                    ev.side = $scope.events.length%2 ? \"tl-right\" : \"tl-left\";\n                                    $scope.events.push(ev); // Agregar evento al arreglo  \n                                }\n                            }else{ // Si es evento que ya paso\n                                if(ev.attendance) // Y si tiene asistencia habilitada\n                                    attendableEvents++; // Contar para calcular porcentaje de asistencia\n                            }\n                        });\n                        for(var k in $scope.users) // Calcular asistencia para todos\n                            if($scope.users[k]){ // Si es alumno inscripto, existe este objeto\n                                if($scope.users[k].scores){ // Si tiene alguna calificacion\n                                    if($scope.users[k].attendance){ // Si tiene asistencia a algun evento\n                                        var userAttendedEvents = Object.getOwnPropertyNames($scope.users[k].attendance).length; // Cantidad de clases asistidas por el usuario\n                                        var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0; // Calcular porcentaje de asistencia\n                                        $scope.users[k].scores.asistencia = {\n                                            score: att, \n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };  \n                                    }else{ // Si no asistio a nada, le dejo la asitencia en 0\n                                        $scope.users[k].scores.asistencia = {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };    \n                                    }\n                                }else{ // Si no tiene puntajes, crear al menos la asistencia para el progreso                             \n                                    $scope.users[k].scores = {\n                                        asistencia: {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        }\n                                    };\n                                }            \n                            }\n                        if($scope.user)\n                            if($scope.user.scores)\n                                $scope.user.scores.asistencia = $scope.users[$rootScope.user.uid].scores.asistencia; // Copiar para el usuario actual\n                        updateProgressPlot(); // Actualizar el grafico de avance de la materia\n                        updatePolarPlot($scope.activities.id); // Actualizar nuevamente el grafico de notas ya que tiene asistencia\n                        updateBarPlot();\n                        updateAttendancePlot();\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    })\n                    .catch(function(err){ // events\n                        console.log(err);\n                        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    });\n                    \n                })\n                .catch(function(err){ // users_private\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                });        \n        })\n        .catch(function(err){ // activities\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n            $rootScope.$apply(); \n        });\n}]);","app.controller(\"calendar\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.events = []; // Arreglo de eventos (clases, labs, parciales)\n\n    // Componentes materialize\n    var viewModal = M.Modal.init(document.getElementById(\"view_modal\"), {});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {});\n    var confirmDeleteModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {});\n    var confirmMoveModal = M.Modal.init(document.getElementById(\"confirm_move_modal\"), {});\n    M.FormSelect.init(document.querySelectorAll('select'), {});\n\n    $scope.refreshCalendar = function(){ // Sincroniza arreglo de eventos con lo que se muestra\n        $('#calendar').fullCalendar('removeEvents'); // Para que no duplique\n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Renderizar todos\n    };\n\n    // Inicializar calendar\n    $('#calendar').fullCalendar({\n        weekends: false,\n        editable: $rootScope.user.admin,\n        locale: 'es-us',\n        lang: 'es',\n        allDaySlot:false,\n        minTime:\"08:00\",\n        maxTime:\"22:00\",\n        timeFormat: \"HH:mm\",\n        dateFormat: \"DD/MM\",\n        slotLabelInterval:\"01:00\",\n        slotLabelFormat: 'HH:mm',\n        header: { center: 'month,agendaWeek' },\n        eventSources: [{\n            events: $scope.events\n        }],\n        eventDrop: function( event ) { // Al soltar evento en otro casillero\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventResize: function(event){ // Extender o acortar horario de evento\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventClick: function(event) {\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: event.timestamp, // Esto hay que editarlo despues\n                attendance: event.attendance,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000, // GMT+3 (cosa de calendar)\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: event.timestamp, // Esto se edita despues\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB\n                id: event.id,\n                idx: event.idx,\n                startDay: moment(event.start).format(\"DD/MM\"),\n                startTime: moment(event.start).format(\"HH:mm\"),\n                endTime: moment(event.end).format(\"HH:mm\"),\n                fromNow: moment(event.start).fromNow()\n            };\n            viewModal.open();\n            $scope.$apply();\n        },\n        viewRender: function(view,element){\n            $scope.refreshCalendar();\n        }\n    });\n\n    $scope.confirmDeleteEvent = function(){\n        viewModal.close();\n        setTimeout(function(){confirmDeleteModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.editEvent = function(newEvent){ // Editar evento o crear nuevo\n        if(newEvent){ // Crear nuevo (click en +)\n            $scope.selectedEvent = {};\n            $scope.selectedEventExtras = null; // No tengo id ni idx y se deben definir\n            document.getElementById(\"event_date\").value = null;\n            document.getElementById(\"event_start_time\").value = null;\n            document.getElementById(\"event_end_time\").value = null;\n            document.getElementById(\"tag_select\").value = \"#aaaaaa\";\n        }else{ // Editar existente (click en evento del calendario)\n            viewModal.close();\n            document.getElementById(\"event_date\").value = moment($scope.selectedEvent.start).format(\"YYYY-MM-DD\");\n            document.getElementById(\"event_start_time\").value =  moment($scope.selectedEvent.start).format(\"HH:mm\");\n            document.getElementById(\"event_end_time\").value = moment($scope.selectedEvent.end).format(\"HH:mm\");\n            document.getElementById(\"tag_select\").value = $scope.selectedEvent.color;\n            setTimeout(function(){\n                M.updateTextFields();\n            },200);\n        }        \n        setTimeout(function(){editModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.saveEvent = function(){ // Guardar evento en DB\n        $rootScope.loading = true;\n        $scope.selectedEvent.author = $rootScope.user.uid;\n        $scope.selectedEvent.timestamp = Date.now();\n        $scope.selectedEvent.color = document.getElementById(\"tag_select\").value;\n        var date = document.getElementById(\"event_date\").value;\n        var startTime = document.getElementById(\"event_start_time\").value;\n        var endTime = document.getElementById(\"event_end_time\").value;\n        var start = moment(startTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        var end = moment(endTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        // Chequeo de formulario\n        var formStatus = 0;\n        if($scope.selectedEvent.title){\n            if($scope.selectedEvent.title == \"\")\n                formStatus = 1;\n        }else\n            formStatus = 2;\n        if(start && end){ // Si se pudo procesar fecha y hora\n            if(start < end){ // Si lo ingresado es coherente\n                $scope.selectedEvent.start = start;\n                $scope.selectedEvent.end = end;\n            }else\n                formStatus = 3;\n        }else\n            formStatus = 4;\n        if($scope.selectedEvent.info == 'undefined')\n            $scope.selectedEvent.info = \"\";\n        if(formStatus != 0){ // Si algo no estaba bien, mostrar error y salir\n            console.log(\"Error \"+formStatus);\n            console.log(\"Titulo\", $scope.selectedEvent.title);\n            console.log(\"Fecha y hora\",date,startTime,endTime);\n            M.toast({html: \"No se ingresó fecha u horarios correctamente\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            return;\n        }\n        // Si todo esta bien, guardar\n        if($scope.selectedEventExtras) // Si esta este objeto, hay que actualizar\n            Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n                $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n                $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n                $scope.refreshCalendar();\n                M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEvent = null; // Para que no se vuelva a utilizar por error\n                $scope.selectedEventExtras = null;\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        else // Si es nuevo evento, insertar en DB\n            Cipressus.db.push($scope.selectedEvent,\"events/\"+$rootScope.user.course)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.idx = $scope.events.length;\n                $scope.selectedEvent.id = snapshot.key;\n                $scope.events.push($scope.selectedEvent); // Insertar en arreglo\n                $('#calendar').fullCalendar('renderEvent',$scope.selectedEvent);\n                M.toast({html: \"Nuevo evento registrado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.deleteEvent = function(){ // Borrar el ultimo evento clickeado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            $scope.events.splice($scope.selectedEventExtras.idx,1); // Quitar del arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n            M.toast({html: \"Evento eliminado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmDeleteModal.close();      \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"No se pudo eliminar, intente en otro momento\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n    $scope.moveEvent = function(){ // Mover el elemento arrastrado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            // Agregarle los atributos de indice e identificador para que quede en local\n            $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n            $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n            $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n            $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n            $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null;\n            M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmMoveModal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };    \n    \n    Cipressus.utils.activityCntr($rootScope.user.uid,\"calendar\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get(\"events/\"+$rootScope.user.course) // Descargar todos los eventos del curso y renderizar en calendar\n    .then(function(events_data){\n        var idx = 0; // Guardo los indices del arreglo\n        for(k in events_data){ // Convertir las actividades en eventos de calendar\n            var ev = events_data[k];\n            ev.start = moment(ev.start).format();\n            ev.end = moment(ev.end).format();\n            ev.id = k;\n            ev.idx = idx; // El indice me sirve para ubicarlo al editar evento\n            ev.durationEditable = $rootScope.user.admin;\n            $scope.events.push(ev);\n            idx++;\n        }   \n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Mostrar todos\n        $rootScope.loading = false;\n        $scope.$apply();\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });\n}]);","app.controller(\"sources\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n\n    $scope.pushFiles = function (folderName) { // Agregar archivos a un directorio\n        \n        var uploadFiles = function(folderKey){ // Subir los archivos al storage (es metodo porque se llama de distintos lugares)\n            if (document.getElementById(\"filesInput\").files.length > 0) { // Si se cargaron las fotos al storage        \n                var fileList = [];\n                var filenames = [];\n                var uploadingFiles = document.getElementById(\"filesInput\").files; // Lo copio para usar mas adelante fuera de scope            \n                for (var k in uploadingFiles) {\n                    if (typeof (uploadingFiles[k]) == \"object\") {\n                        fileList.push(uploadingFiles[k]);\n                        filenames.push(Cipressus.utils.generateFileName(25) + \".\" + uploadingFiles[k].name.split(\".\")[1]); // Nombre aleatorio mas formato de archivo\n                    }\n                }\n    \n                Cipressus.storage.putMultiple(fileList, \"Files\", filenames)\n                    .then(function (res) { // res contiene el arreglo de urls asignadas por firebase y los pesos\n                        $scope.fileListQueue = []; // LIsta de archivos que hay que guardar en database\n                        for (var k in res.urls) { // Para cada url\n                            $scope.fileListQueue.push({\n                                name: uploadingFiles[k].name.split(\".\")[0], // Extraer nombre de archivo\n                                size: res.sizes[k], // Tamanio de archivo\n                                format: uploadingFiles[k].name.split(\".\")[1], // Extension del archivo\n                                link: res.urls[k], // Url de los archivos\n                                filename: filenames[k], // Nombre de archivo en el storage\n                                uploaded: Date.now(),\n                                downloads: 0\n                            });\n                        }\n                        Cipressus.db.pushMultiple($scope.fileListQueue, \"sources/\" + folderKey + \"/files\")\n                            .then(function (res2) {\n                                // Actualizar tablas (carpetas) de archivos\n                                var idx = 0; // Contador para items de carpeta o directorio\n                                if(!$scope.sources){ // Para la primera vez cuando no hay ningun directorio\n                                    $scope.sources = {};\n                                    $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                }else{ // Existen directorios\n                                    if(!$scope.sources[folderKey]){ // Si se creo el directorio por primera vez\n                                        $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                    }\n                                    if(!$scope.sources[folderKey].files) // Puede existir el directorio pero no tener archivos (En caso de que se hayan borrado todos)\n                                    $scope.sources[folderKey].files = {}; // Crear solo el objeto vacio\n                                }\n                                for(var k in res2){ // Para cada key   \n                                    $scope.sources[folderKey].files[res2[k].key]=$scope.fileListQueue[idx];\n                                    idx++;\n                                }\n                                // Cerrar dialogo\n                                M.toast({\n                                    html: \"Direcetorio actualizado.\",\n                                    classes: 'rounded green darken-3',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                document.getElementById(\"filesInput\").value = null;\n                                document.getElementById(\"filesInputText\").value = null;\n                                $scope.$apply();\n                            })\n                            .catch(function (err) {\n                                console.log(err);\n                                M.toast({\n                                    html: \"Ocurrio un error guardar archivos.\",\n                                    classes: 'rounded red',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                $scope.$apply();\n                            });\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al subir archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n    \n            } else {\n                M.toast({\n                    html: \"Debe seleccionar los archivos primero\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                return;\n            }\n        };\n\n        if(!folderName){ // Si no eligio nombre de carpeta, no continuar\n            M.toast({\n                html: \"Debe indicar el nombre del directorio\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }else{ // Si hay al menos algun caracter, continuar\n            \n            $rootScope.loading = true;\n\n            /// Buscar el key del directorio que tenga este name\n            var folderKey = \"\";\n            for(var k in $scope.sources)\n                if(folderName == $scope.sources[k].name) // Coincidencia\n                    folderKey = k; // Identificador a donde van los archivos subidos\n\n            if(folderKey == \"\"){ // Si no se encontro, crear nueva entrada                \n                Cipressus.db.push({name:folderName},\"sources\")\n                .then(function(res){\n                    folderKey = res.key;\n                    uploadFiles(folderKey); // Continuar con la carga de archivos\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({\n                        html: \"Error al generar directorio\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });    \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si la entrada ya existe\n                uploadFiles(folderKey);  // Continuar con la carga de archivos\n            }\n        }\n    };\n\n    $scope.deleteFile = function(folder,key){ // Marcar el archivo a borrar para que el usuario confirme        \n        fileKeyToDelete = [folder,key];\n        $scope.fileToDelete = $scope.sources[folder].files[key];\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.fileToDelete.filename, \"Files\")\n            .then(function (res) {\n                // Ahora hay que borrar la referencia de la db\n                Cipressus.db.set(null, \"sources/\"+fileKeyToDelete[0]+\"/files/\"+fileKeyToDelete[1]) // #TODO: Eliminar carpeta si ya no quedan mas archivos en la entrada\n                    .then(function (res2) {\n                        // Eliminar los elementos de la vista                                        \n                        delete $scope.sources[fileKeyToDelete[0]].files[fileKeyToDelete[1]];\n                        fileKeyToDelete = [];\n                        M.toast({\n                            html: \"Archivo eliminado!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        confirm_delete_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al eliminar archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al eliminar archivos\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n    $scope.openImage = function (link) { // Abrir archivos de imagen en modal\n        document.getElementById(\"image_viewer\").src = link;\n        image_viewer_modal.open();\n    };\n\n    $scope.openPdfViewer = function(url){ // Abrir el pdf en un modal\n        $scope.pdfURL = url;\n        pdf_viewer_modal.open();\n    };\n\n    ///// Inicialización controller\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {});\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var pdf_viewer_modal = M.Modal.init(document.getElementById(\"pdf_viewer_modal\"), {preventScrolling: false});\n    var image_viewer_modal = M.Modal.init(document.getElementById(\"image_viewer_modal\"), {preventScrolling: false});\n\n    var fileKeyToDelete = [];\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"sources\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('sources') // Descargar lista de novedades\n        .then(function (snapshot) {\n            //console.log(snapshot);\n            $scope.sources = snapshot;\n            // Lista de carpetas para autocompletador\n            var folderList = {};\n            for(var k in $scope.sources)\n                folderList[$scope.sources[k].name] = null;\n            M.Autocomplete.init(document.querySelector('.autocomplete'), {data: folderList}); \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"submissions\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $scope.resetForm = function(){ // Restablecer el formulario\n        $scope.selectedActivity = null;\n    };\n\n    var pushSubmission = function(reference){ // Cargar la entrega a la db\n        $rootScope.loading = true; // Puede que ya este en true desde antes\n        Cipressus.db.push(reference,\"submissions/\"+$rootScope.user.course)\n            .then(function (res2) {\n                //console.log(res2);\n                $scope.submissions[res2.key] = reference;\n                $scope.submCnt++;\n                document.getElementById(\"fileInput\").files[0] = null;\n                document.getElementById(\"fileInputText\").value = \"\";\n                M.toast({\n                    html: \"Entrega realizada correctamente\",\n                    classes: 'rounded green',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                files_modal.close();\n                $scope.$apply();\n            })\n            .catch(function (err2) {\n                console.log(err2);\n                M.toast({\n                    html: \"Ocurrió un error al subir el archivo\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.pushFile = function () { // Agregar archivos de entrega\n        \n        if($scope.selectedActivity){ // Si eligio el nombre de la actividad correctamente, continuar\n            var file = document.getElementById(\"fileInput\").files[0];\n            if(file){ // Si el input tiene archivos\n                $rootScope.loading = true;\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + file.name.split(\".\")[1];\n                var observs = document.getElementById(\"obsTextarea\").value; // Observaciones\n                if(!observs) observs = \"\"; // Evitar que la variable sea undefined o null\n                Cipressus.storage.put(file,\"Submissions\",filename)\n                .then(function (res) {\n                    //console.log(res);\n                    var reference = {\n                        name: file.name.split(\".\")[0], // Extraer nombre de archivo\n                        activityId: $scope.selectedActivity.id,\n                        activityName: $scope.selectedActivity.name,\n                        type: \"report\", // Tipo de entrega\n                        size: res.size, // Tamanio de archivo\n                        format: file.name.split(\".\")[1] ? file.name.split(\".\")[1] : \"indef.\", // Extension del archivo\n                        link: res.url, // Url \n                        filename: filename, // Nombre de archivo en el storage\n                        authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n                        status: [{ // Estados de la evaluacion (se concatenan)\n                            timestamp: Date.now(),\n                            action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                            display: \"Archivo subido\",\n                            user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                            obs: observs // Cada status lleva un mensaje opcional\n                        }]\n                    };\n                    pushSubmission(reference);\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al subir el archivo\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si no ingreso ningun archivo\n                console.log(\"Problema con el archivo\");\n                M.toast({\n                    html: \"Debe seleccionar un archivo!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });            \n            }\n        }else{ // Si no eligio nombre de actividad, no continuar\n            console.log(\"Identificador de actividad desconocido\");\n            M.toast({\n                html: \"Debe seleccionar una actividad!\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }\n    };\n\n    $scope.submitSim = function(){ // Presentacion de simulacion\n        var reference = {\n            name: $scope.selectedSim.name, // Nombre de la simulacion\n            activityId: $scope.selectedActivity.id,\n            activityName: $scope.selectedActivity.name,\n            type: \"sim\", // Tipo de entrega\n            size: $scope.selectedSim.size, // Tamanio del modelo\n            format: \"simcir\", // Para respetar el formato\n            data: $scope.selectedSim.data, // Va el modelo del circuito guardado\n            authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n            status: [{ // Estados de la evaluacion (se concatenan)\n                timestamp: Date.now(),\n                action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                display: \"Archivo subido\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                obs: document.getElementById(\"obsTextarea\").value || \"\" // Mensaje opcional\n            }]\n        };\n        pushSubmission(reference);\n    };\n\n    $scope.downloaded = function(key, subm){ // Agregar registro de movimiento sobre este archivo\n        if($scope.submissions[key].status[$scope.submissions[key].status.length-1].action == 0){ // Solo la primera vez\n            var newStatus = { // Nuevo estado del envio a registrar\n                timestamp: Date.now(),\n                action: 1, // 0 -> subido, 1 -> evaluando (descargado), 2 -> revisar, 3 -> evaluado\n                display: \"Archivo en revisión\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                obs: $scope.submissions[key].status[$scope.submissions[key].status.length-1].obs // Copiar original\n            };\n            $scope.submissions[key].status.push(newStatus); // Agrego el estado al objeto local\n            Cipressus.db.update($scope.submissions[key],\"submissions/\"+$rootScope.user.course+\"/\"+key) // Registrar accion\n            .then(function (res) {\n                M.toast({\n                    html: \"Movimiento registrado\",\n                    classes: 'rounded green',\n                    displayLength: 1000\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al registrar movimiento\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            });\n        }else{\n            M.toast({\n                html: \"El archivo ya está siendo evaluado\",\n                classes: 'rounded cyan',\n                displayLength: 1500\n            });\n        }\n        // Abrir el enlace\n        switch(subm.type){\n            case \"report\": // Abrir archivo cargado\n                window.open(subm.link,'_blank','noopener');    \n                break;\n            case \"sim\":\n                $rootScope.openSimulation = subm.data; // Pasar modelo como string al controller del simulador\n                $location.path(\"/simulator\");\n                break;\n            default:\n                break;\n        }\n    };\n\n    $scope.viewSubm = function(key){ // Seleccionar entrega para ver detalles\n        $scope.submKeyView = key;\n        submission_modal.open();\n    };\n\n    $scope.evaluated = function(key){ // Seleccion de entrega para marcar como evaluada (para confirmar accion)\n        $scope.evaluatingKey = key;\n        confirm_evaluate_modal.open();\n    };\n\n    $scope.confirmEvaluate = function(){ // Marcar entrega como evaluada\n        var action = parseInt(document.getElementById(\"evaluation_select\").value);\n        var obs = document.getElementById(\"obsTextarea2\").value;\n        if(obs == \"\") obs = \"Sin observaciones\"; // Forzar valor de resultado\n        if(action){\n            if($scope.submissions[$scope.evaluatingKey].status[$scope.submissions[$scope.evaluatingKey].status.length-1].action == 1){ // Solo la primera vez\n                $rootScope.loading = true;\n                var newStatus = { // Nuevo estado del envio a registrar\n                    timestamp: Date.now(),\n                    action: action, // 2 -> revisar, 3 -> aprobado\n                    display: action == 2 ? \"Revisar\" : action == 3 ? \"Aprobado\" : \"?\",\n                    user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                    obs: obs // Mensaje del evaluador\n                };\n                $scope.submissions[$scope.evaluatingKey].status.push(newStatus); // Agrego el estado al objeto local\n                Cipressus.db.update(JSON.parse(angular.toJson($scope.submissions[$scope.evaluatingKey])),\"submissions/\"+$rootScope.user.course+\"/\"+$scope.evaluatingKey) // Registrar accion\n                .then(function (res) {\n                    M.toast({\n                        html: \"Movimiento registrado\",\n                        classes: 'rounded green',\n                        displayLength: 1000\n                    });\n                    $rootScope.loading = false;\n                    confirm_evaluate_modal.close();\n                    document.getElementById(\"evaluation_select\").value = \"\";\n                    document.getElementById(\"obsTextarea2\").value = \"\";\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrio un error al registrar movimiento\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                });\n            }else{\n                console.log($scope.submissions[key].status);\n                M.toast({\n                    html: \"El archivo ya fue evaluado!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            }\n        }else{\n            console.log(\"Input select con opcion por defecto.\");\n            M.toast({\n                html: \"Seleccione resultado de evaluación\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });\n        }\n\n        \n    };\n\n    $scope.deleteFile = function(key){ // Marcar el archivo a borrar para que el usuario confirme        \n        $scope.fileKeyToDelete = key;\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n\n        var deleteDBRef = function(){ // Elimina la referencia a la entrega de la db\n            Cipressus.db.set(null, \"submissions/\"+$rootScope.user.course+\"/\"+$scope.fileKeyToDelete) \n                .then(function (res2) {\n                    // Eliminar entrada de la tabla y decrementar contador de elementos\n                    delete $scope.submissions[$scope.fileKeyToDelete];\n                    $scope.fileKeyToDelete = \"\";\n                    $rootScope.loading = false;\n                    $scope.submCnt--;\n                    confirm_delete_modal.close();\n                    $scope.$apply();\n                })\n                .catch(function (err2) {\n                    console.log(err2);\n                    M.toast({\n                        html: \"Ocurrio un error al eliminar archivos\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        $rootScope.loading = true;\n        if($scope.submissions[$scope.fileKeyToDelete].type == \"report\"){\n            Cipressus.storage.delete($scope.submissions[$scope.fileKeyToDelete].filename, \"Submissions\")\n                .then(function (res) {\n                    // Borrar la referencia de la db\n                    deleteDBRef();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrio un error al eliminar archivos\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }else{ // Si no es con entrega almacenada en storage, solo eliminar la referencia\n            deleteDBRef();\n        }   \n    };\n\n\n\n    ///// Inicialización controller\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var confirm_evaluate_modal = M.Modal.init(document.getElementById(\"confirm_evaluate_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var submission_modal = M.Modal.init(document.getElementById(\"submission_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n\n    $scope.fileKeyToDelete = \"\"; // Identificador del archivo seleccionado para elliminar previo confirmacion\n    $scope.selectedActivity = null; // Actividad seleccionada en el input del formulario antes de elegir archivo\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"submissions\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('submissions/'+$rootScope.user.course) // Descargar lista de archivos entregados por todos los alumnos\n        .then(function (submissions_data) { // Nota: No hay filtrado de archivos descargados -> usuarios pueden leer entregas de otros alumnos\n            $scope.submissions = {};\n            $scope.submCnt = 0; // Contador de entregas\n            if($rootScope.user.admin && submissions_data){ // Si es admin, bajar todas las entregas\n                $scope.submissions = submissions_data; // Lista de entregas realizadas\n                $scope.submCnt = Object.getOwnPropertyNames($scope.submissions).length\n            }else // Si no es admin, descargar las realizadas por este usuario o por comision\n                for(var k in submissions_data){ // Buscar entregas realizadas \n                    if(submissions_data[k].authors.indexOf($rootScope.user.uid) > -1){\n                        $scope.submissions[k] = submissions_data[k]; // Agregar entrega a la lista\n                        $scope.submCnt++;\n                    }\n                }\n            Cipressus.db.get('users_public') // Descargar lista de usuarios para tener info de las comisiones\n            .then(function (users_data) {\n                $scope.users = users_data; // Lista de usuarios\n                Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar datos de la materia para tener info de vencimientos\n                .then(function (activities_data) {\n                    $scope.activities = Cipressus.utils.getArray(activities_data);  \n                    //console.log($scope.activities);        \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                    M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                    document.getElementById(\"activity_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                        var sel = document.getElementById(\"activity_select\"); // Se puede usar this?\n                        var actIdx = $scope.activities.findIndex(function(x){ return x.id == sel.options[sel.selectedIndex].value}); // Buscar la actividad seleccionada\n                        \n                        $scope.selectedActivity = null;\n\n                        // Buscar si la actividad que intenta subir ya fue entregada\n                        for(var k in $scope.submissions){\n                            if($scope.submissions[k].activityId == sel.options[sel.selectedIndex].value && $scope.submissions[k].authors.includes($rootScope.user.uid) ){ // Misma actividad\n                                M.toast({\n                                    html: \"Ya realizó la entrega de esta actividad. Elimine la anterior.\",\n                                    classes: 'rounded red',\n                                    displayLength: 2000\n                                });\n                                $scope.$apply();\n                                return;\n                            }\n                        }\n\n                        $scope.selectedActivity = { // Objeto con info de la actividad sobre la que se entrega el trabajo\n                            id: sel.options[sel.selectedIndex].value, // Identificador de la actividad\n                            name: sel.options[sel.selectedIndex].text, // Nombre legible de la actividad\n                            deadline: $scope.activities[actIdx].dl.date, // Vencimiento\n                            type: $scope.activities[actIdx].dl.submit // Tipo de actividad (informe, simulacion, test)\n                        };\n\n                        if($scope.activities[actIdx].dl.submit == \"sim\"){ // Si la actividad es tipo simulacion, hay que descargar las guardadas\n                            $rootScope.loading = true;\n                            $scope.$apply();\n                            $scope.simulations = []; // Lista de simulaciones\n                            Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n                            .then(function(snapshot){\n                                snapshot.forEach(function(sim){\n                                    var simObj = sim.val();\n                                    simObj.id = sim.key; // Id en el arbol de simulaciones\n                                    simObj.index = $scope.simulations.length; // Para ubicarlo en el objeto\n                                    $scope.simulations.push(simObj);\n                                });\n                                $rootScope.loading = false;\n                                $scope.$apply();\n                                M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                                document.getElementById(\"simulation_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                                    var sim_sel = document.getElementById(\"simulation_select\");\n                                    var simIdx = $scope.simulations.findIndex(function(x){ return x.id == sim_sel.options[sim_sel.selectedIndex].value}); // Buscar la simulacion seleccionada\n                                    $scope.selectedSim = $scope.simulations[simIdx];\n                                });\n                            })\n                            .catch(function(err){\n                                console.log(err);\n                            });\n                        }else{\n                            $scope.$apply();\n                        }\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al acceder a la base de datos\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"hardware\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.sidenav.close();        \r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"hardware\").catch(function (err) {console.log(err)});\r\n    \r\n    var initTester = function(){ // Inicializar controladores de la vista\r\n        if(Cipressus.hardware.status == \"CONNECTED\"){\r\n            \r\n            $scope.tester = [ // Entrada/salida del probador\r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}\r\n            ];\r\n        \r\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\r\n\r\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar la vista\r\n                $scope.$apply(); \r\n            };\r\n        }\r\n    };\r\n\r\n    var stopTester = function(){ // Al desconectar, borrar objeto para que no muestre nada\r\n        if($scope.tester)\r\n            $scope.tester = null;\r\n    };\r\n    \r\n    // Inicializar\r\n    initTester();\r\n\r\n    // Conectar callbacks\r\n    $rootScope.onWssDisconnect = function(){\r\n        stopTester();\r\n    };\r\n\r\n    $rootScope.onWssConnect = function(){\r\n        initTester();\r\n    };\r\n    \r\n}]);","app.controller(\"analizer\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();        \n    Cipressus.utils.activityCntr($rootScope.user.uid, \"analizer\").catch(function (err) {console.log(err)});\n\n    $scope.running = false; // Controlar encendido/apagado del analizador (inicialmente apagado)\n\n    var chart = Highcharts.chart('chart_container', {\n        chart: {\n            type: 'line',\n            animation: false,\n            height: \"50%\"\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: 'Analizador lógico'\n        },  \n        yAxis: {\n            title: {\n                text: 'Voltaje'\n            }\n        },        \n        tooltip: {\n            headerFormat: '<b>{series.name}</b><br/>',\n            pointFormat: '{point.y:.2f}'\n        },\n        legend: {\n            enabled: false\n        },\n        exporting: {\n            enabled: false\n        },\n        series: [{\n            name: 'Entrada 1',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 2',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 3',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 4',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 5',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 6',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 7',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 8',\n            data: [[Date.now(),0]]\n        }]\n    });\n\n    var series = chart.series; // Series de datos (inicialmente todo en 0 con un solo dato)\n\n    var initAnalizer = function(){ // Inicializar controladores de la vista\n        if(Cipressus.hardware.status == \"CONNECTED\"){\n        \n            $scope.tester = [ // Entrada/salida del probador\n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}\n            ];\n\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\n\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar el grafico   \n                var timestamp = Date.now(); \n                for(var k = 0; k < 8; k++)\n                    series[k].addPoint([timestamp, $scope.tester[k].input ? 5:0], false, series[k].data.length>300);\n            };\n        }\n    };\n\n    var startChartUpdater = function(){ // Esta funcion dispara el refresco continuo del grafico\n        chart.redraw(); // Redibujar\n        if($scope.running) // Si esta corriendo, disparar el timeout\n            setTimeout(startChartUpdater,100); // El periodo es de 100ms fijo\n    };\n\n    $scope.toggleStartStop = function(){// Iniciar-detener el analizador\n        $scope.running = !$scope.running;\n        if($scope.running)\n            startChartUpdater(); // Al iniciar, hay que disparar el evento por primera vez\n    };\n    \n    // Conectar callbacks\n    $rootScope.onWssDisconnect = function(){\n        if($scope.tester) $scope.tester = null;\n    };\n\n    $rootScope.onWssConnect = function(){\n        initAnalizer();\n    };\n\n    // Inicializar analizador logico\n    initAnalizer();\n    \n}]);","app.controller(\"simulator\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    $scope.updateFields = function(){ // Funcion auxiliar\n        setTimeout(function(){\n            M.updateTextFields();\n        },200);\n    };\n\n    $scope.getSimulations = function () { // Descargar lista de archivos de simulacion del usuario\n        if(!$scope.simulations){ // Si no se descargaron los archivos, bajar\n            $rootScope.loading = true;\n            Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n            .then(function(snapshot){\n                simulations_data = {};\n                snapshot.forEach(function(sim){\n                    simulations_data[sim.key] = sim.val();\n                });\n\n                if(simulations_data){\n                    $scope.simulations = simulations_data;\n                    //console.log($scope.simulations);\n                    load_modal.open();\n                }else\n                    M.toast({html: \"No hay circuitos guardados!\",classes: 'rounded green darken-3',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al mostrar archivos\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si ya se habia descargado la info de la db, abrir directamente modal\n            load_modal.open();\n        }\n    };\n\n    $scope.loadCircuit = function(key, model){ // Cargar circuito\n        var data;\n        if(key) // Si se pasa clave, cargar desde los guardados, sino, usar data del argumento\n            data = JSON.parse($scope.simulations[key].data);\n        else\n            data = JSON.parse(model);\n\n        simcir.clearDevices(); // Borrar caches de managers\n\n        // Poner barra de herramientas\n        data.showToolbox = true;\n        data.width = document.getElementById(\"simcir\").clientWidth;\n        data.height = document.getElementById(\"simcir\").clientHeight\n        data.toolbox = [\n          {\"type\":\"In\"},\n          {\"type\":\"Out\"},\n          {\"type\":\"Joint\"},\n          {\"type\":\"DC\"},\n          {\"type\":\"LED\"},\n          {\"type\":\"PushOff\"},\n          {\"type\":\"PushOn\"},\n          {\"type\":\"Toggle\"},\n          {\"type\":\"BUF\"},\n          {\"type\":\"NOT\"},\n          {\"type\":\"AND\"},\n          {\"type\":\"NAND\"},\n          {\"type\":\"OR\"},\n          {\"type\":\"NOR\"},\n          {\"type\":\"XOR\"},\n          {\"type\":\"XNOR\"},\n          {\"type\":\"OSC\"},\n          {\"type\":\"7seg\"},\n          {\"type\":\"16seg\"},\n          {\"type\":\"4bit7seg\"},\n          {\"type\":\"RotaryEncoder\"},\n          {\"type\":\"BusIn\"},\n          {\"type\":\"BusOut\"},\n          {\"type\":\"RS-FF\"},\n          {\"type\":\"JK-FF\"},\n          {\"type\":\"T-FF\"},\n          {\"type\":\"D-FF\"},\n          {\"type\":\"8bitCounter\"},\n          {\"type\":\"HalfAdder\"},\n          {\"type\":\"FullAdder\"},\n          {\"type\":\"4bitAdder\"},\n          {\"type\":\"2to4BinaryDecoder\"},\n          {\"type\":\"3to8BinaryDecoder\"},\n          {\"type\":\"4to16BinaryDecoder\"},\n          {\"type\":\"Virtual-In\"},\n          {\"type\":\"Virtual-Out\"},\n          {\"type\":\"Test-In\"},\n          {\"type\":\"Test-Out\"},\n          {\"type\":\"Audio-Out\"}\n        ];\n        simcir.setupSimcir($('#simcir'), data);\n\n        if(key){\n            currentSim = {\n                key: key,\n                name: $scope.simulations[key].name\n            };\n            $scope.circuitFileName = $scope.simulations[key].name;\n            load_modal.close();\n        }\n    };\n\n    $scope.saveCircuit = function () {\n        $rootScope.loading = true;\n\n        // Verificar si el nombre existe para saber si hay que actualizar o crear nuevo\n        currentSim = {};\n        if($scope.simulations)\n            for(var k in $scope.simulations)\n                if($scope.simulations[k].name == $scope.circuitFileName) // Coincidencia\n                    currentSim = { // Guardar datos de actualizacion\n                        key: k,\n                        name: $scope.simulations[k].name\n                    };\n\n        // Crear objeto a guardar en db\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data(); // Objeto con datos de simulacion\n        //var data = JSON.stringify((({ devices, connectors }) => ({ devices, connectors }))(model)); // Solo guardar dos propiedades\n        // Metodo alternativo para sintaxis de bundle-assets 3\n        var data = JSON.stringify((function(model){return {devices:model.devices, connectors:model.connectors};})(model));\n\n        if(model.devices.length == 0){ // No guardar si no hay componentes\n            M.toast({html: \"No hay componentes!\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n        }else{ // Si hay al menos un componente, guardar en db\n            var sim = {\n                timestamp: Date.now(),\n                size: model.devices.length,\n                data: data, \n                name: $scope.circuitFileName\n            };\n    \n            if(currentSim.key){ // Si se esta trabajando sobre un modelo existente\n                Cipressus.db.update(sim,\"simulations/\"+currentSim.key)\n                .then(function(res){\n                    //console.log(res);   \n                    $scope.simulations[currentSim.key] = sim; // Actualizar local\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si se creo un nuevo modelo\n                sim.uid = $rootScope.user.uid;\n                Cipressus.db.push(sim,\"simulations\")\n                .then(function(res){\n                    //console.log(res);    \n                    currentSim = {\n                        key: res.key,\n                        name: sim.name\n                    };\n                    if(!$scope.simulations)\n                        $scope.simulations = {};\n                    $scope.simulations[res.key] = sim; // Agregar nueva\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }\n        }\n    };\n\n\n    $scope.analizeCircuit = function(){ // Analisis combinacional del circuito\n        // Las funciones declaradas mas abajo se ejecutan desde el final hacia arriba\n\n        // Obtener nombres de las entradas y salidas\n        var inputs = simcir.getExternalLabels(\"input\");\n        var outputs = simcir.getExternalLabels(\"output\");\n\n        // Si no hay, retornar\n        if(inputs.length == 0){\n            M.toast({html: \"El circuito no tiene entradas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n        if(outputs.length == 0){\n            M.toast({html: \"El circuito no tiene salidas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n\n        // Iniciar\n        $rootScope.loading = true;\n\n        // Cantidad de entradas y salidas (para calcular cantidad de dispositivos) \n        // (Antes de eliminar nodos repetidos)\n        var ioDevices = inputs.length + outputs.length;\n\n        // Eliminar nombres repetidos (externalPortManager sigue teniendo duplicados si se carga varias veces)\n        inputs = inputs.filter(function(value, index, self){ return self.indexOf(value) === index}); \n        //outputs = outputs.filter((value, index, self) => self.indexOf(value) === index); \n\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data();\n\n        // Objeto para mostrar resultados en modal\n        $scope.circuitDetails = {\n            model: model,\n            deviceCnt: model.devices.length - ioDevices, // Cantidad de componentes sin contar entradas y salidas\n            connectorCnt: model.connectors.length,\n            truthTable: { // Objeto para genrar la tabla de verdad en la vista\n                header:{ // Nombres de las variables de entrada y salida\n                    inputs:inputs,\n                    outputs:outputs\n                },\n                rows:[] // Combinaciones de entrada\n            },\n            expressions: [], // Funciones de salida minimizadas\n            canonMinTerm: [], // Funciones de salida canonicas suma de productos\n            canonMaxTerm: [] // Funciones de salida canonicas producto de sumas\n        };\n\n        var combMax = Math.pow(2,inputs.length); // Cantidad de combinaciones\n        var minterms = []; // Miniterminos de cada salida\n        var maxterms = []; // Maxiterminos de cada salida\n        var primeImplicants = [];\n        var minifiedExpresions = [];\n        var canonMinExpressions = [];\n        var canonMaxExpressions = [];\n\n\n        var getCanonicalExpressions = function(){ // Obtener las expresiones canonicas a partir de miniterminos y maxiterminos\n            \n            for(var k in outputs){ // Para cada funcion de salida                \n                if(!minterms[k]){ // Si no hay minterms, la funcion es siempre nula                    \n                    canonMinExpressions[k] = \"0\";\n                    canonMaxExpressions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(!maxterms[k]){ // Si no hay maxterms, la salida es siempre 1\n                    canonMinExpressions[k] = \"1\";\n                    canonMaxExpressions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n            \n                /////// Minterms\n                for(var j in minterms[k]){ // Para cada minitermino\n                    for(var t in minterms[k][j]){ // Para cada variable dentro del termino\n                        switch(minterms[k][j][t]){\n                            case \"1\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t];\n                                else\n                                    canonMinExpressions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t]+\"'\";\n                                else\n                                    canonMinExpressions[k] = inputs[t]+\"'\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMinExpressions[k] += \" + \";\n                }\n                canonMinExpressions[k] = canonMinExpressions[k].substring(0,canonMinExpressions[k].length-3);// Remover el ultimo \"+\"\n            \n                /////// Maxterms\n                for(var j in maxterms[k]){ // Para cada minitermino\n                    if(canonMaxExpressions[k])\n                        canonMaxExpressions[k] += \"(\";\n                    else\n                        canonMaxExpressions[k] = \"(\";\n                    for(var t in maxterms[k][j]){ // Para cada variable dentro del termino\n                        switch(maxterms[k][j][t]){\n                            case \"0\":\n                                canonMaxExpressions[k] += inputs[t]+\"+\";                                \n                                break;\n                            case \"1\":\n                                canonMaxExpressions[k] += inputs[t]+\"'+\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-1);// Remover el ultimo \"+\"    \n                    canonMaxExpressions[k] += \") · \";\n                }\n                canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-3);// Remover el ultimo \"·\"\n            }\n            \n\n            // Generar expresiones para mostrar en vista de analisis\n            for(var k in canonMinExpressions) \n                $scope.circuitDetails.canonMinTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMinExpressions[k];\n            for(var k in canonMaxExpressions) \n                $scope.circuitDetails.canonMaxTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMaxExpressions[k];\n            \n            // Para terminar, ocultar el preloader y mostrar el modal con resultados\n            $rootScope.loading = false;\n            results_modal.open();\n            $scope.$apply();\n        };\n\n        var getBooleanExpressions = function(){ // A partir de miniterminos y maxiterminos, devuelve las expresiones logicas\n\n            for(var k in outputs){\n                //if(minterms[k].length == 0){ // Si no hay miniterminos, la funcion es siempre nula\n                if(!minterms[k]){              // Si no hay miniterminos, la funcion es siempre nula                    \n                    minifiedExpresions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(minterms[k].length == combMax){ // Si hay tantos miniterminos como combinaciones, la salida es siempre 1\n                    minifiedExpresions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n                \n                // Si ninguno de los casos anteriores se dio, obtener implicantes primos con el metodo QMC\n                primeImplicants[k] = Cipressus.utils.getPrimeImplicants(minterms[k]);\n                for(var j in primeImplicants[k]){ // Para cada implicante                  \n                    for(var t in primeImplicants[k][j]){ // Para cada variable del implicante\n                        switch(primeImplicants[k][j][t]){\n                            case \"1\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t];\n                                else\n                                    minifiedExpresions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t]+\"'\";\n                                else\n                                    minifiedExpresions[k] = inputs[t]+\"'\";\n                                break;\n                            case \"-\":\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    minifiedExpresions[k] += \" + \";\n                }\n                minifiedExpresions[k] = minifiedExpresions[k].substring(0,minifiedExpresions[k].length-3);// Remover el ultimo \"+\"\n            }\n            //console.log($scope.circuitDetails);\n            for(var k in minifiedExpresions) // Generar expresiones para mostrar en vista de analisis\n                $scope.circuitDetails.expressions[k] = \"<b>\" + outputs[k] + \"</b>= \" + minifiedExpresions[k];\n            \n            getCanonicalExpressions();\n        };\n  \n        var evalInput = function(k){ // Evaluar entrada k-esima (en binario) (esta es una funcion recursiva)\n            var inputBin = k.toString(2).padStart(inputs.length,\"0\"); // Convertir numero de combinacion a binario\n            $scope.circuitDetails.truthTable.rows[k] = { \n                inputs: inputBin.split(\"\"), // Separar bits en arreglo\n                outputs: [] // Completar salidas despues\n            }\n            for(var j in $scope.circuitDetails.truthTable.rows[k].inputs) // Escribir entrada en el circuito del simulador\n                simcir.setInputStatus(inputs[j], $scope.circuitDetails.truthTable.rows[k].inputs[j] == \"1\");\n\n            // Esperar un poco antes de leer la salida\n            setTimeout(function(){\n                // Leer cada una de las salidas de la simulacion\n                for(var n in outputs){\n                    $scope.circuitDetails.truthTable.rows[k].outputs[n] = simcir.getOutputStatus(outputs[n]) == 1 ? \"1\":\"0\";\n                    if($scope.circuitDetails.truthTable.rows[k].outputs[n] == \"1\"){ // Si la salida es H (alto), agregar minitermino\n                        if(minterms[n])\n                            minterms[n].push(inputBin);\n                        else\n                            minterms[n] = [inputBin];\n                    }else{\n                        if(maxterms[n])\n                            maxterms[n].push(inputBin);\n                        else\n                            maxterms[n] = [inputBin];\n                    }\n                }\n                k++; // Siguiente combinacion\n                if(k < combMax) // Si quedan, pasar a la siguiente\n                    evalInput(k);\n                else // Sino, pasar a calcular las funciones\n                    getBooleanExpressions();\n            },50);    \n        };\n        evalInput(0); // Empezar por la primera\n    };\n\n    $scope.selectToDelete = function(key){ // Seleccionar circuito para eliminar\n        $scope.selected = $scope.simulations[key];\n        $scope.selected.key = key;\n        load_modal.close(); // Cerrar el modal de abrir circuito\n        setTimeout(function(){delete_modal.open()},500); // Abrir el modal de confirmacion\n    };\n\n    $scope.deleteCircuit = function(){ // Eliminar circuito\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"simulations/\"+$scope.selected.key)\n        .then(function(){\n            delete $scope.simulations[$scope.selected.key];\n            $scope.selected = null;\n            delete_modal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n\n    ///// Inicializacion del controller\n    $scope.circuitFileName = \"\";\n    var currentSim = {}; // Datos de la simulacion actual (se crean al abrir o guardar nuevo)\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n    var load_modal = M.Modal.init(document.getElementById(\"load_modal\"), {preventScrolling: false});\n    var save_modal = M.Modal.init(document.getElementById(\"save_modal\"), {preventScrolling: false});\n    var delete_modal = M.Modal.init(document.getElementById(\"delete_modal\"), {preventScrolling: false});\n    var results_modal = M.Modal.init(document.getElementById(\"results_modal\"), {preventScrolling: false});\n\n    // Inicializar simulador\n    // Para abrir simulaciones externas, se pasan por rootScope\n    if($rootScope.openSimulation){\n        var data = $rootScope.openSimulation;\n        $rootScope.openSimulation = null; // Eliminar para que no lo siga abriendo\n        $scope.loadCircuit(null,data);\n    }else{\n        simcir.setupSimcir($('#simcir'), {\n            width: document.getElementById(\"simcir\").clientWidth,\n            height: document.getElementById(\"simcir\").clientHeight\n        });\n    }\n\n    window.onresize = function(ev){ // Simulador responsive\n        // Dimensiones del card (que es responsive)\n        var w = document.getElementById('simcir').clientWidth;\n        var h = document.getElementById('simcir').clientHeight;\n        //console.log(h,w);\n        var el = document.getElementsByClassName(\"simcir-workspace\")[0]; // Div contenedor (generado por simcir)\n        el.setAttribute(\"viewBox\", \"0 0 \"+w+\" \"+h); // Dimensiones del svg\n        el.setAttribute(\"width\", w); // Escala\n        el.setAttribute(\"height\", h); \n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"simulator\").catch(function (err) {console.log(err)});\n}]);","app.controller(\"kMaps\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    qmc = new QuineMcCluskey(\"\", 2, 4, 0);\n    qmc.init();\n    karnaugh = new KarnaughMap(\"myKarnaughMap\", qmc);\n    karnaugh.init();\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n        karnaugh.setNoOfVars($scope.varsNum);\n    };\n\n    $scope.dCareChange = function() {\n        karnaugh.allowDontCares($scope.showDCares);\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"kMaps\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"tables\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n\n    };\n\n    $scope.dCareChange = function() {\n\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"tables\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"users\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n    $scope.selectedKey = null;\n    $scope.selectedIndex = null;\n    $scope.showAll = true;\n    var attendableEvents=0; // Contador de eventos para calcular asistencia\n\n    $scope.orderTag = 'name';\n    $scope.reverseOrder = false;\n\n    $scope.changeOrder = function(tag) { // Acmbiar el sentido de ordenamiento de la tabla\n        if($scope.orderTag === tag) {\n            $scope.reverseOrder = !$scope.reverseOrder;\n        } else {\n            $scope.orderTag = tag;\n            $scope.reverseOrder = false;\n        }\n    };\n\n    // Los inputs date no funcionan con ng-change entonces la actualizacion\n    // la hago programaticamente. Este es el callback de cambios\n    var onInputDateChange = function () {\n        $scope.auxiliarySubmits[this.id] = {\n            submitted: moment(this.value).unix() * 1000,\n            timestamp: Date.now(),\n            evaluator: $rootScope.user.uid\n        };\n        $scope.$apply();\n    };\n\n    $scope.viewUser = function (key) { // Selecciona un usuario de la lista para ver detalles\n        // Tambien se abre el modal con detalles desde la vista\n        $scope.selectedKey = key; // Recordar limpiar esta variable despues de usar\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        evalAttendance();\n        updatePolarPlot();\n    };\n\n    $scope.selectUser = function(key) { // Seleccionar usuario para aprobar inscripcion a un curso\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        confirmEnrollModal.open();\n    };\n\n    var evalAttendance = function(){ // Calcular asistencia del alumno seleccionado\n        if($scope.users[$scope.selectedIndex].scores){\n            if($scope.users[$scope.selectedIndex].attendance){ // Calcular asistencia aquí (solo se usa para mostrar pero no se guarda en db)\n                var userAttendedEvents = Object.getOwnPropertyNames($scope.users[$scope.selectedIndex].attendance).length; // Cantidad de clases asistidas por el usuario\n                var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0;\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: parseInt(att.toFixed(2)), // Calcular porcentaje de asistencia\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };                                \n            }else{ // Si no asistió a nada, entonces la asistencia queda en 0\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: 0,\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };\n            }   \n        }\n    };\n\n    var updatePolarPlot = function(){ // Actualizar grafico de notas del alumno seleccionado\n        var data = []; // Datos para mostrar en el grafico polar\n        // Buscar nodo de la actividad seleccionada\n        $scope.currentNode = Cipressus.utils.searchNode($scope.activitiesTree,\"final\");         \n        var value = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode)/$scope.currentNode.score*100;        \n        $scope.currentActivityScores = { // Para detallar textualmente\n            name: $scope.currentNode.name,\n            points: ($scope.currentNode.score*value/100).toFixed(2), \n            score: value.toFixed(2),\n            children:[] // Asjuntar los nodos hijos\n        };\n        for(k in $scope.currentNode.children){ // Para cada sub actividad\n            // Calcular nota de las sub actividades\n            var subValue = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode.children[k])/$scope.currentNode.children[k].score*100;\n            // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n            $scope.currentActivityScores.children.push({\n                name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                score: subValue.toFixed(2) // Nota en porcentaje\n            });\n            data.push({ // Agregar nota de esa actividad a los datos para el chart\n                y: $scope.currentNode.children[k].score,\n                z: parseInt(subValue.toFixed(2)),\n                name: $scope.currentNode.children[k].name\n            })\n        }\n        Highcharts.chart('variable_pie_container', {\n            chart: {type: 'variablepie',height: '100%'},\n            title: {text: 'Calificaciones'},\n            tooltip: {\n                headerFormat: '',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                    'Nota actividad: <b>{point.z}%</b><br/>'\n            },\n            series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n        });\n    };\n\n    $scope.enrollUser = function () { // Aprobar usuario como alumno\n        var user_private = { // Objeto a subir\n            admin: false,\n            course: $rootScope.user.course, // El ID del curso del admin que esta dando de alta\n            enrolled: Date.now()\n            // scores y submits se completan a medida que apruebe actividades\n        };\n        if($scope.selectedKey){ // Habria que agregar un mejor control de la key que se esta escribiendo\n            $rootScope.loading = true;\n            Cipressus.db.update(user_private, \"users_private/\" + $scope.selectedKey)\n                .then(function (snapshot) {\n                    // Copiar atributos para actualizar vista\n                    $scope.users[$scope.selectedIndex].admin = false;\n                    $scope.users[$scope.selectedIndex].enrolled = user_private.enrolled;\n                    M.toast({\n                        html: \"Listo!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2000\n                    });\n                    confirmEnrollModal.close();\n                    // #NOTIFICAR USUARIO\n                    $scope.selectedKey = null; // Deseleccionar user\n                    $scope.selectedIndex = null;\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n        }\n    };\n\n    $scope.evalUser = function (key) { // Preparar para ingresar calificaciones al usuario seleccionado\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n\n        evalAttendance(); // Calcular asistencia automáticamente\n\n        // Generar arreglos auxiliares para no sobreescribir el original\n        $scope.auxiliaryScores = {};\n        for (var k in $scope.users[$scope.selectedIndex].scores) // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliaryScores[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].scores[k].evaluator,\n                score: $scope.users[$scope.selectedIndex].scores[k].score,\n                timestamp: $scope.users[$scope.selectedIndex].scores[k].timestamp\n            };\n        $scope.auxiliarySubmits = {};\n        for (var k in $scope.users[$scope.selectedIndex].submits) { // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliarySubmits[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].submits[k].evaluator,\n                submitted: $scope.users[$scope.selectedIndex].submits[k].submitted,\n                timestamp: $scope.users[$scope.selectedIndex].submits[k].timestamp\n            };\n        }\n\n        // Inicializo los listeners de inputs date aca porque no pude usar ni ng-model ni ng-change\n        for (var k in $scope.activities)\n            if ($scope.activities[k].dl) { // Si la actividad tiene vencimiento\n                if ($scope.auxiliarySubmits[$scope.activities[k].id]) // Si la actividad fue entregada/evaluada\n                    document.getElementById($scope.activities[k].id).value = moment($scope.auxiliarySubmits[$scope.activities[k].id].submitted).format(\"YYYY-MM-DD\");\n                else // Si no borrarla\n                    document.getElementById($scope.activities[k].id).value = '';\n                document.getElementById($scope.activities[k].id).removeEventListener(\"change\", onInputDateChange); // Lo quito para no duplicar\n                document.getElementById($scope.activities[k].id).addEventListener(\"change\", onInputDateChange);\n            }\n        scoresModal.open(); // Lo hago aca porque se hace lio con los trigger de materialize\n    };\n\n    $scope.getCost = function (key) { // Calcular el costo por perdida de vencimiento de una actividad\n        if ($scope.activities[key] && $scope.auxiliarySubmits) { // Si ya existen los arreglos, usarlos\n            if ($scope.auxiliarySubmits[$scope.activities[key].id]) { // Control de coherencia\n                if ($scope.auxiliarySubmits[$scope.activities[key].id].submitted > $scope.activities[key].dl.date) { // Si paso el vencimiento\n                    // Calcular costo\n                    var cost = Cipressus.utils.defaultCostFunction($scope.auxiliarySubmits[$scope.activities[key].id].submitted, $scope.activities[key].dl.date, $scope.activities[key].dl.param);\n                    if (cost > $scope.activities[key].score) // El costo no puede superar el puntaje maximo\n                        return $scope.activities[key].score;\n                    else // Si no supera, retornar el valor\n                        return cost.toFixed(2);\n                } else // Si no paso el vencimiento, el costo es nulo\n                    return 0;\n            }\n        }\n    };\n\n    $scope.deleteSubmit = function (key) { // Esta se llama al eliminar una nota oprimiendo en el logo de usuario\n        // Para el caso de notas puedo quitar con instrucciones dentro del ng-click pero para este no\n        document.getElementById(key).removeEventListener(\"change\", onInputDateChange); // Lo quito para que no dispare al cambiar valor\n        document.getElementById(key).value = ''; // Limpiar input date\n        $scope.auxiliarySubmits[key] = null; // Borrar timestamp, evaluator y submitted\n        document.getElementById(key).addEventListener(\"change\", onInputDateChange); // Vuelvo a habilitar\n    }\n\n    $scope.saveScores = function () { // Guardar el formulario de notas\n        $rootScope.loading = true;\n        var obj = {}; // Objeto a actualizar en DB\n        obj.scores = $scope.auxiliaryScores;\n        obj.submits = $scope.auxiliarySubmits;\n        Cipressus.db.update(obj, \"users_private/\" + $scope.selectedKey)\n            .then(function (snapshot) {\n\n                // #NOTIFICAR USUARIO\n\n                $scope.users[$scope.selectedIndex].scores = $scope.auxiliaryScores;\n                $scope.users[$scope.selectedIndex].submits = $scope.auxiliarySubmits;\n                scoresModal.close();\n                // Borrar los datos temporales\n                $scope.selectedIndex = null;\n                $scope.auxiliaryScores = null;\n                $scope.auxiliarySubmits = null;\n                M.toast({\n                    html: \"Calificaciones actualizadas\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"No se pudo guardar\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    ///// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {\n        preventScrolling: false\n    });\n    var messageModal = M.Modal.init(document.getElementById(\"message_modal\"), {\n        preventScrolling: false\n    });\n    var confirmEnrollModal = M.Modal.init(document.getElementById(\"confirm_enroll_modal\"), {\n        preventScrolling: false\n    });\n    var scoresModal = M.Modal.init(document.getElementById(\"scores_modal\"), {\n        preventScrolling: false,\n        dismissible: false\n    });\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"users\").catch(function (err) {\n        console.log(err)\n    });\n\n    $scope.users = [];\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\n        .then(function (users_public_data) {\n            // Convertir objeto a arreglo y copiar claves\n            $scope.getUserIndex = {}; // Arreglo para mapear uid a indice de arreglo\n            for(var k in users_public_data){\n                $scope.users.push(users_public_data[k]);\n                $scope.users[$scope.users.length-1].key = k;\n                $scope.getUserIndex[k] = $scope.users.length-1; // Mapear indice\n            }\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\n                .then(function (users_private_data) {\n                    // Mezclar los atributos\n                    console.log($scope.users);\n                    for (var k in users_private_data)\n                        for (var j in users_private_data[k]){ // Dos niveles de entrada\n                            $scope.users[$scope.getUserIndex[k]][j] = users_private_data[k][j];\n                        }\n                    // Descargar lista de actividades\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\n                        .then(function (activities_data) {\n                            $scope.activitiesTree = activities_data;\n                            $scope.activities = Cipressus.utils.getArray(activities_data);                            \n                            Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                            .then(function(events_data){\n                                events_data.forEach(function(childSnapshot){\n                                    var ev = childSnapshot.val();                                    \n                                    if(ev.start <= Date.now() && ev.attendance) // Si es un evento pasado y con asistencia obligatoria\n                                        attendableEvents++; // Contar para calcular porcentaje de asistencia \n                                });                                \n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            })\n                            .catch(function(err){ // events\n                                console.log(err);\n                                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            });\n                        })\n                        .catch(function (err) {\n                            console.log(err);\n                            M.toast({\n                                html: \"Ocurrió un error al acceder a la base de datos\",\n                                classes: 'rounded red',\n                                displayLength: 2000\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                        });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n\n}]);","app.controller(\"stats\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    var scatter_data = {}; // Arreglo de datos para graficos de correlacion\r\n\r\n    var updateScoreBarPlot = function () { // Genera los arreglos de calificaciones\r\n\r\n        var seriesData = [];\r\n        var drillDownData = [];\r\n\r\n        for (var k in $scope.users) { // Para cada usuario\r\n            if (!$scope.users[k].admin && $scope.users[k].scores && !$scope.users[k].excludeStat) { // Si tiene notas y no es admin y no queda excluido\r\n                var sc = Cipressus.utils.eval($scope.users[k], $scope.activities) / $scope.activities.score * 100;\r\n                scatter_data[k] = { // Este dato se emplea luego para el grafico de correlacion de notas vs actividad\r\n                    score: sc,\r\n                    activity: 0,\r\n                    attendance: $scope.users[k].scores.asistencia.score\r\n                };\r\n                seriesData.push({ // Evaluar e insertar resultado en array\r\n                    name: $scope.users[k].secondName,\r\n                    y: sc,\r\n                    drilldown: k\r\n                });\r\n\r\n                var tempData = []; // Arreglo temporal con notas del alumno\r\n                for (var j in $scope.activities.children) { // Evaluar tambien las principales actividades\r\n                    tempData.push([\r\n                        $scope.activities.children[j].id,\r\n                        Cipressus.utils.eval($scope.users[k], $scope.activities.children[j]) / $scope.activities.children[j].score * 100\r\n                    ]);\r\n                }\r\n\r\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\r\n                    name: $scope.users[k].secondName,\r\n                    id: k,\r\n                    data: tempData\r\n                })\r\n            }\r\n        }\r\n\r\n        seriesData.sort(function(a, b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0) });\r\n\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                drillUpText: '<< Volver a {series.name}'\r\n            }\r\n        });\r\n\r\n        Highcharts.chart('score_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '75%'\r\n            },\r\n            title: {\r\n                text: 'Calificaciones del curso'\r\n            },\r\n            xAxis: {\r\n                type: 'category'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Puntaje acumulado'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y:.1f}%'\r\n                    }\r\n                }\r\n            },\r\n\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b>'\r\n            },\r\n\r\n            series: [{\r\n                name: \"Alumno\",\r\n                colorByPoint: true,\r\n                data: seriesData\r\n            }],\r\n            drilldown: {\r\n                colorByPoint: true,\r\n                series: drillDownData\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    $scope.drillUp = function () {\r\n        $(\"#score_barplot_container\").highcharts().drillUp();\r\n    };\r\n\r\n    var updateAttendancePlot = function () {\r\n        var seriesData = [];\r\n        var categories = []; // Lista de fechas de los eventos\r\n\r\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\r\n        for (var j in $scope.users) { // Para cada usuario, calcular progreso de asistencia\r\n            if ($scope.users[j].attendance && !$scope.users[j].excludeStat) {\r\n                var data = []; // Asistencia acumulada por clase\r\n                var evCnt = 0; // Contador de eventos\r\n                var evAtt = 0; // Contador de eventos asistidos\r\n                for (var k in $scope.events) {\r\n                    if ($scope.events[k].start < Date.now() && $scope.events[k].attendance) { // Solo eventos pasados y de asistencia obligatoria\r\n                        evCnt++; // Contar evento\r\n                        if ($scope.users[j].attendance[k]) // Si asistio a esta clase\r\n                            evAtt++;\r\n                        if (evAtt != 0)\r\n                            data.push(Math.round(evAtt / evCnt * 10000) / 100); // Redondear a dos digitos\r\n                        else\r\n                            data.push(0);\r\n                        if (first) // Primera pasada\r\n                            categories.push($rootScope.getTime(3,$scope.events[k].start)); // Agregar evento a la lista\r\n                    }\r\n                }\r\n                first = false;\r\n                seriesData.push({\r\n                    data: data,\r\n                    name: $scope.users[j].secondName\r\n                })\r\n            }\r\n        }\r\n\r\n        Highcharts.chart('attendance_container', {\r\n            chart: {\r\n                type: 'spline',\r\n                height: '70%'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: 'Asistencia a clases'\r\n            },\r\n            xAxis: {\r\n                categories: categories\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateTechPie = function () { // Tecnologias utilizadas mas frecuentemente\r\n        // Calcular uso de navegadores        \r\n        var totalBr = 0; // Cantidad total de datos naveg.\r\n        var totalOs = 0; // Cantidad total de datos so\r\n        var br = { // Contadores de accesos con navegadores\r\n            Firefox: 0,\r\n            Chrome: 0,\r\n            IE: 0,\r\n            Opera: 0,\r\n            Safari: 0,\r\n            Otro: 0\r\n        };\r\n        var os = { // Contadores de accesos con navegadores\r\n            Windows: 0,\r\n            Linux: 0,\r\n            IOS: 0,\r\n            Android: 0,\r\n            Otro: 0\r\n        };\r\n        for (var k in $scope.users)\r\n            if (!$scope.users[k].admin && !$scope.users[k].excludeStat) {\r\n                for (var j in $scope.users[k].activity.browser) {\r\n                    br[j] += $scope.users[k].activity.browser[j];\r\n                    totalBr += $scope.users[k].activity.browser[j];\r\n                }\r\n                for (var j in $scope.users[k].activity.os) {\r\n                    os[j] += $scope.users[k].activity.os[j];\r\n                    totalOs += $scope.users[k].activity.os[j];\r\n                }\r\n            }\r\n\r\n        /* // Esta porcion da error cuando se ejecuta por segunda vez (al cambiar de vista y volver)\r\n        Highcharts.setOptions({ // Gradiente de colores\r\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n                return {\r\n                    radialGradient: {\r\n                        cx: 0.5,\r\n                        cy: 0.3,\r\n                        r: 0.7\r\n                    },\r\n                    stops: [\r\n                        [0, color],\r\n                        [1, Highcharts.Color(color).brighten(-0.3).get('rgb')]\r\n                    ]\r\n                };\r\n            })\r\n        });\r\n        */\r\n\r\n        Highcharts.chart('browser_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de navegadores'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Chrome',\r\n                        y: br.Chrome / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Firefox',\r\n                        y: br.Firefox / totalBr\r\n                    },\r\n                    {\r\n                        name: 'IE',\r\n                        y: br.IE / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Opera',\r\n                        y: br.Opera / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Safari',\r\n                        y: br.Safari / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: br.Otro / totalBr\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('so_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de S.O.'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Windows',\r\n                        y: os.Windows / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Linux',\r\n                        y: os.Linux / totalOs\r\n                    },\r\n                    {\r\n                        name: 'IOS',\r\n                        y: os.IOS / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Android',\r\n                        y: os.Android / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: os.Otro / totalOs\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateMenuAccessPlot = function () {\r\n\r\n        var itemCntr = { // Nombres de las secciones en db\r\n            home: 'Inicio',\r\n            dashboard: 'Dashboard',\r\n            calendar: 'Cronograma',\r\n            sources: 'Material',\r\n            submissions: 'Entregas',\r\n            simulator: 'Simulador',\r\n            hardware: 'Probador',\r\n            profile: 'Perfil'\r\n        };\r\n\r\n        // Secciones\r\n        var categoriesData = []; // Nombres de los alumnos\r\n        var seriesData = []; // Datos a graficar\r\n        var first = true; // Primera pasada por lista de usuarios\r\n        for (var j in itemCntr) { // Para cada seccion\r\n            var data = []; // Accesos a la seccion actual por usuario\r\n            for (var k in $scope.users) // Para cada usuario\r\n                if (!$scope.users[k].admin && !$scope.users[k].excludeStat) { // Usuarios sobre los que se realiza estadistica\r\n                    if (first) // En la primera pasada, agregar la lista de nombres\r\n                        categoriesData.push($scope.users[k].secondName); // Agregar alumno a la lista\r\n                    if ($scope.users[k].activity.items[j]) { // Si tiene accesos a esta seccion\r\n                        data.push($scope.users[k].activity.items[j]) // Agregar valor\r\n                    } else { // Sino, el contador es 0\r\n                        data.push(0);\r\n                    }\r\n                    // Registrar cantidad de accesos (solo usuarios con nota)\r\n                    if (j == 'home' && $scope.users[k].scores) // Los accesos a home equivale a la cantidad de logueos\r\n                        scatter_data[k].activity = $scope.users[k].activity.items.home;\r\n                }\r\n            seriesData.push({\r\n                name: itemCntr[j],\r\n                data: data\r\n            });\r\n            first = false;\r\n        }\r\n\r\n        Highcharts.chart('items_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '150%'\r\n            },\r\n            title: {\r\n                text: 'Uso de herramientas'\r\n            },\r\n            xAxis: {\r\n                categories: categoriesData,\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: 'Accesos',\r\n                    align: 'high'\r\n                },\r\n                labels: {\r\n                    overflow: 'justify'\r\n                }\r\n            },\r\n            tooltip: {\r\n                valueSuffix: ' accesos'\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    dataLabels: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'top',\r\n                x: -40,\r\n                y: 80,\r\n                floating: true,\r\n                borderWidth: 1,\r\n                backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n                shadow: true\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateScatterPlot = function () { // Espacio para variables correlacionadas\r\n        var seriesData1 = [];\r\n        var seriesData2 = [];\r\n        for (var k in scatter_data){\r\n            seriesData1.push([scatter_data[k].score,scatter_data[k].activity]);\r\n            seriesData2.push([scatter_data[k].score,scatter_data[k].attendance]);\r\n        }\r\n\r\n        Highcharts.chart('scatterplot_container1', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs actividad'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Accesos'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} accesos'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(223, 83, 83, .5)',\r\n                data: seriesData1\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('scatterplot_container2', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs asistencia'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Asistencia'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} %'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(83, 83, 223, .5)',\r\n                data: seriesData2\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateProfilesPlot = function(){ // Mostrar un grafico de barras para el test de FS con los datos promedios\r\n        var avgScales = [0,0,0,0]; // Valores promedios de las escalas\r\n        var dataCnt = 0; // Cantidad de individuos\r\n        for(var k in $scope.users){ // Calcular promedio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes\r\n                        avgScales[j] += scales[j];\r\n                }\r\n        }\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            avgScales[j] = Math.round(avgScales[j]/dataCnt*100)/100;\r\n\r\n        // Calcular desvio estandar\r\n        var stdScales = [0,0,0,0];\r\n        for(var k in $scope.users){ // Calcular desvio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes de la ecuacion de desvio\r\n                        stdScales[j] += (scales[j]-avgScales[j])*(scales[j]-avgScales[j]); // Suma de diferencias cuadraticas\r\n                }\r\n        }\r\n\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            stdScales[j] = Math.round(Math.sqrt(stdScales[j]/dataCnt)*100)/100; // Formula std (redondeo 2 decimales)\r\n\r\n        for (var k = 0; k < 4; k++) {\r\n            var elem = document.getElementById(\"scale_\" + k);\r\n            var width = 2*Math.abs(avgScales[k]) * 50 / 11; //(50% hacia los costados dividido 11 puntaje max)\r\n            elem.style.width = width + '%';\r\n            if (avgScales[k] < 0) {\r\n                elem.style.marginLeft = 50 - width + '%';\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\r\n            } else {\r\n                elem.style.marginLeft = \"50%\";\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\r\n            }\r\n            elem.innerHTML = Math.abs(avgScales[k])+\" &#177;\"+stdScales[k];\r\n        }\r\n    };\r\n\r\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\r\n        .then(function (users_public_data) {\r\n            $scope.users = users_public_data;\r\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\r\n                .then(function (users_private_data) {\r\n                    // Mezclar los atributos\r\n                    // #TODO listar solo usuarios del curso actual\r\n                    for (var k in users_private_data) // Para cada usuario\r\n                        for (var j in users_private_data[k]) // Para cada atributo del usuario actual\r\n                            $scope.users[k][j] = users_private_data[k][j];\r\n                    // Descargar lista de actividades\r\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\r\n                        .then(function (activities_data) {\r\n                            $scope.activities = activities_data;\r\n                            Cipressus.db.get('events/'+$rootScope.user.course) // Descargar la lista de clases\r\n                                .then(function (events_data) {\r\n                                    $scope.events = events_data;\r\n                                    updateScoreBarPlot(); // Cargar los datos al grafico de barras                    \r\n                                    updateAttendancePlot(); // Actualizar grafico de asistencia\r\n                                    updateTechPie(); // Mostrar estadisticas de uso                            \r\n                                    updateMenuAccessPlot(); // Estadisticas de uso de alumnos\r\n                                    updateScatterPlot(); // Grafico de correlacion entre variables\r\n                                    updateProfilesPlot(); // Perfil promedio y desvio\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                });                            \r\n                        })\r\n                        .catch(function (err) { // activities\r\n                            console.log(err);\r\n                            M.toast({\r\n                                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                classes: 'rounded red',\r\n                                displayLength: 2000\r\n                            });\r\n                            $rootScope.loading = false;\r\n                            $scope.$apply();\r\n                        });\r\n                })\r\n                .catch(function (err) { // users_private\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n        })\r\n        .catch(function (err) { // users_public\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                classes: 'rounded red',\r\n                displayLength: 2000\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n}]);","app.controller(\"attendance\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.updateLists = function(){ // En base a la fecha seleccionada se generan las listas de ausentes y presentes\n        if($scope.changes){ // Si hubo cambios, preguntar si guardar antes de borrar\n            confirmModal.open();\n            return;\n        } \n        \n        $scope.absents = []; // Lista con id de usuarios ausentes al evento actual\n        $scope.presents = []; // Lista de presentes\n        for(var k in $scope.users){ // Recorrer lista de usuarios\n            if(!$scope.users[k].admin){ // A los usuarios admin no se les computa asistencia\n                if($scope.users[k].attendance){ // Si el usuario asistio a alguna clase\n                    if($scope.users[k].attendance[$scope.selectedEventKey]) // Si tiene el evento actual\n                        $scope.presents.push(k); // Marcar alumno como presente\n                    else // Si no tiene el evento actual\n                        $scope.absents.push(k); // Agregar a lista de ausentes\n                }else // Si no asistio a ningun evento, marcar como ausente \n                    $scope.absents.push(k); // Agregar a lista de ausentes\n            }\n        }\n\n        $scope.$apply();\n    };\n\n    $scope.isPresent = function(idx){ // Mover el user key a lista de ausentes\n        $scope.changes = true;\n        $scope.presents.push($scope.absents[idx]); // Agregar a prsentes\n        $scope.absents.splice(idx,1); // Quitar de ausentes\n    };\n\n    $scope.isAbsent = function(idx){ // Mover el user key a la lista de presentes\n        $scope.changes = true;\n        $scope.absents.push($scope.presents[idx]); // Agregar a ausentes\n        $scope.presents.splice(idx,1); // Quitar de presentes\n    };\n\n    $scope.saveList = function(){ // Guardar la lista de presentes\n        var updates = {};\n        for(var k in $scope.presents){ // Guardar referencia al evento actual en la entrada del usuario\n            var value = { // A insertar para marcar asistencia\n                evaluator: $rootScope.user.uid,\n                timestamp: Date.now()\n            };\n            updates[\"users_private/\"+$scope.presents[k]+\"/attendance/\"+$scope.selectedEventKey] = value;\n            // Actualizar objeto local\n            if(!$scope.users[$scope.presents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.presents[k]].attendance = {}\n            $scope.users[$scope.presents[k]].attendance[$scope.selectedEventKey] = value;\n        }\n        for(var k in $scope.absents){ // Quitar referencia en la entrada del usuario\n            updates[\"users_private/\"+$scope.absents[k]+\"/attendance/\"+$scope.selectedEventKey] = null;\n            if(!$scope.users[$scope.absents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.absents[k]].attendance = {}\n            $scope.users[$scope.absents[k]].attendance[$scope.selectedEventKey] = null;\n        }\n\n        // Guardar cambios\n        Cipressus.db.update(updates)\n        .then(function(snapshot){\n            M.toast({html: \"Cambios guardados!\",classes: 'rounded green darken-3 darken-3',displayLength: 1500});        \n            $rootScope.loading = false;\n            $scope.changes = false;\n            $scope.$apply();\n            confirmModal.close();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al actualizar cambios\",classes: 'rounded red',displayLength: 2000});        \n        });\n\n    };\n    \n    //// Inicializacion //// \n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"attendance\").catch(function(err){console.log(err)});\n\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false});\n    document.getElementById(\"event_select\").addEventListener(\"change\",function(){ // No se puede poner en ng-change\n        $scope.selectedEventKey = this.value;\n        $scope.updateLists();\n    });\n    \n    Cipressus.db.getSorted(\"events/\"+$rootScope.user.course,\"start\") // Descargar todos los eventos ordenados por fecha\n    .then(function(events_data){\n        $scope.events = {}; // Lista de eventos que completo dentro del iterator\n        // Tengo que buscar el evento que acaba de empezar (para usar en la clase actual por ejemplo)\n        var today = Date.now(); // Ahora\n        var nextKey = \"\"; // En esta variable dejo el key del evento que pongo por defecto        \n        events_data.forEach(function(childSnapshot){ // Lista ordenada de menor a mayor (esto no es asincrono)            \n            key = childSnapshot.ref_.path.pieces_[2]; // Esto seria el key (#HARDCODED el 2 es porque son dos niveles de keys dentro del arbol\n            $scope.events[key] = childSnapshot.val(); // Hago push del evento (no se puede mandar todos de una)\n            if($scope.events[key].start < today) // Los eventos futuros ya no los guardo\n                nextKey = key; // Guardo el key del evento\n            \n        });        \n        $scope.$apply(); // Hay que actualizar dom antes de inicializar el select\n        document.getElementById(\"event_select\").value = nextKey; // Seleccionar el valor defecto del select\n        $scope.selectedEventKey = nextKey; // Para actualizar la tabla una vez que tenga los usuarios\n        M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n        Cipressus.db.get(\"users_private\") // Descargar lista de usuarios\n        .then(function(users_private_data){\n            $scope.users = {};\n            for(var k in users_private_data) \n                if(users_private_data[k].course == $rootScope.user.course) // Solo tomo los del curso actual\n                    $scope.users[k] = users_private_data[k];\n            Cipressus.db.get(\"users_public\") // Descargar datos de usuario\n            .then(function(users_public_data){\n                for(var k in users_public_data) // Los datos de usuario para listar\n                    if($scope.users[k]) // Si este usuario esta en lista de habilitados\n                        $scope.users[k].data = users_public_data[k]; \n                $scope.updateLists(); // Como ya tengo el selectedEventKey, puedo generar las listas para ese dia\n                $rootScope.loading = false;\n                $scope.changes = false; // Para habilitar el boton de guardar\n                $scope.$apply();    \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            });        \n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n        });        \n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });    \n\n}]);","app.controller(\"activities\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function (node) { // Graficar sunburst\n\n        var data = Cipressus.utils.getArray(node); // Obtener el formato que requiere el grafico\n\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '90%'},\n            title: {text: 'Proporción de calificaciones'},\n            subtitle: {text: $scope.activities.course.name},\n            credits: {enabled: false},\n            plotOptions: {\n                series: {\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            //console.log(event.point.node.id);\n                            var node = Cipressus.utils.searchNode($scope.activities, event.point.node.id); \n                            if(node)\n                                $scope.selectActivity(node, false, true);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",\n                id: \"Activities\",\n                data: data,\n                allowDrillToNode: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    format: '{point.name}',\n                    filter: {property: 'innerArcLength',operator: '>',value: 16}\n                },\n                levels: [{\n                        level: 1,\n                        levelIsConstant: false,\n                        dataLabels: {\n                            filter: {property: 'outerArcLength',operator: '>',value: 64}\n                        }\n                    },\n                    {\n                        level: 2,\n                        colorIndex: 1\n                    },\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}\n                }]\n\n            }],\n            tooltip: {\n                headerFormat: \"\",\n                pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'\n            }\n        });\n    };\n\n    var tree = null; // Global\n\n    var updateTree = function () {\n        \n        if (tree !== null) {\n            tree.destroy();\n            tree = null;\n        }\n\n        var data = Cipressus.utils.getTree($scope.activities); // Obtener esquema en formato de arbol jerarquico para vis.js\n\n        var container = document.getElementById('tree_container');\n        var options = {            \n            layout: {\n                hierarchical: {\n                    direction: \"UD\"\n                }\n            }\n        };\n\n        tree = new vis.Network(container, data, options);\n\n        /*\n        tree.once('afterDrawing', function() {\n            container.style.height = '75vh'\n        });\n        */\n\n        tree.on('select', function (params) { // Callback de seleccion de nodos del arbol\n            var node = Cipressus.utils.searchNode($scope.activities, params.nodes[0]); \n            if(node)\n                $scope.selectActivity(node, true, true);\n        });\n    };\n\n    $scope.selectActivity = function(node, update_sunburst, apply){ // Selecciona un nodo\n        if(node){ // Checkeo de validez\n            if($scope.selectedHistory)\n                $scope.selectedHistory.push($scope.selectedNode);\n            else\n                $scope.selectedHistory = [$scope.selectedNode];\n\n            $scope.selectedNode = node;\n\n            if(update_sunburst)\n                updateSunburst(node);\n            \n            if(apply)\n                $scope.$apply();\n            M.updateTextFields();\n        }\n    };\n\n    $scope.selectPreviousActivity = function(){ // Callback de boton para volver hacia atras la seleccion\n        if($scope.selectedHistory){\n            var node = $scope.selectedHistory.pop(); // Devuelve el anterior al actual y lo quita\n            // De aca en adelante es lo mismo que $scope.selectActivity pero sin insertar en el historial\n            if(node){\n                $scope.selectedNode = node;\n                updateSunburst(node);\n                M.updateTextFields();\n            }\n        }\n    };\n    \n    var courseID = $location.$$search.id;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"activities\", courseID).catch(function (err) {\n        console.log(err);\n    });\n\n    //console.log(courseID);\n\n    $rootScope.loading = true;\n    if(courseID){\n        Cipressus.db.get('activities/' + courseID) // Descargar arbol de actividades\n        .then(function (data) {\n            $scope.activities = data;\n\n            updateSunburst($scope.activities);\n            updateTree();\n            $scope.selectedNode = angular.copy($scope.activities);\n            $scope.selectedHistory = [$scope.selectedNode]; // Historial para hacer drillup\n\n            M.updateTextFields();\n            $rootScope.loading = false;\n            $rootScope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n    }else{\n        $scope.activities = {\n            childres:[],\n            course:{\n                start: Date.now(),\n                end: Date.now()+9504000000,\n                name: \"Nuevo curso\"\n            },\n            id: \"final\",\n            name: \"Nota final\",\n            score: 100\n        };\n        $scope.selectedNode = angular.copy($scope.activities);\n        updateSunburst($scope.activities);\n        updateTree();\n        $rootScope.loading = false;\n    }\n\n}]);\n\n","app.controller(\"courses\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n    \n    // Modal de confirmacion de eliminacion de curso\n    var deleteCourseModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); \n\n\n    // Registrar actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"courses\").catch(function (err) {\n        console.log(err)\n    });\n\n    // Eliminación de curso\n    $scope.deleteCourse = function(key){\n        if(key){ // Si se pasa clave, abrir modal para confirmar\n            $scope.selectedCourseKey = key;\n            $scope.selectedCourseIndex = $scope.courses.findIndex(function(el){return el.key == key});\n            deleteCourseModal.open();\n        }else{ // Si no tiene clave (key == null), es confirmacion de eliminacion del curso seleccionado\n            if($scope.selectedCourseKey){ // Debe estar definido\n\n            }else{\n                M.toast({html: \"La clave de curso no es válida.\",classes: 'rounded red',displayLength: 2000});\n            }\n        }\n    }\n\n    // Descargar informacion sobre los cursos\n    Cipressus.db.get(\"metadata/courses\") // Descargar datos de los cursos disponibles\n    .then(function(courses){\n        $scope.courses = [];\n        for(var k in courses){\n            courses[k].key = k;\n            $scope.courses.push(courses[k]);\n        }\n        //console.log($scope.courses);\n        $rootScope.loading = false;\n        $rootScope.$apply();\n        M.FormSelect.init(document.querySelectorAll('select'), {});\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n    });\n\n}]);","app.controller(\"editor\", ['$scope','$rootScope','$location','localStorageService', function ($scope,$rootScope,$location,localStorageService) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.select = function(key){ // Seleccionar noticia para ver, editar o borrar\n        // Aunque no edite se inicializa el editor igual. Para evitarlo hay que meter esto en otra funcion\n        var quilleditor = document.createElement(\"div\"); // Crear el contenedor cada vez para reiniciar\n        quilleditor.id = \"quill\";\n        document.getElementById(\"quill_container\").innerHTML = \"\";\n        document.getElementById(\"quill_container\").appendChild(quilleditor);            \n        quill = new Quill('#quill', { // Controlador del editor (inicializo cada vez)\n            modules: {            \n                toolbar: [ // Botones de la barra de tareas\n                    ['bold', 'italic', 'underline', 'strike'],        \n                    [{ 'size': ['small', false, 'large', 'huge'] }], \n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],            \n                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                    [{ 'script': 'sub'}, { 'script': 'super' }],      \n                    [{ 'indent': '-1'}, { 'indent': '+1' }],         \n                    [{ 'direction': 'rtl' }],                         \n                    [{ 'color': [] }, { 'background': [] }],          \n                    [{ 'font': [] }],\n                    [{ 'align': [] }],\n                    ['link', 'image'],\n                    ['clean']                                         \n                ],\n                imageResize: {} // Este funciona con un script adicional\n            },\n            theme: 'snow'\n        });        \n        if(key != undefined){ // Editar, ver o eliminar existente\n            $scope.selected = angular.copy($scope.news[key]);\n            quill.container.firstChild.innerHTML = $scope.selected.content;\n        }else{ // Editar nueva\n            quill.container.firstChild.innerHTML = \"\";\n            $scope.selected = {\n                title: \"\",\n                content: \"\",\n                order: $scope.news.length,\n                timestamp: 0,\n                author: $rootScope.user.uid\n            }\n        }\n    };\n\n    var updateTimestamp = function(){ // Actualizar fecha de actualizacion de noticias en db\n        var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\n        Cipressus.db.update(ts,\"metadata/updates/news\")\n        .then(function(){\n            console.log(\"Actualización de metadata\");\n            // Actualizar informacion en localstorage\n            newsData = { // Objeto a guardar en localStorage\n                news: $scope.news,\n                authors: $scope.users,\n                last_update: Date.now()\n            };\n            localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    $scope.deleteSelected = function(){ // Borrar noticia seleccionada\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"news/\"+$rootScope.user.course+\"/\"+$scope.selected.key)\n        .then(function(snapshot){\n            $scope.news.splice($scope.selected.order,1); // Quitar del view\n            // Actualizar orden de cada elemento\n            var updates = {};\n            for(k in $scope.news){ \n                $scope.news[k].order = parseInt(k);\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[k].key+\"/order\"] = parseInt(k);\n            }\n            Cipressus.db.update(updates)\n            .then(function(snapshot){\n                M.toast({html: \"Listo!\",classes: 'rounded green darken-3',displayLength: 1000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                $rootScope.loading = false;\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            $rootScope.loading = false;\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n        updateTimestamp();\n        confirmModal.close();\n    };\n\n    $scope.moveSelected = function(up, key){ // Mover noticia hacia arriba(true) o abajo(false). key es el numero de elemento\n        if(up){ // Subir\n            if(key > 0){ // No puede subirse el primero\n                $rootScope.loading = true;\n                var updates = {};\n                // Hacer un swap con el de arriba\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order - 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key-1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates)\n                .then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order-1;\n                    $scope.news[key-1].order = $scope.news[key-1].order+1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key-1]);\n                    $scope.news[key-1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }\n        }else{ // Bajar\n            if(key < $scope.news.length - 1){ // No puede bajarse el ultimo\n                console.log($scope.news[key].key);\n                console.log($scope.news[key+1].key);\n                $rootScope.loading = true;\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order + 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key+1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates).then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order + 1;\n                    $scope.news[key+1].order = $scope.news[key+1].order - 1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key+1]);\n                    $scope.news[key+1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                }); \n            }\n        }\n        updateTimestamp();\n    };\n\n    $scope.saveSelected = function(){ // Guardar nueva noticia o guardar cambios editados\n        \n        $rootScope.loading = true;\n        \n        if($scope.scheduledNew){ // Si es publicacion programada\n            var date = document.getElementById(\"schedule_date\").value;\n            var time = document.getElementById(\"schedule_time\").value;\n            var timestamp = moment(time+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n            if(timestamp){ // Chequear que haya puesto bien la fecha\n                $scope.selected.timestamp = timestamp;\n            }else{\n                M.toast({html: \"Ingrese fecha de publicación programada\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                return;\n            }\n        }else{ // Si no es publicación programada, usar fecha actual\n            $scope.selected.timestamp = Date.now(); // Fecha:hora actuales\n        }\n\n        $scope.selected.content = quill.container.firstChild.innerHTML.replace(new RegExp(\"<img src=\", 'g'), \"<img class='responsive-img' src=\"); // Agregar clase responsive a las imagenes\n        \n        if($scope.selected.key){ // Si ya tiene una clave, hay que sobreescribir noticia en DB\n            var key = $scope.selected.key;            \n            $scope.selected.key = null; // Borro la clave para que no quede en la db\n            Cipressus.db.update($scope.selected,'news/'+$rootScope.user.course+\"/\"+key)\n            .then(function(snapshot){\n                $scope.selected.key = key; // Volver a poner la clave para que no se pierda\n                var index = $scope.news.findIndex(function(el){return el.key == key;});\n                $scope.news[index] = angular.copy($scope.selected); // Actualizar local\n                M.toast({html: \"Comunicado actualizado\",classes: 'rounded green darken-3',displayLength: 1500});\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si no tiene key, hacer push\n            $rootScope.loading = true;\n            Cipressus.db.push($scope.selected,'news/'+$rootScope.user.course)\n            .then(function(snapshot){\n                // Si el autor aun no habia creado noticias, guardar su avatar y nombre\n                if(!$scope.users[$rootScope.user.uid]){\n                    $scope.users[$rootScope.user.uid] = {\n                        name: $rootScope.user.name,\n                        avatar:$rootScope.user.avatar\n                    }\n                }\n                $scope.selected.key = snapshot.key;\n                $scope.news.push($scope.selected);\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }\n        updateTimestamp();\n    };\n\n    \n    //// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {preventScrolling: false});\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false, dismissible: false});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {preventScrolling: false, dismissible: false});\n    $scope.selected = {};\n    $scope.scheduledNew = false;\n    var quill; // El editor se inicializa al seleccionar una entrada\n\n    var downloadNews = function(){ // Descargar noticias y usuarios de la db\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\n        var authors = []; // Uids de usuarios que hicieron publicaciones\n        Cipressus.db.getSorted('news/'+$rootScope.user.course,'order') // Descargar lista de novedades\n        .then(function(snapshot){\n            snapshot.forEach(function(childSnapshot){ // Lista ordenada\n                var child = childSnapshot.val();\n                child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\n                child.key = childSnapshot.key; // Hay que guardar el key para actualizar\n                if(authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\n                    authors.push(child.author); // Agregar a la lista\n                $scope.news.push(child);\n            });  \n            $scope.users = {};\n            if(authors.length > 0){\n                var job = [];\n                for(var k in authors)\n                    job.push(Cipressus.db.get('users_public/'+authors[k])) // Descargar datos de los autores de publicaciones solamente\n                Promise.all(job)\n                .then(function(users_data){\n                    for(var k in users_data)\n                        $scope.users[authors[k]] = users_data[k]; \n                    newsData = { // Objeto a guardar en localStorage\n                        news: $scope.news,\n                        authors: $scope.users,\n                        last_update: Date.now()\n                    };\n                    localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }else{\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    // Monitoreo de actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"editor\").catch(function(err){console.log(err)});\n\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\n    if(newsData){ // Si hay datos en local storage\n        $scope.news = newsData.news;\n        $scope.users = newsData.authors;\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\n        .then(function(updateTimestamp){\n            if(newsData.last_update < updateTimestamp) // Hay cambios en la base de datos\n                downloadNews(); // Descargar\n            else{ // Si no hay cambios, terminar\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    }else{ // Si no hay datos, descargar si o si\n        downloadNews();\n    }\n\n}]);","app.controller(\"profile\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    document.getElementById(\"imgInput\").addEventListener('change', // Callback al subir foto de perfil\n        function () { // Cuando sube una nueva foto, agregar a la vista como base64\n            $rootScope.loading = true;\n            $scope.$apply();\n            var file = document.getElementById(\"imgInput\").files[0];\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                $scope.newAvatar = reader.result; // Se muestra temporalmente esta imagen\n                $scope.avatarFile = file; // Guardo el archivo para subir luego a storage\n                $scope.newProfilePic = true;\n                $rootScope.loading = false;\n                $scope.$apply();\n            }\n            if (file) reader.readAsDataURL(file);\n        });\n\n    $scope.uploadPic = function () { // Redirigir el evento al input para cargar una foto\n        document.getElementById(\"imgInput\").click();\n    };\n\n    $scope.saveForm = function () { // Guardar cambios en db\n        $rootScope.loading = true;\n\n        // Valores de los formularios\n        var newData = {\n            name: document.getElementById(\"inputName\").value,\n            secondName: document.getElementById(\"inputSecondName\").value,\n            lu: document.getElementById(\"inputLU\").value,\n            degree: document.getElementById(\"inputDegree\").value,\n            partners: [] // Arreglo de companeros de comision, se completa luego\n        }\n\n        // Validar datos de formulario\n        if (newData.name == \"\" || newData.secondName == \"\" || newData.lu == \"\" || newData.degree == \"\") {\n            console.log(\"Uno de los campos queda vacio.\");\n            M.toast({\n                html: \"Complete todos los campos\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n            $rootScope.loading = false;\n            return;\n        }\n\n        // Buscar companeros de comision ingresados y generar arreglo de uids\n        var getUserUID = function (name) { // Obtener el uid a partir del nombre completo\n            for (var k in $scope.users)\n                if ($scope.users[k].name + \" \" + $scope.users[k].secondName == name) // Coincidencia\n                    return k;\n        };\n\n        // Validar los nombres de companeros de comision (deben existir usuarios, no pueden ser iguales)\n        if (document.getElementById(\"partner1\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner1\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (document.getElementById(\"partner2\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner2\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (newData.partners.length == 2) { // En caso de ingresar dos compañeros\n            if (newData.partners[0] == newData.partners[1]) { // No pueden ser iguales\n                M.toast({\n                    html: \"Nombres de compañeros iguales\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        // Falta verificar que ninguno de los dos companeros ingresado sean iguales al usuario actual\n\n        // Habria que incluir referencia al usuario actual en los companeros indicados\n        var updateNewData = function(){ // Actualizar entrada en la db\n            Cipressus.db.update(newData, \"users_public/\" + $rootScope.user.uid) // Actualizar\n                .then(function (res) {\n                    M.toast({\n                        html: \"Datos actualizados!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                    // Actualizar datos de view\n                    $rootScope.user.name = newData.name;\n                    $rootScope.user.secondName = newData.secondName;\n                    $rootScope.user.lu = newData.lu;\n                    $rootScope.user.degree = newData.degree;\n                    $rootScope.user.partners = newData.partners;\n                    $rootScope.loading = false;\n                    $scope.edit = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un problema al actualizar los datos\",\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        if ($scope.newProfilePic) { // Si puso nueva foto\n            var saveNewAvatar = function () { // Guardar nueva foto de perfil en storage\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + $scope.avatarFile.name.split(\".\")[1]; // Generar nombre de archivo\n                Cipressus.storage.put($scope.avatarFile, \"Images\", filename) // Guardar imagen en storage\n                    .then(function (res) {                        \n                        // Datos que van al storage\n                        newData.avatar = res.url;\n                        newData.avatarFilename = filename;\n                        // Actualizar datos de la vista\n                        $rootScope.user.avatar = res.url; // Enlace a la imagen\n                        $rootScope.user.avatarFilename = filename; // Nombre de archivo en storage\n                        updateNewData(); // Finalmente, actualizar todos los datos\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            }\n            // Si ya tenia foto de perfil, eliminar la anterior\n            if ($rootScope.user.avatarFilename) {\n                Cipressus.storage.delete($rootScope.user.avatarFilename, \"Images\")\n                    .then(function (res) {\n                        saveNewAvatar(); // Luego de borrar, guardar la nueva\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        saveNewAvatar(); // Intentar cargar nueva de todas maneras\n                    });\n            }else{ // Si no tenia foto de perfil, cargar directamente\n                saveNewAvatar();\n            }\n        }else{ // Si no cambio la foto de perfil, actualizar solo los datos\n            updateNewData();\n        }\n    };\n\n\n    ///// Inicialización controller\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.edit = false; // Toggle para la edicion de los datos del perfil\n    $scope.newProfilePic = false; // Indicador para saber si hay que actualizar foto de perfil\n    $scope.created = $rootScope.user.enrolled > 0 ? moment($rootScope.user.enrolled).format(\"DD/MM/YYYY HH:mm\") : \"(Aún no aprobado)\"; // Formato legible\n    $scope.newAvatar = $rootScope.user.avatar; // Nuevo src si carga nueva foto de perfil\n\n    M.Tooltip.init(document.querySelectorAll('.tooltipped'), {}); // Inicializar tooltips      \n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"profile\").catch(function (err) {\n        console.log(err)\n    });\n\n    Cipressus.db.get(\"users_public\") // Descargar datos de usuarios\n        .then(function (users_public_data) {\n            $scope.users = users_public_data;\n            // Lista de usuarios para autocompletador\n            var userList = {};\n            for (var k in $scope.users) // Para excluir admins o usuarios de otros cursos hay que bajar users_private\n                userList[$scope.users[k].name + \" \" + $scope.users[k].secondName] = $scope.users[k].avatar; // Lista de nombres y fotos\n            M.Autocomplete.init(document.querySelectorAll('.autocomplete'), {\n                data: userList\n            });\n\n            // Inicializar inputs\n            document.getElementById(\"inputName\").value = $rootScope.user.name;\n            document.getElementById(\"inputSecondName\").value = $rootScope.user.secondName;\n            document.getElementById(\"inputLU\").value = $rootScope.user.lu;\n            document.getElementById(\"inputDegree\").value = $rootScope.user.degree;\n            if ($rootScope.user.partners) {\n                if ($rootScope.user.partners[0])\n                    document.getElementById(\"partner1\").value = $scope.users[$rootScope.user.partners[0]].name + \" \" + $scope.users[$rootScope.user.partners[0]].secondName;\n                if ($rootScope.user.partners[1])\n                    document.getElementById(\"partner2\").value = $scope.users[$rootScope.user.partners[1]].name + \" \" + $scope.users[$rootScope.user.partners[1]].secondName;\n            }\n\n            M.FormSelect.init(document.querySelectorAll('select'), {});\n            M.updateTextFields(); // Para mostrar los placeholders\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);"],"sourceRoot":"/source/"}