{"version":3,"sources":["src/assets/custom/cipressus.js","src/assets/custom/cipressus-utils.js","src/assets/custom/cipressus-hardware.js","src/assets/custom/cipressus-test-fs.js","src/controllers/index.js","src/controllers/testResults.js","src/controllers/login.js","src/controllers/home.js","src/controllers/dashboard.js","src/controllers/calendar.js","src/controllers/sources.js","src/controllers/submissions.js","src/controllers/hardware.js","src/controllers/analizer.js","src/controllers/simulator.js","src/controllers/kMaps.js","src/controllers/tables.js","src/controllers/videos.js","src/controllers/users.js","src/controllers/stats.js","src/controllers/attendance.js","src/controllers/activities.js","src/controllers/courses.js","src/controllers/editor.js","src/controllers/profile.js"],"names":["window","Cipressus","public","globalTarget","db","storage","users","hardware","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","publicvapidkey","listen","path","callback_success","callback_error","firebase","database","ref","on","snapshot","val","key","error","listenChild","child","value","orderByChild","equalTo","stopListener","off","get","Promise","fulfill","reject","once","then","getSorted","query","set","data","update","push","pushMultiple","dataArray","job","k","all","put","file","filename","size","totalBytes","getDownloadURL","url","putMultiple","files","filenames","res","sizes","results","urls","putString","str","onUserSignedIn","uid","console","log","onUserSignedOut","signIn","form","auth","signInWithEmailAndPassword","email","password","errorMessage","errorCode","code","result","signOut","signUp","createUserWithEmailAndPassword","users_public","activity","last_login","Date","now","browser","os","name","secondName","degree","lu","avatar","Math","floor","random","is","firefox","chrome","ie","opera","safari","ios","android","windows","linux","user","notif","icon","link","title","text","admins","utils","sendNotification","err2","err","resetPwd","sendPasswordResetEmail","initialize","initializeApp","messaging","usePublicVapidKey","requestPermission","onMessage","payload","opts","body","sound","registration","showNotification","getToken","currentToken","onTokenRefresh","refreshedToken","showToken","navigator","serviceWorker","getRegistration","reg","onAuthStateChanged","actionStack","searchNode","node","id","children","getLeafNodes","childs","concat","defaultCostFunction","submitMs","deadlineMs","param","ceil","eval","student","sum","cost","deadline","submits","submitted","date","score","ev","disc","scores","sc","getArray","root","getArrRec","arr","parent","dl","getTree","treeRec","tree","nodes","edges","color","label","shape","font","face","strokeWidth","strokeColor","toString","from","to","course","replace","sendEmail","sendFCMNotification","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","json","JSON","parse","responseText","msg","stringify","send","timestamp","read","generateFileName","len","possible","i","charAt","length","quillToHTML","activityCntr","userUid","item","activity_data","cntr","updates","logAction","actionMsg","logError","stack","getPrimeImplicants","mark2","j","c","p","n","r","q","combine","m","a","count","repeatelem","elem","accu","addOneAndRecurse","remaining","newList","IM","im","im2","mark","sort","socket","timerId","serialPorts","initServer","params","sample_period","sp","io","onUpdate","WebSocket","onerror","onopen","clearInterval","onSocketOpen","onclose","setInterval","ci","onSocketClose","onmessage","message","input","stopServer","close","ioUpdate","outputs","output","setTimeout","connectTo","portIndex","getSerialPorts","test_FS","questions","options","evalMatrix","profileDesc","answers","var_sum","vble","quest","this","reduce","b","scales","app","angular","module","$routeProvider","when","templateUrl","controller","filter","$sce","trustAsResourceUrl","$locationProvider","hashPrefix","run","$rootScope","$location","loading","userLogged","bodyClass","notifications","notifCnt","moment","locale","relativeTime","future","past","s","ss","mm","h","hh","d","dd","M","MM","y","yy","greetings","split_afternoon","split_evening","currentHour","parseFloat","format","getTime","stamp","time","fromNow","getUserNames","userUids","names","join","readableFileSize","bytes","si","thresh","abs","units","u","toFixed","openNotification","idx","findIndex","el","sidenav","Sidenav","init","document","querySelector","side","inDuration","Collapsible","Modal","getElementById","usb_modal","help_modal","addEventListener","resizeEvent","Dropdown","querySelectorAll","toast","html","classes","displayLength","sendHelp","helpMessage","public_data","private_data","admin","enrolled","OS","update_activity","$apply","discord_data","theme","discordSRC","lastView","route","split","search","usbStatus","wssIconColor","onWssConnect","onWssDisconnect","hardwareConfig","FormSelect","openUSBModal","connectToServer","disconnectFromServer","enableConnect","connectToSerialPort","isInStandaloneMode","setState","showInstallMessage","e","userChoice","choiceResult","outcome","directive","restrict","scope","$watch","width","style","marginLeft","innerHTML","$scope","keypressed","btn_click","loginAttempt","userForm","retrievePassword","registerNewUser","formOk","passwordConfirm","updateButtons","login_mode","btn_text","menu_left","menu_right","welcomeText","updateTextFields","localStorageService","testFSAnswers","testStatus","test_fs","test_modal","dismissible","loadTest","startTime","timeline","changes","putOption","opt","undefined","prev","next","saveTestResults","downloadNews","news","authors","forEach","childSnapshot","content","indexOf","author","comments","unshift","getUser","user_data","newsData","last_update","comment_modal","commentText","commentPost","commEntryIdx","publishComment","comment","snap","ts","deleteComment","commentId","entryId","news_update","updateSunburst","Highcharts","chart","height","credits","enabled","plotOptions","series","events","click","event","updatePolarPlot","point","type","allowDrillToNode","cursor","dataLabels","property","operator","levels","level","levelIsConstant","colorIndex","colorByPoint","colorVariation","tooltip","headerFormat","pointFormat","currentNode","activities","currentActivityScores","points","subsc","subValue","z","parseInt","minPointSize","innerSize","zMin","updateProgressPlot","progressData","totalEvents","futureEvents","attendanceData","asistencia","plotBorderWidth","pie","startAngle","endAngle","center","updateBarPlot","seriesData","drillDownData","drilldown","tempData","setOptions","lang","drillUpText","xAxis","yAxis","legend","borderWidth","drillUp","$","highcharts","updateAttendancePlot","categories","first","evCnt","evAtt","eventsAll","start","attendance","attendableEvents","activities_data","events_data","userAttendedEvents","Object","getOwnPropertyNames","att","evaluator","viewModal","editModal","confirmDeleteModal","confirmMoveModal","refreshCalendar","fullCalendar","weekends","editable","allDaySlot","minTime","maxTime","timeFormat","dateFormat","slotLabelInterval","slotLabelFormat","header","eventSources","eventDrop","selectedEvent","_d","unix","end","info","selectedEventExtras","eventResize","eventClick","startDay","endTime","viewRender","view","element","confirmDeleteEvent","editEvent","newEvent","saveEvent","formStatus","deleteEvent","splice","moveEvent","durationEditable","pushFiles","folderName","uploadFiles","folderKey","fileList","uploadingFiles","fileListQueue","uploaded","downloads","res2","sources","files_modal","deleteFile","folder","fileKeyToDelete","fileToDelete","confirmDelete","confirm_delete_modal","openImage","src","image_viewer_modal","openPdfViewer","pdfURL","pdf_viewer_modal","preventScrolling","folderList","Autocomplete","resetForm","selectedActivity","pushFile","observs","submission_data","activityId","activityName","created","partners","action","display","obs","selectedSim","simulation","copy","fr","FileReader","attached","target","zip","JSZip","base64","generateAsync","submissions","submCnt","readAsDataURL","downloaded","subm","openSubmission","openSimulation","newStatus","upd","toJson","viewSubm","submKeyView","submission_modal","evaluated","evaluatingKey","evaluatingNode","activityTree","leafActivities","confirm_evaluate_modal","confirmEvaluate","upd_status","sb","deleteDBRef","submissions_data","users_data","sel","actIdx","x","selectedIndex","includes","submit","simulations","sim","simObj","index","sim_sel","simIdx","initTester","tester","stopTester","running","animation","exporting","initAnalizer","addPoint","startChartUpdater","redraw","toggleStartStop","updateFields","getSimulations","load_modal","simulations_data","loadCircuit","model","simcir","clearDevices","showToolbox","clientWidth","clientHeight","toolbox","setupSimcir","currentSim","circuitFileName","saveCircuit","find","devices","connectors","save_modal","analizeCircuit","inputs","getExternalLabels","ioDevices","self","circuitDetails","deviceCnt","connectorCnt","truthTable","rows","expressions","canonMinTerm","canonMaxTerm","combMax","pow","minterms","maxterms","primeImplicants","minifiedExpresions","canonMinExpressions","canonMaxExpressions","getCanonicalExpressions","t","substring","results_modal","getBooleanExpressions","evalInput","inputBin","padStart","setInputStatus","getOutputStatus","selectToDelete","selected","delete_modal","deleteCircuit","onresize","container","w","getElementsByClassName","setAttribute","qmc","QuineMcCluskey","karnaugh","KarnaughMap","varsNum","showDCares","varNumChange","setNoOfVars","dCareChange","allowDontCares","selectVideo","selectedVideoKey","selectedVideo","videos","source","saveVideo","video_edit_modal","res1","selectedKey","showAll","orderTag","reverseOrder","changeOrder","tag","onInputDateChange","auxiliarySubmits","viewUser","getUserIndex","evalAttendance","selectUser","confirmEnrollModal","activitiesTree","enrollUser","user_private","evalUser","auxiliaryScores","removeEventListener","scoresModal","getCost","deleteSubmit","exportExcel","ws_data","row","map","ws","XLSX","aoa_to_sheet","wb","book_new","book_append_sheet","wopts","bookType","bookSST","wbout","write","saveAs","Blob","saveScores","obj","users_public_data","users_private_data","scatter_data","updateScoreBarPlot","excludeStat","at","round","updateTechPie","totalBr","totalOs","br","Firefox","Chrome","IE","Opera","Safari","Otro","Windows","Linux","IOS","Android","plotBackgroundColor","plotShadow","allowPointSelect","contrastTextColor","connectorColor","updateMenuAccessPlot","itemCntr","home","dashboard","calendar","simulator","profile","categoriesData","items","min","align","labels","overflow","valueSuffix","bar","layout","verticalAlign","floating","backgroundColor","defaultOptions","shadow","updateScatterPlot","seriesData1","seriesData2","zoomType","startOnTick","endOnTick","showLastLabel","scatter","marker","radius","states","hover","lineColor","updateProfilesPlot","avgScales","dataCnt","stdScales","sqrt","updateLists","confirmModal","absents","presents","selectedEventKey","isPresent","isAbsent","saveList","today","nextKey","ref_","pieces_","subtitle","selectActivity","updateTree","destroy","hierarchical","direction","vis","Network","update_sunburst","apply","selectedHistory","selectedNode","selectPreviousActivity","pop","courseID","$$search","childres","deleteCourseModal","deleteCourse","selectedCourseKey","selectedCourseIndex","courses","select","quilleditor","createElement","appendChild","quill","Quill","modules","toolbar","list","script","indent","background","imageResize","firstChild","order","updateTimestamp","deleteSelected","moveSelected","up","temp","saveSelected","scheduledNew","RegExp","editingReady","reader","onloadend","newAvatar","avatarFile","newProfilePic","uploadPic","saveForm","newData","getUserUID","partUid","updateNewData","edit","saveNewAvatar","avatarFilename","enableEditing","userList","Tooltip"],"mappings":"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","file":"main-b9e5a57ab2.js","sourcesContent":["window.Cipressus = (function () {\n    // Libreria para el control de la base de datos, storage, metodos utiles de la app y de comunicacion con hardware\n\n    var public = { // Instancia de la clase\n        globalTarget: null, // Este atributo se usa para poder acceder a variables desde la consola\n        db: {}, // Operaciones de base de datos\n        storage: {}, // Almacenamiento de archivos\n        users: {}, // Operaciones de autenticacion\n        hardware: {} // Metodos de control de hardware (probador de circuitos)\n    };\n\n    //// BASE DE DATOS /////\n\n    public.db.config = { // Configuracion de la base de datos\n        apiKey: \"AIzaSyAHpgtsZeQbcoCbKNE1dNjd7gUbSIFWz6M\",\n        authDomain: \"cipressus-0000.firebaseapp.com\",\n        databaseURL: \"https://cipressus-0000.firebaseio.com\",\n        projectId: \"cipressus-0000\",\n        storageBucket: \"cipressus-0000.appspot.com\",\n        messagingSenderId: \"927588929794\",\n        publicvapidkey: \"BF0sMjIt0y1H_3oyJzmkBmPkrG9UK7HL5ekgRXj50jEYc3MZSfpjCd051A0tNkNfEtLmmVlYILFvi8PQ0BDXRNM\"\n    };\n\n    public.db.listen = function (path, callback_success, callback_error) { // Escuchar cambios\n        firebase.database().ref(path).on('value',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.listenChild = function(path, child, value, callback_success, callback_error) { // Escucha cambios con filtro\n        firebase.database().ref(path).orderByChild(child).equalTo(value).on('child_added',\n            function (snapshot) {\n                callback_success(snapshot.val(), snapshot.key);\n            },\n            function (error) {\n                callback_error(error);\n            });\n    };\n\n    public.db.stopListener = function(path){ // Detener escuchador\n        firebase.database().ref(path).off();\n    };\n\n    public.db.get = function (path) { // Descargar informacion de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot.val());\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.getSorted = function (path, key) { // Obtener lista ordenada por key\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.query = function(path, key, value) { // Consulta por valor\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).orderByChild(key).equalTo(value).once('value')\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.set = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).set(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.update = function (data, path) { // Actualizar entrada de la db\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).update(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.push = function (data, path) { // Nueva entrada (retorna id)\n        return new Promise(function (fulfill, reject) {\n            firebase.database().ref(path).push(data)\n                .then(function (snapshot) {\n                    return fulfill(snapshot);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.db.pushMultiple = function (dataArray, path) { // Subir multiples entradas a un mismo directorio\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in dataArray) // Para cada objeto \n                job.push(firebase.database().ref(path).push(dataArray[k])); // TODO: usar multiples paths \n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot es un array que contiene los keys\n                    return fulfill(snapshot); // Del otro lado se puede hacer un for para retornar\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n\n    //// ALMACENAMIENTO ////\n\n    public.storage.put = function (file, path, filename) { // Subir archivo\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).put(file)\n                .then(function (snapshot) {\n                    var size = snapshot.totalBytes; // Tamanio de archivo\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill({\n                            size: size,\n                            url: url\n                        }); // Devolver tamanio y url del archivo\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putMultiple = function (files, path, filenames) { // Subir muchos archivos\n        return new Promise(function (fulfill, reject) {\n            var job = [];\n            for (var k in files) // Para cada archivo                \n                job.push(firebase.storage().ref().child(path + \"/\" + filenames[k]).put(files[k]));\n            Promise.all(job) // Ejecutar promise\n                .then(function (snapshot) { // Snapshot devuelve las url de manera asincrona pero en este caso es un array\n                    var res = []; // Nuevamente generar promesas\n                    var sizes = []; // Lista de tamanios de archivos\n                    for (var k in snapshot) {\n                        sizes.push(snapshot[k].totalBytes);\n                        res.push(snapshot[k].ref.getDownloadURL());\n                    }\n                    Promise.all(res) // Ejecutar promise para obtener urls\n                        .then(function (results) { // Results es un array con los urls                    \n                            return fulfill({\n                                sizes: sizes,\n                                urls: results\n                            }); // Mandar tamanio y urls\n                        });\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.putString = function (str, path, filename) { // Guardar string\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).putString(str)\n                .then(function (snapshot) {\n                    snapshot.ref.getDownloadURL().then(function (url) {\n                        return fulfill(url); // Devolver url de descarga\n                    });\n                })\n                .catch(function (error) { // Ver si retorna un solo error o varios\n                    return reject(error);\n                });\n        });\n    };\n\n    public.storage.delete = function (filename, path) { // Borrar un archivo de storage\n        return new Promise(function (fulfill, reject) {\n            firebase.storage().ref().child(path + \"/\" + filename).delete()\n                .then(function () {\n                    return fulfill(\"Borrado: \" + path + \"/\" + filename);\n                })\n                .catch(function (error) {\n                    return reject(error);\n                });\n        });\n    };\n\n\n\n    //// USUARIOS /////\n\n    public.users.onUserSignedIn = function (uid) { // Overridable - inicio de sesion\n        console.log(\"default -- logged in \" + uid);\n    };\n\n    public.users.onUserSignedOut = function () { // Overridable - cierre de sesion\n        console.log(\"default -- logged out\");\n    };\n\n    public.users.signIn = function (form) { // Iniciar sesión\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/wrong-password':\n                            errorMessage = \"La contraseña es incorrecta.\";\n                            break;\n                        case 'auth/user-disabled':\n                            errorMessage = \"El usuario se haya inhabilitado momentáneamente.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Quizá esté mal escrito o no exista.\";\n                            break;\n                        case 'auth/user-not-found':\n                            errorMessage = \"El usuario no existe.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó.. revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    return fulfill(\"Logeado correctamente.\");\n                });\n        });\n    };\n\n    public.users.signOut = function () {\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().signOut()\n                .then(function () {\n                    return fulfill(\"Ha salido de Cipressus.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n    public.users.signUp = function (form) { // Registrarse como nuevo usuario\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\n                .catch(function (error) {\n                    var errorCode = error.code,\n                        errorMessage;\n                    switch (errorCode) {\n                        case 'auth/weak-password':\n                            errorMessage = \"La contraseña es demasiado débil. Intenta con una más segura.\";\n                            break;\n                        case 'auth/email-already-in-use':\n                            errorMessage = \"Éste email ya existe en nuestra base de datos.\";\n                            break;\n                        case 'auth/invalid-email':\n                            errorMessage = \"El email no es válido. Revisa lo ingresado.\";\n                            break;\n                        case 'auth/operation-not-allowed':\n                            errorMessage = \"No se puede crear la cuenta para ese usuario. Ponete en contacto con los administradores.\";\n                            break;\n                        default:\n                            errorMessage = \"Algo pasó... revisa tu conexión a internet e intentálo nuevamente.\";\n                            break;\n                    }\n                    return reject([errorCode, errorMessage]);\n                })\n                .then(function (result) {\n                    // Guardar informacion del usuario en la db\n                    var users_public = { // Informacion editable por usuarios\n                        activity: {\n                            last_login: Date.now(),\n                            browser: {}, // Contador de navegadores\n                            os: {} // Contador de sistemas operativos\n                        },\n                        name: form.name,\n                        secondName: form.secondName,\n                        email: form.email,\n                        degree: form.degree,\n                        lu: form.lu,\n                        avatar: \"images/robohashes/robohash\"+Math.floor(Math.random()*20+1)+\".png\" // Imagen de perfil aleatoria\n                    };\n                    // Inicializar contadores de navegador y so\n                    users_public.activity.browser[is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))))] = 1;\n                    users_public.activity.os[is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')))] = 1;\n\n                    public.db.set(users_public, 'users_public/' + result.user.uid)\n                        .then(function (res) {\n                            // Notificar a los usuarios administradores sobre el nuevo registro\n                            public.db.query(\"users_private\", \"admin\", true)\n                            .then(function(snapshot){\n                                var notif = { // Detalles de la notificacion\n                                    icon: \"info\",\n                                    link: \"users\",\n                                    title: \"Nuevo registro\",\n                                    text: \"Nuevo usuario registrado: \"+form.email\n                                };\n                                var admins = snapshot.val();\n                                for(var k in admins)\n                                    public.utils.sendNotification(k, notif);\n                            })\n                            .catch(function (err2) {\n                                console.log(err2);\n                            });\n                            return fulfill(\"Datos de nuevo usuario registrados.\");\n                        })\n                        .catch(function (err) {\n                            return reject([err, \"Ocurrió un problema al guardar los datos.\"]);\n                        });\n                });\n        });\n    };\n\n    public.users.resetPwd = function (email) { // Restablecer contrasenia\n        return new Promise(function (fulfill, reject) {\n            firebase.auth().sendPasswordResetEmail(email)\n                .then(function () {\n                    return fulfill(\"Listo. Revisa tu correo electrónico.\");\n                })\n                .catch(function (error) {\n                    return reject([error, \"Algo pasó.. intentálo nuevamente.\"]);\n                });\n        });\n    };\n\n\n    ///// INICIALIZACION /////\n\n    public.initialize = function () { // Instrucciones de inicializacion de las utilidades        \n        return new Promise(function (fulfill, reject) {\n            firebase.initializeApp(public.db.config); // Inicializar base de datos\n\n            // Configurar mensajeria y notificaciones push\n            var messaging = firebase.messaging();\n            \n            messaging.usePublicVapidKey(public.db.config.publicvapidkey);\n            \n            messaging.requestPermission()\n                .then(function () {\n                    console.log('Permisos de notificación otorgados.');\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    console.log('No es posible habilitar notificaciones.');\n                });\n\n            /* Importar el script de notifications\n            firebase.notifications().onNotification((notification) => {\n                console.log('Notificacion: ',notification);\n                //firebase.notifications().displayNotification(notification);\n            });\n            */\n\n            messaging.onMessage(function(payload) {\n                console.log('Message received: ', payload);\n                // Mostrar notificacion popup\n                const opts = {\n                    body: 'Se actualizó tu calificación \"Informe laboratorio 1\"',\n                    icon: '/images/mainlogo.png',\n                    sound: '/sounds/notification.mp3' // No soportado\n                };\n                public.registration.showNotification(\"Cipressus\", opts);\n            });\n\n            messaging.getToken().then(function (currentToken) {\n                if (currentToken) \n                    console.log(\"Current token\", currentToken);\n                else \n                    console.log('No Instance ID token available. Request permission to generate one.');\n            }).catch(function (err) {\n                console.log('An error occurred while retrieving token. ', err);\n            });\n\n            messaging.onTokenRefresh(function () {\n                messaging.getToken().then(function (refreshedToken) {\n                    console.log('Token refreshed.');\n                    // Indicate that the new Instance ID token has not yet been sent to the\n                    // app server.\n                    //setTokenSentToServer(false);\n                    // Send Instance ID token to app server.\n                    //sendTokenToServer(refreshedToken);\n                    // ...\n                }).catch(function (err) {\n                    console.log('Unable to retrieve refreshed token ', err);\n                    showToken('Unable to retrieve refreshed token ', err);\n                });\n            });\n\n            navigator.serviceWorker.getRegistration().then(function(reg){\n                public.registration = reg; // Nuevo atributo\n                // messaging.useServiceWorker(reg); //\n            });\n\n            // Autenticacion\n            firebase.auth().onAuthStateChanged(function (user) { // Escuchar cambios de logeo de usuario\n                if (user) // El usuario esta logeado\n                    public.users.onUserSignedIn(user.uid); // Pasar uid a los callbacks\n                else // Si cerro sesión, se llama al callback\n                    public.users.onUserSignedOut();\n            });\n\n            return fulfill();\n        });\n    };\n\n    return public;\n})();","(function (public) { //// UTILIDADES ////\n\n    var actionStack = [];\n\n    public.utils = {};\n\n    public.utils.searchNode = function (node, id) { // Obtener el objeto de un nodo a partir del id\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = null;\n        if (node.id == id) // Coincidencia\n            return node;\n        else\n        if (node.children) // Si el nodo tiene hijos, recorrer buscando\n            for (var k in node.children) { // Para cada hijo del nodo\n                result = public.utils.searchNode(node.children[k], id); // Buscar\n                if (result)\n                    return result;\n            }\n        return result;\n    };\n\n    public.utils.getLeafNodes = function (node) { // Devuelve la lista de nodos hojas que contiene el arbol \"node\"\n        // Entradas:\n        //\t\t- node: es el nodo del arbol a partir del cual se inicia la busqueda\n        //      - id: es el identificador de la actividad que se desea buscar    \n        var result = []; // Lista de nodos hojas a retornar\n        if(node.children){ // Si el nodo tiene hijos\n            for(var k in node.children){\n                var childs = public.utils.getLeafNodes(node.children[k]);\n                result = result.concat(childs);\n            }\n            return result;\n        }else{ // Si no tiene hijos, el mismo nodo ya es hoja\n            return [node]; \n        }\n    };\n\n    public.utils.defaultCostFunction = function (submitMs, deadlineMs, param) { // Funcion de costo por perdida de vencimiento de una actividad\n        // Entradas:\n        //\t\t- submitMs: es la fecha de entrega expresada en unix time\n        //\t\t- deadlineMs: es la fecha de vencimiento (debe ser menor que submitMs)\n        //\t\t- param: contiene el o los parametros de la funcion de costo (extender a vector si hace falta)\n        return Math.ceil((submitMs - deadlineMs) / 86400000) * param; // Desgaste lineal por dia\n    };\n\n    public.utils.eval = function (student, node) { // Computar nota de un alumno en puntaje absoluto\n        // Entradas:\n        //\t\t- student: contiene la informacion de entregas y notas asignadas por los profesores\n        //\t\t- node: es el nodo del arbol de actividades al que se le quiere calcular el puntaje total \n        \n        var sum = 0; // Suma ponderada de calificaciones\n        var cost  = 0; // Suma de costos en puntaje acumulados (ponderados por las subactividades)\n\n        if (node.deadline) // Si la actividad tiene fecha de vencimiento\n            if (student.submits) // Si el alumno tiene alguna entrega\n                if (student.submits[node.id]) // Y si esta actividad ya fue entregada por el alumno y recibida por el profesor\n                    if (student.submits[node.id].submitted > node.deadline.date) { // Si se paso el vencimiento, hay que descontar puntos segun funcion de desgaste\n                        cost = public.utils.defaultCostFunction(student.submits[node.id].submitted, node.deadline.date, node.deadline.param);\n                        if (cost > node.score) \n                            cost = node.score; // Habria que considerar la nota puesta\n                    }\n\n        if (node.children) { // Si el nodo tiene hijos, calcular suma ponderada de los hijos\n            for (var k in node.children){ // Para cada hijo del nodo\n                var ev = public.utils.eval(student, node.children[k]); // Calificaciones obtenida de los hijos\n                sum += ev.score; // Puntaje total (ya incluye costo)\n                cost += ev.disc; // Costos discriminados (para saber de que son)\n            }            \n        } else { // Es hoja\n            if(student.scores){ // Puede que no tenga ninguna calificacion aun\n                if (student.scores[node.id]){ // Si ya esta evaluado este campo\n                    var sc = student.scores[node.id].score * node.score / 100; // Retornar el valor de la nota multiplicado por el puntaje de la actividad\n                    sum = sc;\n                }\n            }\n        }\n\n        sum -= cost; // Restar costo\n        if (sum < 0) sum = 0; // La nota no puede ser negativa\n        \n        return {score: sum, disc: cost};\n    };\n\n    public.utils.getArray = function (root) { // Convertir el arbol en arreglo referenciado\n        // Sirve para exportar a formato de highcharts y para listar actividades en vista de alumnos\n\n        var getArrRec = function (node, arr, parent) { // Recorrido recursivo\n            if (node.children) {\n                for (var k in node.children) // Para cada hijo del nodo\n                    getArrRec(node.children[k], arr, node.id); // Obtener arreglo de los hijos\n                \n                arr.push({ // Agregar el nodo actual \n                    id: node.id,\n                    parent: parent, // Referencias hacia atras\n                    name: node.name,\n                    score: node.score, // Higcharts calcula este valor y por eso se llama value en las hojas\n                    dl: node.deadline // Vencimiento si existe\n                });\n            } else { // Es hoja, agregar hoja y retornar\n                arr.push({\n                    id: node.id,\n                    parent: parent,\n                    name: node.name,\n                    value: node.score, // Este dato lo usa highcarts (se calcula para los nodos padres)\n                    dl: node.deadline // Vencimiento si existe\n                });\n            }\n        }\n\n        var arr = [];\n\n        getArrRec(root, arr, ''); // Iniciar\n        \n        return arr;\n    };\n\n    public.utils.getTree = function(root){ // Obtener arbol como nodos y lazos\n        \n        var treeRec = function(tree, nodes, edges, color){ // Funcion recursiva para recorrer el arbol\n            \n            nodes.push({\n                id: tree.id,\n                label: tree.name+\"\\nPuntaje: \"+tree.score,\n                shape: \"box\",\n                color: color ? color : \"#555555\",                \n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            });\n\n            if(tree.children){ \n                var color = '#'+Math.floor(Math.random()*16777215).toString(16);\n                for(var k in tree.children){\n                    treeRec(tree.children[k], nodes, edges, color);\n                    edges.push({\n                        from: tree.id,\n                        to: tree.children[k].id\n                    });\n                }\n            }else{                \n                return;\n            }\n        };\n\n        // Hay que crear un nodo root con un solo children para que funcione con la libreria vis.js\n        var nodes = [\n            {\n                id: \"main\", \n                label: root.course.name.replace(/\\s/g,\"\\n\"),\n                shape: \"box\",\n                font: { \n                    size: 12, \n                    color: \"white\", \n                    face: \"arial\", \n                    strokeWidth: 3, \n                    strokeColor: \"#000000\" \n                }\n            }\n        ]; \n\n        var edges = [{from: \"main\", to: root.id}];\n\n        treeRec(root, nodes, edges); // Iniciar\n\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n\n    public.utils.sendEmail = function (data) { // Enviar email (requiere script php en hosting)\n        return new Promise(function (fulfill, reject) {\n            /*\n            var uriData = 'nombre=' + data.name + '&email=' + data.email + '&cc=' + data.cc.join() + '&asunto=' + data.subject + '&mensaje=' + data.message;\n            var ajax_url = 'https://cipressus.uns.edu.ar/mail.php';\n            var ajax_request = new XMLHttpRequest();\n            ajax_request.onreadystatechange = function () {\n                if (ajax_request.readyState === 4)\n                    return fulfill({\n                        response: ajax_request.responseText,\n                        type: \"success\",\n                        status: ajax_request.status\n                    });\n            };\n            try {\n                ajax_request.open(\"POST\", ajax_url, false);\n                ajax_request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                ajax_request.send(encodeURI(uriData));\n            } catch (err) {\n                return reject(err);\n            }\n            */\n            return reject(\"Email no implementado\");\n        });\n    };\n\n    public.utils.sendFCMNotification = function (data) { // Enviar notificaciones por FCM\n        var xhr = new XMLHttpRequest();\n        var url = \"https://fcm.googleapis.com/fcm/send\";\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", \"key=AAAA1_ib0QI:APA91bHVFpFU4-CAibNhNmCriYbWcqbmhQuuCZa1sITD4BgF2wBBYZ8-WPc30NI0n_HfPFHEIzG1THqKgtWS8gd1bUROftZpW_o2OqBP64IgciaQMNnp4_nKU5vysZmAACjToKWFsPGe\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                var json = JSON.parse(xhr.responseText);\n                console.log(json);\n            }\n        };\n\n        /*var data = {\n            \"notification\": {\n                \"title\": \"Cipressus\",\n                \"body\": \"Hola mundo\",\n                \"icon\": \"images/mainlogo.png\"\n            },\n            \"to\": \"eY9vq-H4hws:APA91bHwMxWW5K6jEySnJGpkOEHc9RiY6aCjEUl1yK0xqf4LHeOmgGMUYlYlBYDiN7inFJjz1vMHeb3GGAg-yQPYJphveS_Q7q_i2JY1VKgSv7HqGMY3mUW4uKqph7NQt48b4KXyh5B-\" // Token que devuelve\n        };*/\n\n        var msg = JSON.stringify(data);\n        xhr.send(msg);\n    };\n\n    public.utils.sendNotification = function(uid, data){\n        /* \n        data = { // Formato de objeto\n            icon:\n            link:\n            title:\n            text:\n        }\n        */\n\n        var notif = data;\n        notif.uid = uid;\n        notif.timestamp = Date.now();\n        notif.read = false;\n        public.db.push(notif, \"notifications\")\n        .then(function(){\n            console.log(\"Notificacion enviada\");\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    public.utils.generateFileName = function (len) { // Nombres aleatorios para archivos\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < len; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n\n    public.utils.quillToHTML = function (str) { // Hacer la adaptacion del formato quill al formato html de home\n        return str.replace(/ql-align-center/g, \"center-align\"); // Por ahora solo este, buscar otros\n    };\n\n    public.utils.activityCntr = function (userUid, item, param) { // Incrementador de contadores para monitoreo de actividad de usuarios\n        return new Promise(function (fulfill, reject) {\n            public.db.get(\"users_public/\" + userUid + \"/activity/items/\" + item)\n                .then(function (activity_data) {\n                    var cntr = 1;\n                    if (activity_data) // Tiene valores en este item de actividad\n                        cntr = activity_data + 1;\n                    var updates = {};\n                    updates[\"users_public/\" + userUid + \"/activity/items/\"+item] = cntr; // Contador de visita\n                    if(param)\n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item+\"?id=\"+param; // Ultima vista\n                    else    \n                        updates[\"users_public/\" + userUid + \"/lastView\"] = item; // Ultima vista\n                    //console.log(updates);\n                    public.db.update(updates)\n                        .then(function (res) {\n                            return fulfill(res);\n                        })\n                        .catch(function (err) {\n                            return reject(err);\n                        });\n                })\n                .catch(function (err) {\n                    return reject(err);\n                });\n        });\n    };\n\n    public.utils.logAction = function(actionMsg){ // Registra acciones del usuario localmente. Si ocurre error se guarda el registro en la db\n        actionStack.push({\n            msg: actionMsg,\n            timestamp: Date.now()\n        });\n    };\n\n    public.utils.logError = function(error){ // Registra error en db para llevar estadistica de funcionamiento\n        /* Formato:\n        error = {\n            source: [string], // Nombre del controller o libreria donde ocurre el error\n            line: [number], // Numero de linea del codigo donde se dispara el error\n            code: [string], // Si hay codigo de error disponible o mensaje (generado por librerias, dependencias, etc)\n            msg: [string], // Mensaje de error (redactado por programador)\n            uid: [string], // Usuario que genero ese error\n        }\n\n        Ejemplo (sin codigo de error):\n\n        var error = {\n            source: \"main.js\", \n            line: 54,  // TODO: generar automaticamente\n            msg: \"Error actualizando dato\", // Mensaje de error (redactado por programador)\n            uid: \"erfd6f7a8dfadyfgad\" // Usuario que genero ese error\n        }\n        Cipressus.utils.logError(error);\n        */\n\n        // Agregar un par de atributos automaticos\n        error.timestamp = Date.now(); // Hora local (usar de firebase?)\n\n        if(actionStack.length > 0) // Registro de acciones\n            error.stack = actionStack;\n\n        // Logear en firestore\n        public.db.push(error, \"errorLog\")\n        .then(function(){\n            actionStack = []; // Se reinicia la pila de acciones\n            console.log(\"Error reportado\");\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    public.utils.getPrimeImplicants = function (data) { // Obtener implicantes primos a partir de los miniterminos\n        // Autor del metodo: Janus Troelsen (https://gist.github.com/ysangkok/5707171)\n        /*\n        var minterms = ['1101', '1100', '1110', '1111', '1010', '0011', '0111', '0110'];\n        var minterms2 = ['0000', '0100', '1000', '0101', '1100', '0111', '1011', '1111'];\n        var minterms3 = ['0001', '0011', '0100', '0110', '1011', '0000', '1000', '1010', '1100', '1101'];\n        console.log( 'PI(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms)));\n        console.log( 'PI2(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms2)));\n        console.log( 'PI3(s):', JSON.stringify(Cipressus.utils.getPrimeImplicants(minterms3)));\n        */\n\n        var combine = function (m, n) {\n            var a = m.length,\n                c = '',\n                count = 0,\n                i;\n            for (i = 0; i < a; i++) {\n                if (m[i] === n[i]) {\n                    c += m[i];\n                } else if (m[i] !== n[i]) {\n                    c += '-';\n                    count += 1;\n                }\n            }\n            if (count > 1)\n                return \"\";\n            return c;\n        };\n\n        var repeatelem = function (elem, count) {\n            var accu = [],\n                addOneAndRecurse = function (remaining) {\n                    accu.push(elem);\n                    if (remaining > 1) {\n                        addOneAndRecurse(remaining - 1);\n                    }\n                };\n            addOneAndRecurse(count);\n            return accu;\n        };\n\n        var newList = [].concat(data),\n            size = newList.length,\n            IM = [],\n            im = [],\n            im2 = [],\n            mark = repeatelem(0, size),\n            mark2, m = 0,\n            i, j, c, p, n, r, q;\n        for (i = 0; i < size; i++) {\n            for (j = i + 1; j < size; j++) {\n                c = combine(newList[i], newList[j]);\n                if (c !== \"\") {\n                    im.push(c);\n                    mark[i] = 1;\n                    mark[j] = 1;\n                }\n            }\n        }\n\n        mark2 = repeatelem(0, im.length);\n        for (p = 0; p < im.length; p++) {\n            for (n = p + 1; n < im.length; n++) {\n                if (p !== n && mark2[n] === 0 && im[p] === im[n]) {\n                    mark2[n] = 1;\n                }\n            }\n        }\n\n        for (r = 0; r < im.length; r++) {\n            if (mark2[r] === 0) {\n                im2.push(im[r]);\n            }\n        }\n\n        for (q = 0; q < size; q++) {\n            if (mark[q] === 0) {\n                IM.push(newList[q]);\n                m = m + 1;\n            }\n        }\n\n        if (m !== size && size !== 1)\n            IM = IM.concat(Cipressus.utils.getPrimeImplicants(im2));\n\n        IM.sort();\n        return IM;\n    };\n})(Cipressus);","(function (public) { ////// HARDWARE /////\n    var socket; // Objeto privado para comunicarse con el server\n    var timerId = null; // Timer para temporizar los llamados al socket\n    var serialPorts = []; // Lista de puertos serie disponibles (objeto privado)\n\n    public.hardware.initServer = function (params) { // Inicializar conexion con WebSocketServer      \n        /*\n            params: {\n                io: array con estados de entradas/salidas (para hacer binding con objetos de controllers)\n                sp: periodo de muestreo (ms) de envio de salidas\n                ci: periodo de intento de reconexion con server (ms)\n                onUpdate(): funcion que se llama en cada actualizacion de la entrada (para hacer apply por ej)\n            }\n        */\n\n        public.hardware.status = \"CONNECTING\"; // Inicialmente, el estado es de conectando (intenta cada tanto volver a abrir la conexion)\n        public.hardware.sample_period = params.sp; // Periodo de actualizacion de salidas\n        public.hardware.io = params.io; // Binding con view\n        public.hardware.onUpdate = params.onUpdate;\n\n        socket = new WebSocket(\"ws://localhost:8081\"); // Conectarse al server por web socket\n\n        socket.onerror = function (error) {\n            console.log(error);\n        };\n\n        socket.onopen = function () { // Puerto conectado\n            if (timerId) {\n                clearInterval(timerId);\n                timerId = null;\n            }\n            public.hardware.onSocketOpen(); // Ejecutar el callback\n        };\n\n        socket.onclose = function () { // Server no disponible (seguir intentando conectar)\n            if (public.hardware.status == \"CONNECTED\" || public.hardware.status == \"IDLE\") // Si la conexion con server estaba abierta significa que se cerro el server\n                public.hardware.status = \"CONNECTING\"; // Pasar a estado conectando\n            if (!timerId) {\n                timerId = setInterval(function () {\n                    socket = null;\n                    public.hardware.initServer(params);\n                }, params.ci);\n            }\n            public.hardware.onSocketClose(); // Ejecutar el callback\n        };\n\n        socket.onmessage = function (message) { // Respuesta del server\n            serialPorts = JSON.parse(message.data); // El primer mensaje que manda el server es la lista de puertos\n            public.hardware.status = \"IDLE\"; // Una vez que recibe la lista de puertos, espera conexion\n            socket.onmessage = function (message) { // Redefinir la funcion a partir de aqui                                        \n                for (var k = 0; k < 8; k++) // Debe mandar siempre un string de 8 caracteres \n                    public.hardware.io[k].input = (message.data[k] == \"1\"); // Configurar inputs segun caracter sea 1 o 0\n                public.hardware.onUpdate();\n            };\n        };\n    };\n\n    public.hardware.stopServer = function () { // Desconectarse del server (para liberar el uso de recursos)\n        public.hardware.status = \"DISCONNECTED\";\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n        }\n        socket.onclose = function () {}; // Borrar la funcion para que no se vuelva a conectar\n        socket.close();\n        socket = null;\n    };\n\n    public.hardware.ioUpdate = function () { // Envio de string al server para actualizar salidas\n        var outputs = \"\";\n        for (var k in public.hardware.io)\n            outputs += public.hardware.io[k].output ? \"1\" : \"0\";\n        socket.send(outputs);\n        if (public.hardware.status == \"CONNECTED\")\n            setTimeout(public.hardware.ioUpdate, public.hardware.sample_period);\n    };\n\n    public.hardware.connectTo = function (portIndex) { // Conectarse con un puerto de la lista    \n        if (serialPorts.length > 0) {\n            socket.send(portIndex); // Esto solo funciona mientras no se haya iniciado el streaming con el probador\n            public.hardware.status = \"CONNECTED\";\n            setTimeout(public.hardware.ioUpdate, 500); // Esperar 500ms e iniciar envio de comandos\n        } else\n            console.log(\"El listado de puertos no está disponible\");\n    };\n\n    public.hardware.getSerialPorts = function () { // Se puede pedir la lista de puertos en cualquier momento\n        return serialPorts; // Puede que un puerto ya no este disponible\n    };\n\n    public.hardware.onSocketOpen = function () { // Overridable - al conectarse con server\n        console.log(\"Socket abierto.\");\n    };\n\n    public.hardware.onSocketClose = function () { // Overridable - cuando se detiene el server\n        console.log(\"Socket cerrado.\");\n    }\n})(Cipressus);","(function (public) { ///// Test Felder-Silverman de estilos de aprendizaje\n    public.test_FS = {\n        questions: [{\n                text: \"Entiendo mejor algo\",\n                options: [\"si lo practico.\", \"si pienso en ello.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"realista.\", \"innovador.\"]\n            },\n            {\n                text: \"Cuando pienso acerca de lo que hice ayer, es más probable que lo haga sobre la base de\",\n                options: [\"una imagen.\", \"palabras.\"]\n            },\n            {\n                text: \"Tengo tendencia a\",\n                options: [\"entender los detalles de un tema pero no ver claramente su estructura completa\", \"entender la estructura completa pero no ver claramente los detalles.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo algo nuevo, me ayuda\",\n                options: [\"hablar de ello.\", \"pensar en ello.\"]\n            },\n            {\n                text: \"Si yo fuera profesor, yo preferiría dar un curso\",\n                options: [\"que trate sobre hechos y situaciones reales de la vida.\", \"que trate con ideas y teorías.\"]\n            },\n            {\n                text: \"Prefiero obtener información nueva de\",\n                options: [\"imágenes, diagramas, gráficas o mapas.\", \" instrucciones escritas o información verbal.\"]\n            },\n            {\n                text: \"Una vez que entiendo\",\n                options: [\"todas las partes, entiendo el total.\", \"el total de algo, entiendo como encajan sus partes.\"]\n            },\n            {\n                text: \"En un grupo de estudio que trabaja con un material difícil, es más probable que\",\n                options: [\"participe y contribuya con ideas.\", \"no participe y solo escuche.\"]\n            },\n            {\n                text: \"Es más fácil para mí\",\n                options: [\"aprender hechos.\", \"aprender conceptos.\"]\n            },\n            {\n                text: \"En un libro con muchas imágenes y gráficas es más probable que\",\n                options: [\"revise cuidadosamente las imágenes y las gráficas.\", \" me concentre en el texto escrito.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas de matemáticas\",\n                options: [\"generalmente trabajo sobre las soluciones con un paso a la vez.\", \"frecuentemente sé cuales son las soluciones, pero luego tengo dificultad para imaginarme los pasos para llegar a ellas.\"]\n            },\n            {\n                text: \"En las clases a las que he asistido\",\n                options: [\"he llegado a saber como son muchos de los estudiantes.\", \"raramente he llegado a saber como son muchos estudiantes.\"]\n            },\n            {\n                text: \"Cuando leo temas que no son de ficción, prefiero\",\n                options: [\"algo que me enseñe nuevos hechos o me diga como hacer algo.\", \"algo que me dé nuevas ideas en que pensar.\"]\n            },\n            {\n                text: \"Me gustan los maestros\",\n                options: [\"que utilizan muchos esquemas en el pizarrón.\", \"que toman mucho tiempo para explicar.\"]\n            },\n            {\n                text: \"Cuando estoy analizando un cuento o una novela\",\n                options: [\"pienso en los incidentes y trato de acomodarlos para configurar los temas.\", \"me doy cuenta de cuales son los temas cuando termino de leer y luego tengo que regresar y encontrar los incidentes que los demuestran.\"]\n            },\n            {\n                text: \"Cuando comienzo a resolver un problema de tarea, es más probable que\",\n                options: [\"comience a trabajar en su solución inmediatamente.\", \"primero trate de entender completamente el problema.\"]\n            },\n            {\n                text: \"Prefiero la idea de\",\n                options: [\"certeza.\", \"teoría.\"]\n            },\n            {\n                text: \"Recuerdo mejor\",\n                options: [\"lo que veo.\", \"lo que oigo.\"]\n            },\n            {\n                text: \"Es más importante para mí que un profesor\",\n                options: [\"exponga el material en pasos secuenciales claros.\", \"me dé un panorama general y relacione el material con otros temas.\"]\n            },\n            {\n                text: \"Prefiero estudiar\",\n                options: [\"en un grupo de estudio.\", \"solo.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"cuidadoso en los detalles de mi trabajo.\", \"creativo en la forma en la que hago mi trabajo.\"]\n            },\n            {\n                text: \"Cuando alguien me da direcciones de nuevos lugares, prefiero\",\n                options: [\"un mapa.\", \"instrucciones escritas.\"]\n            },\n            {\n                text: \"Aprendo\",\n                options: [\"a un paso constante. Si estudio con ahínco consigo lo que deseo.\", \"en inicios y pausas. Me llego a confundir y súbitamente lo entiendo.\"]\n            },\n            {\n                text: \"Prefiero primero\",\n                options: [\"hacer algo y ver que sucede.\", \"pensar como voy a hacer algo.\"]\n            },\n            {\n                text: \"Cuando leo por diversión, me gustan los escritores que\",\n                options: [\"dicen claramente los que desean dar a entender.\", \"dicen las cosas en forma creativa e interesante.\"]\n            },\n            {\n                text: \"Cuando veo un esquema o bosquejo en clase, es más probable que recuerde\",\n                options: [\"la imagen.\", \"lo que el profesor dijo acerca de ella.\"]\n            },\n            {\n                text: \"Cuando me enfrento a un cuerpo de información\",\n                options: [\"me concentro en los detalles y pierdo de vista el total de la misma.\", \"trato de entender el todo antes de ir a los detalles.\"]\n            },\n            {\n                text: \"Recuerdo más fácilmente\",\n                options: [\"algo que he hecho.\", \"algo en lo que he pensado mucho.\"]\n            },\n            {\n                text: \"Cuando tengo que hacer un trabajo, prefiero\",\n                options: [\"dominar una forma de hacerlo.\", \"intentar nuevas formas de hacerlo.\"]\n            },\n            {\n                text: \"Cuando alguien me enseña datos, prefiero\",\n                options: [\"gráficas.\", \"resúmenes con texto.\"]\n            },\n            {\n                text: \"Cuando escribo un trabajo, es más probable que\",\n                options: [\"lo haga (piense o escriba) desde el principio y avance.\", \" lo haga (piense o escriba) en diferentes partes y luego las ordene.\"]\n            },\n            {\n                text: \"Cuando tengo que trabajar en un proyecto de grupo, primero quiero\",\n                options: [\"realizar una 'tormenta de ideas' donde cada uno contribuye con ideas.\", \"realizar la 'tormenta de ideas' en forma personal y luego juntarme con el grupo para comparar las ideas.\"]\n            },\n            {\n                text: \"Considero que es mejor elogio llamar a alguien\",\n                options: [\"sensible.\", \"imaginativo.\"]\n            },\n            {\n                text: \"Cuando conozco gente en una fiesta, es más probable que recuerde\",\n                options: [\"cómo es su apariencia.\", \"lo que dicen de sí mismos.\"]\n            },\n            {\n                text: \"Cuando estoy aprendiendo un tema, prefiero\",\n                options: [\"mantenerme concentrado en ese tema, aprendiendo lo más que pueda de él.\", \"hacer conexiones entre ese tema y temas relacionados.\"]\n            },\n            {\n                text: \"Me considero\",\n                options: [\"abierto.\", \"reservado.\"]\n            },\n            {\n                text: \"Prefiero cursos que dan más importancia a\",\n                options: [\"material concreto (hechos, datos).\", \" material abstracto (conceptos, teorías).\"]\n            },\n            {\n                text: \"Para divertirme, prefiero\",\n                options: [\"ver televisión.\", \"leer un libro.\"]\n            },\n            {\n                text: \"Algunos profesores inician sus clases haciendo un bosquejo de lo que enseñarán. Esos bosquejos son\",\n                options: [\"algo útiles para mí.\", \"muy útiles para mí.\"]\n            },\n            {\n                text: \"La idea de hacer una tarea en grupo con una sola calificación para todos\",\n                options: [\"me parece bien.\", \"no me parece bien.\"]\n            },\n            {\n                text: \"Cuando hago grandes cálculos\",\n                options: [\"tiendo a repetir todos mis pasos y revisar cuidadosamente mi trabajo.\", \"me cansa hacer su revisión y tengo que esforzarme para hacerlo.\"]\n            },\n            {\n                text: \"Tiendo a recordar lugares en los que he estado\",\n                options: [\"fácilmente y con bastante exactitud.\", \"con dificultad y sin mucho detalle.\"]\n            },\n            {\n                text: \"Cuando resuelvo problemas en grupo, es más probable que yo\",\n                options: [\"piense en los pasos para la solución de los problemas.\", \"piense en las posibles consecuencias o aplicaciones de la solución en un amplio rango de campos.\"]\n            }\n        ],\n        evalMatrix: [ // Puntajes: evalMatrix[escala][pregunta][opcion]\n            [\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Act\n            [\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0]\n            ], // Refl\n            [\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0]\n            ], // Sens\n            [\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0]\n            ], // Int\n            [\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0]\n            ], // Vis\n            [\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0]\n            ], // Ver\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [1, 0]\n            ], // Sec\n            [\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1],\n                [0, 0],\n                [0, 0],\n                [0, 0],\n                [0, 1]\n            ] // Glo\n        ],\n        profileDesc: [\n            [\n                \"Aprende por interacción directa con el material de estudio. Prefiere la comunicación visual.\", // Activo\n                \"Le gusta reflexionar sobre el material de estudio. Prefiere el trabajo individual y comunicación grupal mínima.\" // Reflexivo\n            ],\n            [\n                \"Detallista y práctico con preferencia por hechos concretos y aplicaciones del mundo real.\", // Sensitivo\n                \"Creativo y se siente atraído por el contenido teórico y abstracto.\" // Intuitivo\n            ],\n            [\n                \"Recuerda fácilmente imágenes que se le presenta (gráficos, fotos, esquemas, etc.).\", // Visual   \n                \"Recuerda fácilmente frases escritas o habladas.\" // Verbal\n            ],\n            [\n                \"Prefiere aprender de manera lineal, mediante secuencia de pasos lógicos.\", // Secuencial\n                \"Prefiere que se le presente un esquema general y luego aprende y entiende las partes por separado sin seguir un orden específico.\" // Global\n            ],\n        ],\n        eval: function (answers) { // Computo de escalas (metodo general escalas PsiMESH [http://www.psimesh.com])\n            var var_sum = []; // Arreglo de puntajes sumados para cada escala\n            for (var vble = 0; vble < 8; vble++) {\n                var sum = []; // Arreglo con valores de puntajes de cada resepuesta\n                for (var quest in answers) // Para cada pregunta\n                    sum[quest] = this.evalMatrix[vble][quest][answers[quest]]; // Puntaje que otorga cada pregunta a la escala actual\n                var_sum[vble] = sum.reduce(function(a, b){return a + b}, 0); // Sumar arreglo de puntajes de la escala actual\n            }\n            var scales = [];\n            for (var sc = 0; sc < 8; sc += 2)\n                scales[sc / 2] = var_sum[sc + 1] - var_sum[sc];\n            return scales;\n        }\n    }\n})(Cipressus);","var app = angular.module('cipressus', ['ngRoute', 'ngSanitize','LocalStorageModule'])\n.config([\"$routeProvider\",function ($routeProvider) {\n    $routeProvider\n        .when(\"/\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/home\", {\n            templateUrl: \"views/home.html\",\n            controller: \"home\"\n        })\n        .when(\"/login\", {\n            templateUrl: \"views/login.html\",\n            controller: \"login\"\n        })\n        .when(\"/dashboard\", {\n            templateUrl: \"views/dashboard.html\",\n            controller: \"dashboard\"\n        })\n        .when(\"/calendar\", {\n            templateUrl: \"views/calendar.html\",\n            controller: \"calendar\"\n        })\n        .when(\"/sources\", {\n            templateUrl: \"views/sources.html\",\n            controller: \"sources\"\n        })\n        .when(\"/submissions\", {\n            templateUrl: \"views/submissions.html\",\n            controller: \"submissions\"\n        })\n        .when(\"/hardware\", {\n            templateUrl: \"views/hardware.html\",\n            controller: \"hardware\"\n        })\n        .when(\"/analizer\", {\n            templateUrl: \"views/analizer.html\",\n            controller: \"analizer\"\n        })        \n        .when(\"/simulator\", {\n            templateUrl: \"views/simulator.html\",\n            controller: \"simulator\"\n        })\n        .when(\"/kMaps\", {\n            templateUrl: \"views/kMaps.html\",\n            controller: \"kMaps\"\n        })\n        .when(\"/tables\", {\n            templateUrl: \"views/tables.html\",\n            controller: \"tables\"\n        })\n        .when(\"/videos\", {\n            templateUrl: \"views/videos.html\",\n            controller: \"videos\"\n        })\n        .when(\"/users\", {\n            templateUrl: \"views/users.html\",\n            controller: \"users\"\n        })\n        .when(\"/stats\", {\n            templateUrl: \"views/stats.html\",\n            controller: \"stats\"\n        })\n        .when(\"/attendance\", {\n            templateUrl: \"views/attendance.html\",\n            controller: \"attendance\"\n        })\n        .when(\"/activities\", {\n            templateUrl: \"views/activities.html\",\n            controller: \"activities\"\n        })\n        .when(\"/courses\", {\n            templateUrl: \"views/courses.html\",\n            controller: \"courses\"\n        })\n        .when(\"/editor\", {\n            templateUrl: \"views/editor.html\",\n            controller: \"editor\"\n        })\n        .when(\"/profile\", {\n            templateUrl: \"views/profile.html\",\n            controller: \"profile\"\n        });\n}])\n.filter('trusted', ['$sce', function ($sce) {\n    // Ver: https://stackoverflow.com/questions/39480969/angular-interpolateinterr-error-when-adding-url-from-variable\n    return $sce.trustAsResourceUrl;\n }])\n.config(['$locationProvider', function($locationProvider) {\n    // Ver: https://stackoverflow.com/questions/41272314/angular-all-slashes-in-url-changed-to-2f\n    $locationProvider.hashPrefix('');\n  }])\n.run([\"$rootScope\", \"$location\", \"$sce\", function ($rootScope, $location, $sce) {\n\n    $rootScope.loading = true; // Preloader\n    $rootScope.userLogged = false; // Indicador de usuario logeado para habilitar componentes de ventana\n    $location.path(\"/login\"); // Ir a vista de logeo #TODO: cambiar modelo por uno que admita acceso sin login\n    $rootScope.bodyClass = \"\"; // Clase del body (para poner fondos)\n    $rootScope.notifications = []; // Lista de notificaciones del usuario\n    $rootScope.notifCnt = 0; // Contador de notificaciones sin leer\n\n    // Configuracion de moment.js\n    moment.locale('es', {\n        relativeTime : {\n            future: \"dentro de %s\",past: \"hace %s\",s: \"pocos segundos\",ss: \"%d segundos\",m: \"un minuto\",mm: \"%d minutos\",\n            h: \"una hora\",hh: \"%d horas\",d: \"un día\",dd: \"%d días\",M: \"un mes\",MM: \"%d meses\",y: \"un año\",yy: \"%d años\"\n        }\n    });\n\n    //// Utilidades ////\n    $rootScope.greetings = function(){ // Retorna saludo de bienvenida\n        var split_afternoon = 12;\n        var split_evening = 19; \n        var currentHour = parseFloat(moment().format(\"HH\"));\n        if(currentHour >= split_afternoon && currentHour <= split_evening)\n            return \"Buenas tardes\";\n        else if(currentHour >= split_evening)\n            return \"Buenas noches\";\n        else\n            return \"Buenos días\";\n    };\n\n    $rootScope.getTime = function(code,stamp){ // Para ejecutar moment en view\n        var time;\n        switch(code){\n            case 0: // Estampa de tiempo en view\n                time = Date.now();\n                break;\n            case 1: // Fecha y hora actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 2: // Solo fecha actual\n                time = moment(Date.now()).format(\"DD/MM/YYYY\");\n                break;\n            case 3: // Fecha y hora de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY HH:mm\");\n                break;\n            case 4: // Solo fecha de argumento\n                time = moment(stamp).format(\"DD/MM/YYYY\");\n                break;\n            case 5: // Relativo al actual\n                time = moment(stamp).fromNow();\n                break;\n            case 6: // Fecha corta y hora\n                time = moment(stamp).format(\"DD/MM HH:mm\");\n                break;\n            default:\n                time = null;\n        }\n        return time;\n    };\n\n    $rootScope.getUserNames = function (users, userUids) { // Devuelve los apellidos de los usuarios cuyos uid se pasa como arreglo\n        //console.log(userUids);\n        if (users) { // Se puede llamar a esta funcion cuando aun no hay datos porque se ejecuta en view\n            var names = [];\n            for (var k in userUids)\n                names.push(users[userUids[k]].secondName);\n            return names.join(\", \"); // Apellidos separados por coma\n        }\n    };\n\n    $rootScope.readableFileSize = function(bytes, si) { // Devuelve tamanio de archivo en formato legible\n        var thresh = si ? 1000 : 1024;\n        if(Math.abs(bytes) < thresh) {\n            return bytes + ' B';\n        }\n        var units = si\n            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n        var u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while(Math.abs(bytes) >= thresh && u < units.length - 1);\n        return bytes.toFixed(1)+' '+units[u];\n    };\n\n    $rootScope.openNotification = function(key){ // Abrir enlace de notificacion y marcar leida\n        var idx = $rootScope.notifications.findIndex(function(el){return el.key == key});\n        if(!$rootScope.notifications[idx].read){ // Si no estaba leida, cambiar estado\n            $rootScope.notifications[idx].read = true;\n            $rootScope.notifCnt--; // Descontar contador\n            Cipressus.db.update({read:true},\"notifications/\"+$rootScope.notifications[idx].key); // Actualizar en db\n        }\n        if($rootScope.notifications[idx].link) // Si tiene un enlace, abrir\n            $location.path($rootScope.notifications[idx].link);\n    };\n\n    // Inicializacion componentes de materialize\n    $rootScope.sidenav = M.Sidenav.init(document.querySelector('.sidenav'), {\n        side: \"left\", \n        inDuration:400,  \n    });\n\n    M.Collapsible.init(document.querySelector('.collapsible_1'));\n    M.Collapsible.init(document.querySelector('.collapsible_2'));\n    M.Collapsible.init(document.querySelector('.collapsible_3'));\n    \n    M.Modal.init(document.getElementById(\"about_modal\"),{});\n    var usb_modal = M.Modal.init(document.getElementById(\"usb_modal\"),{});\n    var help_modal = M.Modal.init(document.getElementById(\"help_modal\"),{});\n\n    window.addEventListener(\"resize\", function(){\n        if($rootScope.resizeEvent)\n            $rootScope.resizeEvent()\n    });\n\n    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\n\n    $rootScope.signOut = function(){ // Callback para el boton de salir\n        $location.path(\"/login\");\n        $rootScope.userLogged = false;\n        Cipressus.db.stopListener(\"notifications\"); // Detener escuchador de notificaciones para que no de error\n        Cipressus.users.signOut()\n        .then(function(res){\n            console.log(res);\n            $rootScope.user = null;\n            M.toast({html: \"Hasta pronto!\",classes: 'rounded green darken-3',displayLength: 1500});\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: err[1],classes: 'rounded green darken-3',displayLength: 1500});\n        });\n    };\n\n    $rootScope.sendHelp = function(){ // Enviar mensaje de ayuda a los usuarios administradores\n        // #TODO: enviar email con el mensaje de auyda\n        console.log($rootScope.helpMessage);\n        M.toast({html: \"Listo! Te enviaremos una respuesta\",classes: 'rounded green darken-3',displayLength: 2500});\n        help_modal.close();\n    };\n\n    Cipressus.users.onUserSignedIn = function(uid){ // Cuando el usuario se logea o si estaba logeado al actualizar pagina\n        $rootScope.loading = true;\n        Cipressus.db.get('users_public/'+uid) // Descargar datos publicos de usuario\n        .then(function(public_data){\n            $rootScope.user = public_data;\n            $rootScope.user.uid = uid;\n            $rootScope.notifications = []; // Lista de notificaciones del usuario (reinicio del arreglo)\n            $rootScope.notifCnt = 0; // Reiniciar contador de notificaciones no leidas\n            Cipressus.db.get('users_private/'+uid) // Descargar informacion dde usuario para el sistema\n            .then(function(private_data){\n                if(private_data){ // Usuario aceptado por admin\n                    $rootScope.user.admin = private_data.admin;\n                    // #TODO: enrolled y course deberia ser lo mismo\n                    $rootScope.user.enrolled = private_data.enrolled;\n                    $rootScope.user.course = private_data.course;\n                }else{ // Usuario visitante\n                    $rootScope.user.admin = false;\n                    $rootScope.user.enrolled = null;\n                    $rootScope.user.course = null;\n                }\n\n                // Monitoreo de actividad\n                var browser = is.firefox() ? 'Firefox' : (is.chrome() ? 'Chrome' : (is.ie() ? 'IE' : (is.opera() ? 'Opera' : (is.safari() ? 'Safari' : 'Otro'))));\n                var OS = is.ios() ? 'IOS' : (is.android() ? 'Android' : (is.windows() ? 'Windows' : (is.linux() ? 'Linux' : 'Otro')));\n                var update_activity = public_data.activity; // Variable de monitoreo de actividad\n                if(!update_activity)\n                    update_activity = {\n                        browser: {},\n                        os: {},\n                        last_login: 0\n                    }\n                update_activity.last_login = Date.now();\n                if(update_activity.browser){ // Esta registrado la variable de navegador?\n                    if(update_activity.browser[browser]) // Contar si existe\n                        update_activity.browser[browser]++;\n                    else // Si es la primera vez que usa este navegador, iniciar\n                        update_activity.browser[browser] = 1;\n                }else{ // Si no tiene variable de navegadores, inicializar\n                    update_activity.browser = {};\n                    update_activity.browser[browser] = 1;\n                }\n                if(update_activity.os){ // Puede que no este registrado este campo\n                    if(update_activity.os[OS]) // Verificar si tiene este os contado\n                        update_activity.os[OS]++; \n                    else // Si no tiene el os, inicializar\n                        update_activity.os[OS] = 1;                \n                }else{\n                    update_activity.os = {};\n                    update_activity.os[OS] = 1;\n                }\n                \n                Cipressus.db.update(update_activity,'users_public/'+uid+'/activity').then(function(res){console.log(\"Actividad actualizada\")}); // Actualizar logeo y dispositivo usado\n\n                // Inicializar escuchador de notificaciones\n                Cipressus.db.listenChild(\"notifications\", \"uid\", uid,\n                function(data, key){\n                    data.key = key; // Copiar id de la notificacion para actualizar estado\n                    $rootScope.notifications.push(data);\n                    if(!data.read)\n                        $rootScope.notifCnt++;\n                    $rootScope.$apply();\n                },\n                function(err){\n                    console.log(err);\n                });\n\n                // Descargar ID canal discord (se muestra en home)\n                Cipressus.db.get(\"metadata/discord\") // Descargar estampa de tiempo de ultima actualizacion de esta seccion\n                .then(function (discord_data) {                    \n                    if(discord_data){\n                        url = \"https://discord.com/widget?id=\"+discord_data.id+\"&theme=\"+discord_data.theme;\n                        console.log(url);\n                        $rootScope.discordSRC = $sce.trustAsResourceUrl(url);   \n                        $rootScope.$apply();\n                    }\n                })\n                .catch(function (err) {\n                    console.log(err);   \n                    M.toast({html: \"No se pudo conectar al servidor de Discord\",classes: 'rounded red',displayLength: 2000});        \n                });\n\n                if($location.path() == \"/login\"){ // Si se acaba de logear en la vista de login\n                    if($rootScope.user.lastView){ // Si tiene guardado la ultima vista que uso\n                        var route = $rootScope.user.lastView.split(\"?id=\"); // Obtener parametros\n                        if(route.length > 1) // Si hay parametros, abrir vista y pasar argumento\n                            $location.path(\"/\"+route[0]).search({id:route[1]});\n                        else // Si no tiene parametros, abrir vista sola\n                            $location.path(\"/\"+route[0]);\n                    }else // Si no hay vista, ir a home\n                        $location.path(\"/\"); \n                    $rootScope.bodyClass = \"\";\n                }\n                $rootScope.userLogged = true;\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    Cipressus.users.onUserSignedOut = function(){ // Cuando cierra la sesion (puede ser desde otro lugar)\n        $rootScope.sidenav.close();\n        $rootScope.userLogged = false;\n        $location.path(\"/login\"); // #TODO: Ir a vista de login?\n        $rootScope.loading = false; // Preloader\n        $rootScope.$apply();\n    };\n\n    Cipressus.initialize() // Inicializar libreria principal de la app\n    .then(function(){ // Inicializacion exitosa\n        console.log(\"Cipressus inicializado.\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    })\n    .catch(function(){ // Error en inicializacion\n        console.log(\"Error de incialización de Cipressus\");\n        $rootScope.loading = false;\n        $rootScope.$apply();\n    });  \n\n\n\n    /////// Funciones para conexion con websocket server ///////\n    Cipressus.hardware.status = \"DISCONNECTED\";\n    $rootScope.usbStatus = \"DISCONNECTED\"; // Esto es copia del status anterior, pero para no hacer binding\n    $rootScope.wssIconColor = 'red-text'; // Color del icono\n\n    // Callbacks de estado de conexion con probador para que las vistas ejecuten acciones\n    $rootScope.onWssConnect = function(){};\n    $rootScope.onWssDisconnect = function(){};\n\n    var hardwareConfig = { // Configuracion de la interface con probador        \n        io:[ // Se redefine en cada vista que use el probador\n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true}, \n            {output: false, input: true}, \n            {output: false, input: false}, \n            {output: false, input: false}, \n            {output: true, input: false}, \n            {output: false, input: true},\n        ],\n        ci: 5000, // Tiempo de espera para reconexion con server\n        sp: 50, // Intervalo de actualizacion de salidas\n        onUpdate:function(){} // Funcion a ejecutar cuando se actualizan las entradas\n    };\n\n    Cipressus.hardware.onSocketClose = function(){ // Definir funcion a ejecutar si se cierra la conexion con el server (cuando se cierra el server de node)\n        // Este callback no se ejecuta si se desconecta el server desde esta misma app (con disconnectFromServer())\n        console.log(\"Socket cerrado. Reconectando...\");\n        //M.toast({html: \"Reconectando con Web Socket...\",classes: 'rounded red',displayLength: 2000});        \n        M.toast({html: \"Reconectando con server...\",classes: 'rounded blue darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"CONNECTING\";\n        $rootScope.wssIconColor = 'blue-text'; // Color del icono    \n        $rootScope.$apply();        \n    };\n\n    Cipressus.hardware.onSocketOpen = function(){ // Esto se ejecuta al iniciarse la conexion con el server\n        console.log(\"Socket abierto.\");\n        $rootScope.usbStatus = 'IDLE'; // Habilitar boton de conectar\n        $rootScope.wssIconColor = 'yellow-text'; // Color del icono\n        $rootScope.$apply();        \n        \n        M.toast({html: \"Server conectado\",classes: 'rounded blue darken-3',displayLength: 2000});\n        setTimeout(function(){ // Espera a que se envie la lista de puertos serie\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();        \n            $rootScope.$apply();\n            M.FormSelect.init(document.querySelectorAll('select'), {});            \n            M.toast({html: \"Puertos disponibles\",classes: 'rounded green darken-3',displayLength: 2000});\n        },500);\n    };\n\n    $rootScope.openUSBModal = function(){\n        if(Cipressus.hardware.status == \"IDLE\"){ // Si esta esperando puerto, actualizar lista de puertos\n            $rootScope.serialPorts = Cipressus.hardware.getSerialPorts();    \n            M.FormSelect.init(document.querySelectorAll('select'), {}); // Si es default-browser no se si hace falta correr esto           \n        }   \n        usb_modal.open();\n    };\n\n    $rootScope.connectToServer = function(){ // Abrir conexion con server\n        if(Cipressus.hardware.status == \"DISCONNECTED\") // Solo si esta desconectado\n            Cipressus.hardware.initServer(hardwareConfig); \n    };\n\n    $rootScope.disconnectFromServer = function(){ // Cerrar la conexion con el server\n        Cipressus.hardware.stopServer();\n        $rootScope.enableConnect = false; // Habilitar boton de conectar\n        M.toast({html: \"Server desconectado\",classes: 'rounded green darken-3',displayLength: 2000});\n        $rootScope.usbStatus = \"DISCONNECTED\";\n        $rootScope.wssIconColor = 'red-text'; // Color del icono\n        $rootScope.onWssDisconnect(); // Ejecutar callback que despues emplean las vistas\n        usb_modal.close();\n    };\n\n    $rootScope.connectToSerialPort = function(){ // Cuando se elige dispositivo y se presiona \"conectar\"\n        Cipressus.hardware.connectTo(document.getElementById(\"portSelect\").value); // Port Connection Request                \n        $rootScope.usbStatus = \"CONNECTED\";\n        $rootScope.wssIconColor = 'green-text'; // Color del icono\n        $rootScope.onWssConnect(); // Ejecutar callback que despues emplean las vistas\n        M.toast({html: \"Probador conectado!\",classes: 'rounded green darken-3',displayLength: 2000});\n        usb_modal.close();\n    }; \n    \n    ///////////\n\n\n\n\n    /////// PWA ///////\n\n    // #TODO: agregar boton para permitir instalar aunque haya cancelado la primera vez\n\n    var isInStandaloneMode = function() { return ('standalone' in window.navigator) && (window.navigator.standalone); };\n    \n    if (is.ios() && !isInStandaloneMode()) {\n       this.setState({ showInstallMessage: true });\n    }\n\n    window.addEventListener('beforeinstallprompt', function(e) {\n        e.userChoice.then(function(choiceResult) {\n            console.log(choiceResult.outcome);\n            if(choiceResult.outcome == 'dismissed') {\n                console.log('User cancelled home screen install');\n            }\n            else {\n                console.log('User added to home screen');\n            }\n        });\n    });\n}]);","app.directive(\"testResults\",function(){ // Evalua el test de Felder-Silverman\n    return {\n        restrict: 'E',\n        templateUrl : function() {\n            return \"views/testResults.html\";\n        },\n        scope: {\n            answers: '@'\n        },\n        link: function(scope){\n            scope.$watch('answers', function () {   \n                if (scope.answers){\n                    var scales = Cipressus.test_FS.eval(JSON.parse(scope.answers)); // Toma la funcion de la libreria\n                    for (var k = 0; k < 4; k++) {\n                        var elem = document.getElementById(\"scale_\" + k);\n                        var width = Math.abs(scales[k]) * 50 / 11;\n                        elem.style.width = width + '%';\n                        if (scales[k] < 0) {\n                            elem.style.marginLeft = 50 - width + '%';\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\n                        } else {\n                            elem.style.marginLeft = \"50%\";\n                            document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\n                        }\n                        elem.innerHTML = Math.abs(scales[k]);\n                    }\n                }    \n            }, true);\n        }\n    };\n});\n    ","app.controller(\"login\", ['$scope', '$rootScope', function ($scope, $rootScope) {\n\n    $scope.keypressed = function (code) { // Al oprimir enter hacer login con los datos de autenticacion\n        if (code === 13) // Verificar codigo de tecla\n            $scope.btn_click();\n    };\n\n    $scope.loginAttempt = function () { // Intentar logear usuario\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            $rootScope.loading = true;\n            Cipressus.users.signIn($scope.userForm).then(function (res) {\n                console.log(res);                \n                setTimeout(function(){\n                    if($rootScope.user) // Si ya se realizo el chequeo y descarga de datos\n                        M.toast({\n                            html: $rootScope.greetings()+\" \"+$rootScope.user.name+\"!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 5000\n                        });\n                },2000);\n                $rootScope.$apply();\n            }).catch(function (err) {                \n                $scope.userForm.password = null;\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            });\n        } else {\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.retrievePassword = function () {\n        if (typeof $scope.userForm !== 'undefined') { // Verificar si se ingreso algo en los campos\n            Cipressus.users.resetPwd($scope.userForm.email).then(function (res) {\n                console.log(res);\n                M.toast({\n                    html: \"Listo! Te enviamos el formulario a tu correo electrónico\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2500\n                });\n            }).catch(function (err) {\n                console.log(err[0]);\n                M.toast({\n                    html: err[1],\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n            });\n        }else{\n            console.log(\"Formulario vacío\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.registerNewUser = function () {\n        var formOk = false; // Chequeo de formulario\n        if (typeof($scope.userForm) != 'undefined'){ // Al menos un dato\n            $scope.userForm.degree = document.getElementById(\"degreeSelect\").value; // No funciona el ng-model\n            if($scope.userForm.name != \"\" && $scope.userForm.secondName != \"\" && typeof($scope.userForm.lu) != 'undefined' && $scope.userForm.degree != \"\") // Chequeo de campos\n                formOk = true;\n        }\n        if (formOk) { // Registrar usuario\n            if($scope.userForm.password == $scope.passwordConfirm){ // Contraseñas ingresadas deben coincidir\n                Cipressus.users.signUp($scope.userForm).then(function (res) {\n                    console.log(res);\n                    M.toast({\n                        html:  $rootScope.greetings()+\" \"+$scope.userForm.name+\"!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                }).catch(function (err) {\n                    console.log(err[0]);\n                    M.toast({\n                        html: err[1],\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                });\n            }else{ // Si no coinciden, avisar\n                console.log(\"Confirmación de contraseña fallida\");                \n                M.toast({\n                    html: \"Verificación de contraseña incorrecto!\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            }\n        }else{ \n            console.log(\"Formulario incompleto\");\n            M.toast({\n                html: \"Debe completar el formulario!\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n        }\n    };\n\n    $scope.updateButtons = function () { // De acuerdo al modo, cambia el texto de los botones y los callbacks\n        switch ($scope.login_mode) {\n            case 0: // login\n                $scope.btn_text = \"Iniciar sesión\";\n                $scope.menu_left = \"Registrarse\";\n                $scope.menu_right = \"¿Olvidó su contraseña?\";\n                $scope.btn_click = $scope.loginAttempt;\n                $scope.welcomeText = \"Iniciar sesión en \";\n                break;\n            case 1: // registro\n                $scope.btn_text = \"Registrarse\";\n                $scope.menu_left = \"¿Olvidó su contraseña?\";\n                $scope.menu_right = \"Iniciar sesión\";\n                $scope.btn_click = $scope.registerNewUser;\n                $scope.welcomeText = \"Registrarse en \";\n                break;\n            case 2: // recuperacion\n                $scope.btn_text = \"Recuperar contraseña\";\n                $scope.menu_left = \"Iniciar sesión\";\n                $scope.menu_right = \"Registrarse\";\n                $scope.btn_click = $scope.retrievePassword;\n                $scope.welcomeText = \"Recuperar contraseña de \";\n                break;\n        }\n    };\n\n    $scope.login_mode = 0; // 0->login; 1->registro; 2->recuperacion de clave\n    $scope.updateButtons();\n    $rootScope.bodyClass = \"body-login\";\n    M.FormSelect.init(document.querySelectorAll('select'), {});    \n    setTimeout(function(){M.updateTextFields();},1500); // Esto no funciona \n}]);","app.controller(\"home\", ['$scope', '$rootScope', '$location', 'localStorageService', function ($scope, $rootScope, $location, localStorageService) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    $scope.testFSAnswers = []; // Objeto auxiliar para mostrar las respuestas del tests (esta con un watch dentro de la directiva)\r\n\r\n    ///// Cuestionario Felder-Silvermann\r\n    $scope.testStatus = 0; // 0->Espera inicio, 1->Espera completar respuestas, 2->Respuestas completas, espera \"Finalizar\", 3->Respuestas enviados\r\n    if(!$rootScope.user.test_fs && !$rootScope.user.admin && $rootScope.user.enrolled){ // Si el usuario no es admin y aun no responde el test de FS, mostrar modal\r\n        var test_modal = M.Modal.init(document.getElementById(\"test_modal\"), {\r\n            dismissible: false\r\n        });\r\n\r\n        $scope.loadTest = function () { // Mostrar preguntas\r\n            $scope.test_FS = Cipressus.test_FS.questions;\r\n            $scope.results = localStorageService.get(\"testFS\");\r\n            if (!$scope.results)\r\n                $scope.results = {\r\n                    startTime: Date.now(),\r\n                    answers: [],\r\n                    timeline: [],\r\n                    changes: []\r\n                };\r\n            $scope.testStatus = 1; // Mostrar test\r\n        };\r\n\r\n        $scope.putOption = function (quest, opt) {\r\n            if ($scope.results.answers[quest] != undefined) { // Si ya existia la respuesta, registrar cambio\r\n                $scope.results.changes.push({\r\n                    quest: quest,\r\n                    prev: $scope.results.answers[quest],\r\n                    next: opt\r\n                });\r\n            }\r\n            $scope.results.answers[quest] = opt; // Respuesta\r\n            $scope.results.timeline[quest] = (Date.now() - $scope.results.startTime) / 1000; // Tiempo de respuesta en segundos\r\n            localStorageService.set(\"testFS\", $scope.results); // Actualizar en LS\r\n            if ($scope.results.answers.filter(function (value) {\r\n                    return value !== undefined && value !== null\r\n                }).length == 44) // Cantidad de preguntas contestadas\r\n                $scope.testStatus = 2; // Habilitar boton \"finalizar\"\r\n        };\r\n\r\n        $scope.saveTestResults = function () { // Guardar los resultados del test y mostrar resultados\r\n            $rootScope.loading = true;\r\n            console.log($scope.results);\r\n            $scope.testFSAnswers = $scope.results.answers; // Copio en otra variable para que se ejecute la fc de la directiva\r\n            Cipressus.db.set($scope.results, \"users_public/\" + $rootScope.user.uid + \"/test_fs\")\r\n                .then(function (res) {\r\n                    //console.log(res);\r\n                    M.toast({\r\n                        html: \"Gracias por tu tiempo!\",\r\n                        classes: 'rounded green darken-3',\r\n                        displayLength: 2000\r\n                    });                    \r\n                    $scope.testStatus = 3; // Para mostrar resultados, pasar al modo 3\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al guardar resultados\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                })\r\n        };\r\n\r\n        test_modal.open();\r\n    }\r\n\r\n    var downloadNews = function () { // Descargar noticias y usuarios de la db\r\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\r\n        var authors = []; // Uids de usuarios que hicieron publicaciones\r\n        if($rootScope.user.course){ // Si tiene asignado un curso, descargar noticias\r\n            Cipressus.db.getSorted('news/'+$rootScope.user.course, 'order') // Descargar lista de novedades\r\n                .then(function (snapshot) {\r\n                    snapshot.forEach(function (childSnapshot) { // Lista ordenada\r\n                        var child = childSnapshot.val();\r\n                        child.key = childSnapshot.key;\r\n                        child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\r\n                        if (authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\r\n                            authors.push(child.author); // Agregar a la lista\r\n                        for(var k in child.comments){ // Para cada comentario, obtener autores\r\n                            if (authors.indexOf(child.comments[k].uid) == -1) // Si todavia no se guardo el uid del autor de este comentario\r\n                                authors.push(child.comments[k].uid); // Agregar a la lista\r\n                        }\r\n                        $scope.news.unshift(child); // Sentido inverso para que las nuevas noticias queden arriba\r\n                    });\r\n                    $scope.users = {};\r\n                    if(authors.length > 0){ // Descargar datos de los usuarios que publicaron o comentaron\r\n                        var k = 0; // Indice de arreglo de authors\r\n                        var getUser = function(k){ // Funcion recursiva para ir descargando los datos de usuarios\r\n                            Cipressus.db.get('users_public/' + authors[k]) // Descargar datos de los autores de publicaciones solamente\r\n                                .then(function (user_data) {\r\n                                    $scope.users[authors[k]] = user_data;\r\n                                    k++; // Pasar al siguiente\r\n                                    if (k == authors.length) { // Si no quedan mas, terminar\r\n                                        newsData = { // Objeto a guardar en localStorage\r\n                                            news: $scope.news,\r\n                                            authors: $scope.users,\r\n                                            last_update: Date.now()\r\n                                        };\r\n                                        localStorageService.set(\"newsData_\"+$rootScope.user.course, newsData);\r\n                                        $rootScope.loading = false;\r\n                                        $rootScope.$apply();\r\n                                        setTimeout(function(){\r\n                                            M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {}); // Dropdown eliminar comentario\r\n                                        },200);\r\n                                    }else{ // Si quedan mas, pasar al siguiente\r\n                                        getUser(k);\r\n                                    }\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                });\r\n                        };\r\n                        getUser(0); // Empezar\r\n                    }else{\r\n                        $rootScope.loading = false;\r\n                        $rootScope.$apply();\r\n                    }\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                });\r\n        }else{ // Si el usuario no tiene curso asignado\r\n            $rootScope.loading = false;\r\n        }\r\n    };\r\n\r\n    /// Comentarios\r\n    var comment_modal = M.Modal.init(document.getElementById(\"comment_modal\"), {});\r\n    $scope.commentText = \"\"; // Input de texto para comentarios\r\n\r\n    $scope.commentPost = function(idx){ // Abrir modal para escribir comentario\r\n        $scope.commEntryIdx = idx;\r\n        comment_modal.open();\r\n        setTimeout(function(){\r\n            M.updateTextFields();\r\n        },100);\r\n    };\r\n\r\n    $scope.publishComment = function(){ // Adjuntar comentario al post correspondiente        \r\n        if($scope.commentText != \"\"){ // Tiene que existir texto\r\n            $rootScope.loading = true;\r\n            var comment = {\r\n                uid: $rootScope.user.uid,\r\n                text: $scope.commentText,\r\n                timestamp: Date.now()\r\n            };\r\n            Cipressus.db.push(comment,'news/'+$rootScope.user.course+'/'+$scope.news[$scope.commEntryIdx].key+'/comments')\r\n            .then(function(snap){\r\n                // Actualizar objeto local\r\n                if(!$scope.news[$scope.commEntryIdx].comments)\r\n                    $scope.news[$scope.commEntryIdx].comments = {};\r\n                $scope.news[$scope.commEntryIdx].comments[snap.key] = comment;\r\n                $scope.commentText = \"\"; // Borrar el input\r\n                if(!$scope.users[$rootScope.user.uid]){ // Si no estan los datos de este usuario, agregar\r\n                    $scope.users[$rootScope.user.uid] = $rootScope.user;\r\n                }\r\n                // Actualizar estampa de tiempo para cacheos\r\n                var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n                Cipressus.db.update(ts,\"metadata/updates/news\")\r\n                .then(function(res){\r\n                    M.toast({\r\n                        html: \"Comentario publicado correctamente\",\r\n                        classes: 'rounded green',\r\n                        displayLength: 1500\r\n                    });\r\n                    // Reinicializar dropdowns\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    comment_modal.close();\r\n                    $scope.$apply();\r\n                })\r\n                .catch(function(err){\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al publicar comentario\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 1500\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        }else{\r\n            M.toast({\r\n                html: \"El comentario está vacío!\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.deleteComment = function(commentId, entryId){ // Eliminar comentario\r\n\r\n        $rootScope.loading = true;\r\n        \r\n        Cipressus.db.set(null,'news/'+$rootScope.user.course+'/'+$scope.news[entryId].key+'/comments/'+commentId)\r\n        .then(function(snap){\r\n            // Actualizar objeto local\r\n            delete $scope.news[entryId].comments[commentId];\r\n            // Actualizar estampa de tiempo para cacheos\r\n            var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\r\n            Cipressus.db.update(ts,\"metadata/updates/news\")\r\n            .then(function(res){\r\n                M.toast({\r\n                    html: \"Comentario eliminado\",\r\n                    classes: 'rounded green',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                comment_modal.close();\r\n                $scope.$apply();\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al publicar comentario\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 1500\r\n                });\r\n                $rootScope.loading = false;\r\n                $scope.$apply();\r\n            });\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al publicar comentario\",\r\n                classes: 'rounded red',\r\n                displayLength: 1500\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n\r\n    };\r\n\r\n    // Monitoreo de actividad\r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"home\").catch(function (err) {\r\n        console.log(err);\r\n    });\r\n\r\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\r\n    if (newsData) { // Si hay datos en local storage\r\n        $scope.news = newsData.news;\r\n        $scope.users = newsData.authors;\r\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\r\n            .then(function (news_update) {\r\n                if (newsData.last_update < news_update) // Hay cambios en la base de datos\r\n                    downloadNews(); // Descargar de db y guardar en localstorage\r\n                else { // Si no hay cambios, terminar\r\n                    // Inicializar dropdowns de eliminar comentarios\r\n                    M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {});\r\n                    $rootScope.loading = false;\r\n                    $rootScope.$apply();\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                M.toast({\r\n                    html: \"Ocurrió un error al acceder a la base de datos\",\r\n                    classes: 'rounded red',\r\n                    displayLength: 2000\r\n                });\r\n                $rootScope.loading = false;\r\n                $rootScope.$apply();\r\n            });\r\n    } else { // Si no hay datos, descargar si o si\r\n        downloadNews();\r\n    }\r\n}]);","app.controller(\"dashboard\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged) $location.path(\"/login\");\n    \n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function(data){ // Actualiza el grafico de proporciones de notas\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '100%'},\n            title: {\n                text: 'Proporción de calificaciones'\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions:{\n                series:{\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            updatePolarPlot(event.point.node.id);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",data: data, allowDrillToNode: true,cursor: 'pointer',\n                dataLabels: {format: '{point.name}',filter: {property: 'innerArcLength',operator: '>',value: 16}},\n                levels: [\n                    {level: 1,levelIsConstant: false,dataLabels: {filter: {property: 'outerArcLength',operator: '>',value: 64}}},\n                    {level: 2,colorIndex: 1},\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}}\n                ]\n            }],\n            tooltip: {headerFormat: \"\",pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'}\n        });\n    };\n\n    var updatePolarPlot = function(id){ // Actualizar grafico de notas\n        if($scope.user){ // Si el alumno no esta habilitado por el docente no se muestra nada\n            var data = []; // Datos para mostrar en el grafico polar\n            // Buscar nodo de la actividad seleccionada\n            $scope.currentNode = Cipressus.utils.searchNode($scope.activities,id); \n            var sc = Cipressus.utils.eval($scope.user, $scope.currentNode);\n            var value = sc.score / $scope.currentNode.score * 100;\n            $scope.currentActivityScores = { // Para detallar textualmente\n                name: $scope.currentNode.name,\n                points: ($scope.currentNode.score*value/100).toFixed(2), \n                score: value.toFixed(2),\n                children:[] // Asjuntar los nodos hijos\n            };\n            for(k in $scope.currentNode.children){ // Para cada sub actividad\n                // Calcular nota de las sub actividades\n                var subsc = Cipressus.utils.eval($scope.user,$scope.currentNode.children[k]);\n                var subValue = subsc.score/$scope.currentNode.children[k].score*100;\n                // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n                $scope.currentActivityScores.children.push({\n                    name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                    points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                    score: subValue.toFixed(2) // Nota en porcentaje\n                });\n                data.push({ // Agregar nota de esa actividad a los datos para el chart\n                    y: $scope.currentNode.children[k].score,\n                    z: parseInt(subValue.toFixed(2)),\n                    name: $scope.currentNode.children[k].name\n                })\n            }\n            $scope.$apply();\n            Highcharts.chart('variable_pie_container', {\n                chart: {type: 'variablepie',height: '100%'},\n                credits:{enabled:false},\n                title: {text: 'Mis calificaciones'},\n                tooltip: {\n                    headerFormat: '',\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                        'Nota actividad: <b>{point.z}%</b><br/>'\n                },\n                series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n            });\n        }\n    };\n\n    var updateProgressPlot = function(){ // Generar grafico polar de progreso de la materia\n        var progressData = [ // Progreso de la materia\n            {\n                name: 'Avance programa',\n                y: totalEvents-futureEvents,\n                color: \"#8181F7\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Restantes',\n                y: futureEvents,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        var attendanceData = [ // Porcentaje de asistencia\n            {\n                name: 'Presente',\n                y: $scope.user.scores.asistencia.score,\n                color: \"#FF4444\",\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            {\n                name: 'Ausente',\n                y: 100-$scope.user.scores.asistencia.score,\n                color:\"#dddddd\",\n                dataLabels: {\n                    enabled: false\n                }\n            }\n        ];\n        \n        Highcharts.chart('progress_pie_container', {\n            chart: {\n                type: \"pie\",\n                plotBorderWidth: 0\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: 'Mi participación'\n            },\n            tooltip: {\n                pointFormat: '<b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {                    \n                    startAngle: -90,\n                    endAngle: 90,\n                    center: ['50%', '50%']\n                }\n            },\n            series: [\n                {name: 'Asistencia',size: '70%',data: attendanceData},\n                {name: 'Progreso',innerSize: '70%',data: progressData},\n            ]\n        });        \n    };\n\n    var updateBarPlot = function () { // Genera los arreglos de calificaciones\n\n        var seriesData = [];\n        var drillDownData = [];\n\n        for (var k in $scope.users) { // Para cada usuario\n            if(!$scope.users[k].admin && $scope.users[k].scores && $scope.users[k].course == $rootScope.user.course){ // Si tiene notas, no es admin y coincide con el curso\n                seriesData.push({ // Evaluar e insertar resultado en array\n                    name: k,\n                    y: (Cipressus.utils.eval($scope.users[k],$scope.activities)).score,\n                    color: k==$rootScope.user.uid ? \"#FF0000\":\"#AAAAAA\",                    \n                    drilldown: k\n                });\n\n                var tempData = []; // Arreglo temporal con notas del alumno\n                for(var j in $scope.activities.children){ // Evaluar tambien las principales actividades\n                    tempData.push([\n                        $scope.activities.children[j].id,\n                        (Cipressus.utils.eval($scope.users[k],$scope.activities.children[j])).score/$scope.activities.children[j].score*100\n                    ]);\n                }\n\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\n                    name: k==$rootScope.user.uid ? \"Yo\" : \"#\"+(seriesData.length+1),\n                    id: k,\n                    data:tempData\n                })\n            }\n        }\n\n        // Ordenar datos por nota\n        seriesData.sort( function(a,b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0)}); \n        // Renombrar datos por sus ordenes excepto mi nota\n        for(var k in seriesData)\n            seriesData[k].name = seriesData[k].name == $rootScope.user.uid ? \"Yo\" : \"#\"+(parseInt(k)+1);\n\n        \n        Highcharts.setOptions({\n            lang: {\n                drillUpText: '<< Volver a {series.name}'\n            }\n        });\n\n        Highcharts.chart('barplot_container', {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Calificaciones del curso'\n            },\n            xAxis: {\n                type: 'category'\n            },\n            yAxis: {\n                title: {\n                    text: 'Puntaje acumulado'\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.y:.1f} pts'\n                    }\n                }\n            },\n\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f} pts</b>'\n            },\n\n            series: [{\n                name: \"Alumno\",                \n                data:seriesData\n            }],\n            drilldown:{\n                series: drillDownData\n            }\n        });\n    };\n\n    $scope.drillUp = function () {\n        $(\"#barplot_container\").highcharts().drillUp();\n    };\n\n    var updateAttendancePlot = function(){\n        var categories = []; // Lista de fechas de los eventos\n\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\n\n        //if($scope.user.attendance){\n            var data = []; // Asistencia acumulada por clase\n            var evCnt = 0; // Contador de eventos\n            var evAtt = 0; // Contador de eventos asistidos\n            for(var k in $scope.eventsAll){\n                if($scope.eventsAll[k].start < Date.now() && $scope.eventsAll[k].attendance){\n                    evCnt++; // Contar evento\n                    if($scope.user.attendance[k]) // Si asistio a esta clase\n                        evAtt++; \n                    if(evAtt != 0)\n                        data.push(evAtt/evCnt*100);\n                    else \n                        data.push(0);\n                    if(first) // Primera pasada\n                        categories.push($rootScope.getTime(3,$scope.eventsAll[k].start)); // Agregar evento a la lista\n                }\n            }\n            first = false;\n            console.log(data);\n\n            Highcharts.chart('attendance_container', {\n                chart: {\n                    type: 'spline'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: 'Asistencia a clases'\n                },\n                xAxis: {\n                    categories: categories\n                },\n                series: [{\n                    name:'Mi asistencia',\n                    data: data\n                }]\n            });\n        //}\n    };\n\n    // Inicializacion \n    var totalEvents=0, futureEvents=0, attendableEvents=0;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"dashboard\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar arbol de actividades del curso actual\n        .then(function(activities_data){\n            $scope.activities = activities_data; // Nodo root del arbol de notas\n            Cipressus.db.get('users_private') // Descargar datos de todos los usuarios #TODO: filtrar a los del curso actual\n                .then(function(user_data){\n                    $scope.users = user_data;\n                    $scope.user = user_data[$rootScope.user.uid];\n                    if($scope.user){ // Si ya fue aprobado por admin\n                        // Si aun no fue evaluado en nada, dejar arreglos vacios (porque en DB no se guardan)\n                        if(typeof($scope.user.scores) == 'undefined')\n                            $scope.user.scores = [];\n                        if(typeof($scope.user.submits) == 'undefined')\n                            $scope.user.submits = [];\n                    }\n                    // Actualizar graficos al nodo root\n                    var arr = Cipressus.utils.getArray($scope.activities);\n                    $scope.$apply(); // Este es para que actualice la vista antes de graficar\n                    updateSunburst(arr);                    \n                    updatePolarPlot($scope.activities.id);                    \n                    $rootScope.$apply(); \n                    // Descargar lista de eventos para linea del tiempo y para evaluar asistencia del usuario\n                    $scope.events=[];                    \n                    Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                    .then(function(events_data){\n                        $scope.eventsAll = {};\n                        events_data.forEach(function(childSnapshot){\n                            $scope.eventsAll[childSnapshot.key] = childSnapshot.val();\n                            var ev = childSnapshot.val();\n                            totalEvents++; // Contar actividad (se usa para asistencia y avance del programa)\n                            if(ev.start > Date.now()){ // Si es un evento futuro\n                                futureEvents++; // Contar los que faltan\n                                if($scope.events.length < 5){ // Agregar solamente 5\n                                    // Asignar lado de linea del tiempo alternados\n                                    ev.side = $scope.events.length%2 ? \"tl-right\" : \"tl-left\";\n                                    $scope.events.push(ev); // Agregar evento al arreglo  \n                                }\n                            }else{ // Si es evento que ya paso\n                                if(ev.attendance) // Y si tiene asistencia habilitada\n                                    attendableEvents++; // Contar para calcular porcentaje de asistencia\n                            }\n                        });\n                        for(var k in $scope.users) // Calcular asistencia para todos\n                            if($scope.users[k]){ // Si es alumno inscripto, existe este objeto\n                                if($scope.users[k].scores){ // Si tiene alguna calificacion\n                                    if($scope.users[k].attendance){ // Si tiene asistencia a algun evento\n                                        var userAttendedEvents = Object.getOwnPropertyNames($scope.users[k].attendance).length; // Cantidad de clases asistidas por el usuario\n                                        var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0; // Calcular porcentaje de asistencia\n                                        $scope.users[k].scores.asistencia = {\n                                            score: att, \n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };  \n                                    }else{ // Si no asistio a nada, le dejo la asitencia en 0\n                                        $scope.users[k].scores.asistencia = {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        };    \n                                    }\n                                }else{ // Si no tiene puntajes, crear al menos la asistencia para el progreso                             \n                                    $scope.users[k].scores = {\n                                        asistencia: {\n                                            score: 0,\n                                            evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                                            timestamp: Date.now()\n                                        }\n                                    };\n                                }            \n                            }\n                        if($scope.user)\n                            if($scope.user.scores)\n                                $scope.user.scores.asistencia = $scope.users[$rootScope.user.uid].scores.asistencia; // Copiar para el usuario actual\n                        updateProgressPlot(); // Actualizar el grafico de avance de la materia\n                        updatePolarPlot($scope.activities.id); // Actualizar nuevamente el grafico de notas ya que tiene asistencia\n                        updateBarPlot();\n                        updateAttendancePlot();\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    })\n                    .catch(function(err){ // events\n                        console.log(err);\n                        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                        $rootScope.loading = false;\n                        $rootScope.$apply(); \n                    });\n                    \n                })\n                .catch(function(err){ // users_private\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                });        \n        })\n        .catch(function(err){ // activities\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n            $rootScope.$apply(); \n        });\n}]);","app.controller(\"calendar\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n    \n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.events = []; // Arreglo de eventos (clases, labs, parciales)\n\n    // Componentes materialize\n    var viewModal = M.Modal.init(document.getElementById(\"view_modal\"), {});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {});\n    var confirmDeleteModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {});\n    var confirmMoveModal = M.Modal.init(document.getElementById(\"confirm_move_modal\"), {});\n    M.FormSelect.init(document.querySelectorAll('select'), {});\n\n    $scope.refreshCalendar = function(){ // Sincroniza arreglo de eventos con lo que se muestra\n        $('#calendar').fullCalendar('removeEvents'); // Para que no duplique\n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Renderizar todos\n    };\n\n    // Inicializar calendar\n    $('#calendar').fullCalendar({\n        weekends: false,\n        editable: $rootScope.user.admin,\n        locale: 'es-us',\n        lang: 'es',\n        allDaySlot:false,\n        minTime:\"08:00\",\n        maxTime:\"22:00\",\n        timeFormat: \"HH:mm\",\n        dateFormat: \"DD/MM\",\n        slotLabelInterval:\"01:00\",\n        slotLabelFormat: 'HH:mm',\n        header: { center: 'month,agendaWeek' },\n        eventSources: [{\n            events: $scope.events\n        }],\n        eventDrop: function( event ) { // Al soltar evento en otro casillero\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventResize: function(event){ // Extender o acortar horario de evento\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: $rootScope.user.uid,\n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000,\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: Date.now(),\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB pero se requiere para actualizar calendar\n                id: event.id,\n                idx: event.idx\n            };\n            confirmMoveModal.open(); // Abrir dialogo de confirmacion de cambios\n            $scope.$apply();\n        },\n        eventClick: function(event) {\n            $scope.selectedEvent = { // Extraer datos necesarios para actualizar en DB\n                author: event.author, \n                attendance: event.attendance || false,\n                color: event.color,\n                start: moment(event.start._d).unix()*1000+10800000, // GMT+3 (cosa de calendar)\n                end: moment(event.end._d).unix()*1000+10800000,\n                info: event.info,\n                timestamp: event.timestamp, // Esto se edita despues\n                title: event.title\n            };\n            $scope.selectedEventExtras = { // Esta info no va en la DB\n                id: event.id,\n                idx: event.idx,\n                startDay: moment(event.start).format(\"DD/MM\"),\n                startTime: moment(event.start).format(\"HH:mm\"),\n                endTime: moment(event.end).format(\"HH:mm\"),\n                fromNow: moment(event.start).fromNow()\n            };\n            viewModal.open();\n            $scope.$apply();\n        },\n        viewRender: function(view,element){\n            $scope.refreshCalendar();\n        }\n    });\n\n    $scope.confirmDeleteEvent = function(){\n        viewModal.close();\n        setTimeout(function(){confirmDeleteModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.editEvent = function(newEvent){ // Editar evento o crear nuevo\n        if(newEvent){ // Crear nuevo (click en +)\n            $scope.selectedEvent = {\n                attendance: false,\n\n            };\n            $scope.selectedEventExtras = null; // No tengo id ni idx y se deben definir\n            document.getElementById(\"event_date\").value = null;\n            document.getElementById(\"event_start_time\").value = null;\n            document.getElementById(\"event_end_time\").value = null;\n            document.getElementById(\"tag_select\").value = \"#aaaaaa\";\n        }else{ // Editar existente (click en evento del calendario)\n            viewModal.close();\n            document.getElementById(\"event_date\").value = moment($scope.selectedEvent.start).format(\"YYYY-MM-DD\");\n            document.getElementById(\"event_start_time\").value =  moment($scope.selectedEvent.start).format(\"HH:mm\");\n            document.getElementById(\"event_end_time\").value = moment($scope.selectedEvent.end).format(\"HH:mm\");\n            document.getElementById(\"tag_select\").value = $scope.selectedEvent.color;\n            setTimeout(function(){\n                M.updateTextFields();\n            },200);\n        }        \n        setTimeout(function(){editModal.open();},650); // Esto va con delay porque materialize provoca un loop de call stack infinito\n    };\n\n    $scope.saveEvent = function(){ // Guardar evento en DB\n        $rootScope.loading = true;\n        $scope.selectedEvent.author = $rootScope.user.uid;\n        $scope.selectedEvent.timestamp = Date.now();\n        $scope.selectedEvent.color = document.getElementById(\"tag_select\").value;\n        var date = document.getElementById(\"event_date\").value;\n        var startTime = document.getElementById(\"event_start_time\").value;\n        var endTime = document.getElementById(\"event_end_time\").value;\n        var start = moment(startTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        var end = moment(endTime+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n        // Chequeo de formulario\n        var formStatus = 0;\n        if($scope.selectedEvent.title){\n            if($scope.selectedEvent.title == \"\")\n                formStatus = 1;\n        }else\n            formStatus = 2;\n        if(start && end){ // Si se pudo procesar fecha y hora\n            if(start < end){ // Si lo ingresado es coherente\n                $scope.selectedEvent.start = start;\n                $scope.selectedEvent.end = end;\n            }else\n                formStatus = 3;\n        }else\n            formStatus = 4;\n        if($scope.selectedEvent.info == 'undefined')\n            $scope.selectedEvent.info = \"\";\n        if(formStatus != 0){ // Si algo no estaba bien, mostrar error y salir\n            console.log(\"Error \"+formStatus);\n            console.log(\"Titulo\", $scope.selectedEvent.title);\n            console.log(\"Fecha y hora\",date,startTime,endTime);\n            M.toast({html: \"No se ingresó fecha u horarios correctamente\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            return;\n        }\n        // Si todo esta bien, guardar\n        if($scope.selectedEventExtras) // Si esta este objeto, hay que actualizar\n            Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n                $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n                $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n                $scope.refreshCalendar();\n                M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEvent = null; // Para que no se vuelva a utilizar por error\n                $scope.selectedEventExtras = null;\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        else // Si es nuevo evento, insertar en DB\n            Cipressus.db.push($scope.selectedEvent,\"events/\"+$rootScope.user.course)\n            .then(function(snapshot){\n                // Poner el formato de calendar\n                $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n                $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n                // Agregarle los atributos de indice e identificador para que quede en local\n                $scope.selectedEvent.idx = $scope.events.length;\n                $scope.selectedEvent.id = snapshot.key;\n                $scope.events.push($scope.selectedEvent); // Insertar en arreglo\n                $('#calendar').fullCalendar('renderEvent',$scope.selectedEvent);\n                M.toast({html: \"Nuevo evento registrado\",classes: 'rounded green darken-3',displayLength: 2000});  \n                $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n                editModal.close();      \n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    $scope.deleteEvent = function(){ // Borrar el ultimo evento clickeado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            $scope.events.splice($scope.selectedEventExtras.idx,1); // Quitar del arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null; // Para que no se vuelva a utilizar por error\n            M.toast({html: \"Evento eliminado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmDeleteModal.close();      \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"No se pudo eliminar, intente en otro momento\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n    $scope.moveEvent = function(){ // Mover el elemento arrastrado (luego de confirmar)\n        $rootScope.loading = true;\n        Cipressus.db.update($scope.selectedEvent,\"events/\"+$rootScope.user.course+\"/\"+$scope.selectedEventExtras.id)\n        .then(function(snapshot){\n            // Agregarle los atributos de indice e identificador para que quede en local\n            $scope.selectedEvent.id = $scope.selectedEventExtras.id;\n            $scope.selectedEvent.idx = $scope.selectedEventExtras.idx;\n            $scope.selectedEvent.start = moment($scope.selectedEvent.start).format();\n            $scope.selectedEvent.end = moment($scope.selectedEvent.end).format();\n            $scope.events[$scope.selectedEventExtras.idx] = $scope.selectedEvent; // Actualizar en arreglo\n            $scope.refreshCalendar();\n            $scope.selectedEventExtras = null;\n            M.toast({html: \"Evento actualizado\",classes: 'rounded green darken-3',displayLength: 2000});  \n            confirmMoveModal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };    \n    \n    Cipressus.utils.activityCntr($rootScope.user.uid,\"calendar\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get(\"events/\"+$rootScope.user.course) // Descargar todos los eventos del curso y renderizar en calendar\n    .then(function(events_data){\n        var idx = 0; // Guardo los indices del arreglo\n        for(k in events_data){ // Convertir las actividades en eventos de calendar\n            var ev = events_data[k];\n            ev.start = moment(ev.start).format();\n            ev.end = moment(ev.end).format();\n            ev.id = k;\n            ev.idx = idx; // El indice me sirve para ubicarlo al editar evento\n            ev.durationEditable = $rootScope.user.admin;\n            $scope.events.push(ev);\n            idx++;\n        }   \n        $('#calendar').fullCalendar('renderEvents',$scope.events); // Mostrar todos\n        $rootScope.loading = false;\n        $scope.$apply();\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });\n}]);","app.controller(\"sources\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n\n    $scope.pushFiles = function (folderName) { // Agregar archivos a un directorio\n        \n        var uploadFiles = function(folderKey){ // Subir los archivos al storage (es metodo porque se llama de distintos lugares)\n            if (document.getElementById(\"filesInput\").files.length > 0) { // Si se cargaron las fotos al storage        \n                var fileList = [];\n                var filenames = [];\n                var uploadingFiles = document.getElementById(\"filesInput\").files; // Lo copio para usar mas adelante fuera de scope            \n                for (var k in uploadingFiles) {\n                    if (typeof (uploadingFiles[k]) == \"object\") {\n                        fileList.push(uploadingFiles[k]);\n                        filenames.push(Cipressus.utils.generateFileName(25) + \".\" + uploadingFiles[k].name.split(\".\")[1]); // Nombre aleatorio mas formato de archivo\n                    }\n                }\n    \n                Cipressus.storage.putMultiple(fileList, \"Files\", filenames)\n                    .then(function (res) { // res contiene el arreglo de urls asignadas por firebase y los pesos\n                        $scope.fileListQueue = []; // LIsta de archivos que hay que guardar en database\n                        for (var k in res.urls) { // Para cada url\n                            $scope.fileListQueue.push({\n                                name: uploadingFiles[k].name.split(\".\")[0], // Extraer nombre de archivo\n                                size: res.sizes[k], // Tamanio de archivo\n                                format: uploadingFiles[k].name.split(\".\")[1], // Extension del archivo\n                                link: res.urls[k], // Url de los archivos\n                                filename: filenames[k], // Nombre de archivo en el storage\n                                uploaded: Date.now(),\n                                downloads: 0\n                            });\n                        }\n                        Cipressus.db.pushMultiple($scope.fileListQueue, \"sources/\" + folderKey + \"/files\")\n                            .then(function (res2) {\n                                // Actualizar tablas (carpetas) de archivos\n                                var idx = 0; // Contador para items de carpeta o directorio\n                                if(!$scope.sources){ // Para la primera vez cuando no hay ningun directorio\n                                    $scope.sources = {};\n                                    $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                }else{ // Existen directorios\n                                    if(!$scope.sources[folderKey]){ // Si se creo el directorio por primera vez\n                                        $scope.sources[folderKey] = {name: folderName, files:{}}; // Crear el arreglo de archivos\n                                    }\n                                    if(!$scope.sources[folderKey].files) // Puede existir el directorio pero no tener archivos (En caso de que se hayan borrado todos)\n                                    $scope.sources[folderKey].files = {}; // Crear solo el objeto vacio\n                                }\n                                for(var k in res2){ // Para cada key   \n                                    $scope.sources[folderKey].files[res2[k].key]=$scope.fileListQueue[idx];\n                                    idx++;\n                                }\n                                // Cerrar dialogo\n                                M.toast({\n                                    html: \"Direcetorio actualizado.\",\n                                    classes: 'rounded green darken-3',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                document.getElementById(\"filesInput\").value = null;\n                                document.getElementById(\"filesInputText\").value = null;\n                                $scope.$apply();\n                            })\n                            .catch(function (err) {\n                                console.log(err);\n                                M.toast({\n                                    html: \"Ocurrio un error guardar archivos.\",\n                                    classes: 'rounded red',\n                                    displayLength: 1500\n                                });\n                                $rootScope.loading = false;\n                                files_modal.close();\n                                $scope.$apply();\n                            });\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al subir archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n    \n            } else {\n                M.toast({\n                    html: \"Debe seleccionar los archivos primero\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                return;\n            }\n        };\n\n        if(!folderName){ // Si no eligio nombre de carpeta, no continuar\n            M.toast({\n                html: \"Debe indicar el nombre del directorio\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }else{ // Si hay al menos algun caracter, continuar\n            \n            $rootScope.loading = true;\n\n            /// Buscar el key del directorio que tenga este name\n            var folderKey = \"\";\n            for(var k in $scope.sources)\n                if(folderName == $scope.sources[k].name) // Coincidencia\n                    folderKey = k; // Identificador a donde van los archivos subidos\n\n            if(folderKey == \"\"){ // Si no se encontro, crear nueva entrada                \n                Cipressus.db.push({name:folderName},\"sources\")\n                .then(function(res){\n                    folderKey = res.key;\n                    uploadFiles(folderKey); // Continuar con la carga de archivos\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({\n                        html: \"Error al generar directorio\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });    \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si la entrada ya existe\n                uploadFiles(folderKey);  // Continuar con la carga de archivos\n            }\n        }\n    };\n\n    $scope.deleteFile = function(folder,key){ // Marcar el archivo a borrar para que el usuario confirme        \n        fileKeyToDelete = [folder,key];\n        $scope.fileToDelete = $scope.sources[folder].files[key];\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.fileToDelete.filename, \"Files\")\n            .then(function (res) {\n                // Ahora hay que borrar la referencia de la db\n                Cipressus.db.set(null, \"sources/\"+fileKeyToDelete[0]+\"/files/\"+fileKeyToDelete[1]) // #TODO: Eliminar carpeta si ya no quedan mas archivos en la entrada\n                    .then(function (res2) {\n                        // Eliminar los elementos de la vista                                        \n                        delete $scope.sources[fileKeyToDelete[0]].files[fileKeyToDelete[1]];\n                        fileKeyToDelete = [];\n                        M.toast({\n                            html: \"Archivo eliminado!\",\n                            classes: 'rounded green darken-3',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        confirm_delete_modal.close();\n                        $scope.$apply();\n                    })\n                    .catch(function (err2) {\n                        console.log(err2);\n                        M.toast({\n                            html: \"Ocurrio un error al eliminar archivos\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al eliminar archivos\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n    $scope.openImage = function (link) { // Abrir archivos de imagen en modal\n        document.getElementById(\"image_viewer\").src = link;\n        image_viewer_modal.open();\n    };\n\n    $scope.openPdfViewer = function(url){ // Abrir el pdf en un modal\n        $scope.pdfURL = url;\n        pdf_viewer_modal.open();\n    };\n\n    ///// Inicialización controller\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {});\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var pdf_viewer_modal = M.Modal.init(document.getElementById(\"pdf_viewer_modal\"), {preventScrolling: false});\n    var image_viewer_modal = M.Modal.init(document.getElementById(\"image_viewer_modal\"), {preventScrolling: false});\n\n    var fileKeyToDelete = [];\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"sources\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('sources') // Descargar lista de novedades\n        .then(function (snapshot) {\n            //console.log(snapshot);\n            $scope.sources = snapshot;\n            // Lista de carpetas para autocompletador\n            var folderList = {};\n            for(var k in $scope.sources)\n                folderList[$scope.sources[k].name] = null;\n            M.Autocomplete.init(document.querySelector('.autocomplete'), {data: folderList}); \n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"submissions\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $scope.resetForm = function(){ // Restablecer el formulario\n        $scope.selectedActivity = null;\n    };\n\n    $scope.pushFile = function () { // Agregar archivos de entrega\n        \n        if($scope.selectedActivity){ // Si eligio el nombre de la actividad correctamente, continuar\n            \n            var observs = document.getElementById(\"obsTextarea\").value; // Observaciones\n            if(!observs) observs = \"\"; // Evitar que la variable sea undefined o null\n\n            var submission_data = { // Objeto a subir a db\n                activityId: $scope.selectedActivity.id,\n                activityName: $scope.selectedActivity.name,\n                created: Date.now(),\n                authors: [$rootScope.user.uid].concat($rootScope.user.partners ? $rootScope.user.partners:[]), // Comision\n                status: [{ // Estados de la evaluacion (se concatenan)\n                    timestamp: Date.now(),\n                    action: 0, // 0 -> subido, 1 -> evaluando, 2 -> revisar, 3 -> evaluado\n                    display: \"Archivo subido\",\n                    user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                    obs: observs // Cada status lleva un mensaje opcional\n                }]\n            };\n\n            if($scope.selectedSim) // Si hay simulacion\n                submission_data.simulation = angular.copy($scope.selectedSim);\n\n            var files = document.getElementById(\"fileInput\").files;\n            if(files.length > 0){ // Si el input tiene archivos\n                $rootScope.loading = true;\n\n                var fr = new FileReader();\n                var k = 0; // Indice de archivos\n                var attached = [];\n                \n                fr.addEventListener(\"load\", function (e) {\n                    attached.push({data: e.target.result,name: files[k].name});\n                    k++; // Pasar al siguiente\n                    if (k == files.length) { // Fin\n                        //console.log(data);\n                        //console.log(attached);\n                        try{ // Comprimir todo lo que subio\n                            var zip = new JSZip();\n                            for(var j in attached)\n                                zip.file(attached[j].name, attached[j].data.split(',')[1], {base64:true});\n                            zip.generateAsync({type:\"blob\"})\n                            .then(function(content) {\n\n                                // Completar el resto de los datos del objeto a subir a db\n                                submission_data.filename = Cipressus.utils.generateFileName(25) + \".zip\"; // Nombre del archivo autogenerado\n                                Cipressus.storage.put(content,\"Submissions\", submission_data.filename)\n                                    .then(function (res) {\n                                        //console.log(res);\n                                        // Completar el resto de los datos del objeto a subir a db\n                                        submission_data.size = res.size;\n                                        submission_data.link = res.url;\n\n                                        // Subir datos de la entrega a db\n                                        Cipressus.db.push(submission_data,\"submissions/\"+$rootScope.user.course)\n                                        .then(function (res2) {\n                                            //console.log(res2);\n                                            $scope.submissions[res2.key] = submission_data;\n                                            $scope.submCnt++;\n                                            document.getElementById(\"fileInput\").files = null;\n                                            document.getElementById(\"fileInputText\").value = \"\";\n                                            M.toast({\n                                                html: \"Entrega realizada correctamente\",\n                                                classes: 'rounded green',\n                                                displayLength: 1500\n                                            });\n                                            // Notificar admins sobre la nueva entrega\n                                            Cipressus.db.query(\"users_private\", \"admin\", true)\n                                            .then(function(snapshot){\n                                                var notif = { // Detalles de la notificacion\n                                                    icon: \"info\",\n                                                    link: \"submissions\",\n                                                    title: \"Nueva entrega\",\n                                                    text: \"Nueva actividad presentada: \"+submission_data.activityName\n                                                };\n                                                var admins = snapshot.val();\n                                                for(var k in admins){\n                                                    if(admins[k].course == $rootScope.user.course) // Si pertenece al mismo curso\n                                                        Cipressus.utils.sendNotification(k, notif);\n                                                }\n                                            })\n                                            .catch(function (err2) {\n                                                console.log(err2);\n                                            });\n                                            $rootScope.loading = false;\n                                            files_modal.close();\n                                            $scope.$apply();\n                                        })\n                                        .catch(function (err2) {\n                                            console.log(err2);\n                                            M.toast({\n                                                html: \"Ocurrió un error al subir el archivo\",\n                                                classes: 'rounded red',\n                                                displayLength: 1500\n                                            });\n                                            $rootScope.loading = false;\n                                            $scope.$apply();\n                                        });\n                                    })\n                                    .catch(function (err) {\n                                        console.log(err);\n                                        M.toast({\n                                            html: \"Ocurrió un error al subir el archivo\",\n                                            classes: 'rounded red',\n                                            displayLength: 1500\n                                        });\n                                        $rootScope.loading = false;\n                                        $scope.$apply();\n                                    });\n\n\n                            });\n                        }catch(err){\n                            console.log(err);\n                            M.toast({\n                                html: \"Ocurrió un error al comprimir adjuntos.\",\n                                classes: 'rounded red',\n                                displayLength: 1500\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                        }\n                    }else{ // Leer siguiente\n                        fr.readAsDataURL(files[k]);\n                    }\n                });\n                fr.readAsDataURL(files[k]);\n            }else{ // Si no ingreso ningun archivo\n                console.log(\"Problema con el archivo\");\n                M.toast({\n                    html: \"Debe seleccionar un archivo!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });            \n            }\n        }else{ // Si no eligio nombre de actividad, no continuar\n            console.log(\"Identificador de actividad desconocido\");\n            M.toast({\n                html: \"Debe seleccionar una actividad!\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });            \n        }\n    };\n\n    $scope.downloaded = function(key, subm){ // Agregar registro de movimiento sobre este archivo\n        \n        var openSubmission = function(){ // Abrir adjunto o simulacion\n            window.open(subm.link);    \n            if(subm.simulation){\n                $rootScope.openSimulation = subm.simulation.data; // Pasar modelo como string al controller del simulador\n                $location.path(\"/simulator\");\n                $scope.$apply();\n            }\n        }\n        \n        if($scope.submissions[key].status[$scope.submissions[key].status.length-1].action == 0){ // Solo la primera vez\n            var newStatus = { // Nuevo estado del envio a registrar\n                timestamp: Date.now(),\n                action: 1, // 0 -> subido, 1 -> evaluando (descargado), 2 -> revisar, 3 -> evaluado\n                display: \"Archivo en revisión\",\n                user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                //obs: $scope.submissions[key].status[$scope.submissions[key].status.length-1].obs // Copiar original --> Por?\n                obs: \"\"\n            };\n            $scope.submissions[key].status.push(newStatus); // Agrego el estado al objeto local\n            var upd = JSON.parse(angular.toJson($scope.submissions[key]));\n            Cipressus.db.update(upd,\"submissions/\"+$rootScope.user.course+\"/\"+key) // Registrar accion\n            .then(function (res) {\n                M.toast({\n                    html: \"Movimiento registrado\",\n                    classes: 'rounded green',\n                    displayLength: 1000\n                });\n                openSubmission();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrio un error al registrar movimiento\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            });\n        }else{\n            M.toast({\n                html: \"El archivo ya está siendo evaluado\",\n                classes: 'rounded cyan',\n                displayLength: 1500\n            });\n            openSubmission();\n        }\n    };\n\n    $scope.viewSubm = function(key){ // Seleccionar entrega para ver detalles\n        $scope.submKeyView = key;\n        submission_modal.open();\n    };\n\n    $scope.evaluated = function(key){ // Seleccion de entrega para marcar como evaluada (para confirmar accion)\n        $scope.evaluatingKey = key;\n\n        // Obtener los aspectos evaluables de la actividad entregada para mostrar la lista de inputs\n        var evaluatingNode = Cipressus.utils.searchNode($scope.activityTree, $scope.submissions[$scope.evaluatingKey].activityId);\n        $scope.leafActivities = Cipressus.utils.getLeafNodes(evaluatingNode);\n\n        // Borrar campos\n        for(var k in $scope.leafActivities)\n            document.getElementById(\"scoreInput_\"+$scope.leafActivities[k].id).value = 0;\n\n        confirm_evaluate_modal.open();\n    };\n\n    $scope.confirmEvaluate = function(){ // Marcar entrega como evaluada\n        var action = parseInt(document.getElementById(\"evaluation_select\").value);\n        var obs = document.getElementById(\"obsTextarea2\").value; // Observaciones de quien corrige\n        \n        // Obtener lista de calificaciones propuestas para la comision\n        var scores = {};\n        if(action == 3){\n            for(var k in $scope.leafActivities){\n                var sc = document.getElementById(\"scoreInput_\"+$scope.leafActivities[k].id).value; // Nota propuesta\n                if(sc){\n                    scores[$scope.leafActivities[k].id] = parseInt(sc);\n                }\n            }\n        }\n\n        if(obs == \"\") obs = \"Sin observaciones\"; // Forzar valor de resultado\n        if(action){ // Si eligio el resultado de la evaluacion\n            if( (action==3 && Object.getOwnPropertyNames(scores).length == $scope.leafActivities.length) || action != 3){ // Debe indicar una calificacion por subactividad\n                if($scope.submissions[$scope.evaluatingKey].status[$scope.submissions[$scope.evaluatingKey].status.length-1].action == 1){ // Solo la primera vez\n                    \n                    $rootScope.loading = true;\n                    var newStatus = { // Nuevo estado del envio a registrar\n                        timestamp: Date.now(),\n                        action: action, // 2 -> revisar, 3 -> aprobado\n                        display: action == 2 ? \"Revisar\" : action == 3 ? \"Aprobado\" : \"?\",\n                        user: $rootScope.user.uid, // Usuario que realizo la ultima accion\n                        obs: obs // Mensaje del evaluador\n                    };\n\n                    // Actualizar el estado en database\n                    var upd_status = JSON.parse(angular.toJson($scope.submissions[$scope.evaluatingKey].status));\n                    upd_status.push(newStatus); // Cargarle el nuevo estado\n\n                    var job = []; // Operaciones de update\n                    \n                    // Registrar accion en lista de entregas (submissions)\n                    job.push(Cipressus.db.update(upd_status,\"submissions/\"+$rootScope.user.course+\"/\"+$scope.evaluatingKey+\"/status\"));\n                    \n                    for(var k in $scope.submissions[$scope.evaluatingKey].authors){ // Pasarle la nota a cada autor                        \n                        // Solo si la presentacion esta aprobada\n                        if(action == 3){\n                            for(var j in scores){ // Para cada actividad evaluada\n                                var sc = { // Objeto de calificacion\n                                    evaluator: $rootScope.user.uid,\n                                    score: scores[j],\n                                    timestamp: Date.now()\n                                };\n                                job.push(Cipressus.db.update(sc, \"users_private/\"+$scope.submissions[$scope.evaluatingKey].authors[k]+\"/scores/\"+j));\n                            }\n\n                            // Fecha de envio para calcular costo en caso de actividad vencida    \n                            var sb = { \n                                evaluator: $rootScope.user.uid,\n                                submitted: $scope.submissions[$scope.evaluatingKey].created,\n                                timestamp: Date.now()\n                            };\n                            job.push(Cipressus.db.update(sb, \"users_private/\"+$scope.submissions[$scope.evaluatingKey].authors[k]+\"/submits/\"+$scope.submissions[$scope.evaluatingKey].activityId));\n                        }\n                        // Notificar autores\n                        var notif = { \n                            icon: \"info\",\n                            link: \"submissions\",\n                            title: \"Presentación evaluada\",\n                            text: \"La actividad \"+$scope.submissions[$scope.evaluatingKey].activityName+\" que presentaste ya fue calificada.\"\n                        };\n                        Cipressus.utils.sendNotification($scope.submissions[$scope.evaluatingKey].authors[k], notif);\n                    }\n                    \n                    Promise.all(job)               \n                    .then(function (res) {\n                        $scope.submissions[$scope.evaluatingKey].status.push(newStatus); // Agrego el estado al objeto local\n                        M.toast({\n                            html: \"Movimiento registrado\",\n                            classes: 'rounded green',\n                            displayLength: 1000\n                        });\n                        $rootScope.loading = false;\n                        confirm_evaluate_modal.close();\n                        document.getElementById(\"evaluation_select\").value = \"\";\n                        document.getElementById(\"obsTextarea2\").value = \"\";\n                        $scope.$apply();                        \n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrio un error al registrar movimiento\",\n                            classes: 'rounded red',\n                            displayLength: 1500\n                        });\n                    });\n\n                }else{\n                    console.log($scope.submissions[key].status);\n                    M.toast({\n                        html: \"El archivo ya fue evaluado!\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                }\n            }else{\n                console.log(\"Evaluadas: \"+Object.getOwnPropertyNames(scores).length, \"Totales: \"+$scope.leafActivities.length);\n                M.toast({\n                    html: \"Complete las calificaciones!\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n            }\n        }else{\n            console.log(\"Input select con opcion por defecto.\");\n            M.toast({\n                html: \"Seleccione resultado de evaluación\",\n                classes: 'rounded red',\n                displayLength: 1500\n            });\n        }\n\n        \n    };\n\n    $scope.deleteFile = function(key){ // Marcar el archivo a borrar para que el usuario confirme        \n        $scope.fileKeyToDelete = key;\n    };\n\n    $scope.confirmDelete = function () { // Borrar el archivo seleccionado luego de que el usuario confirme\n\n        var deleteDBRef = function(){ // Elimina la referencia a la entrega de la db\n            Cipressus.db.set(null, \"submissions/\"+$rootScope.user.course+\"/\"+$scope.fileKeyToDelete) \n                .then(function (res2) {\n                    // Eliminar entrada de la tabla y decrementar contador de elementos\n                    delete $scope.submissions[$scope.fileKeyToDelete];\n                    $scope.fileKeyToDelete = \"\";\n                    $rootScope.loading = false;\n                    $scope.submCnt--;\n                    confirm_delete_modal.close();\n                    $scope.$apply();\n                })\n                .catch(function (err2) {\n                    console.log(err2);\n                    M.toast({\n                        html: \"Ocurrio un error al eliminar archivos\",\n                        classes: 'rounded red',\n                        displayLength: 1500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        $rootScope.loading = true;\n        Cipressus.storage.delete($scope.submissions[$scope.fileKeyToDelete].filename, \"Submissions\")\n            .then(function (res) {\n                // Borrar la referencia de la db\n                deleteDBRef();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al eliminar archivos. Intente más tarde\",\n                    classes: 'rounded red',\n                    displayLength: 1500\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n\n\n    ///// Inicialización controller\n    var files_modal = M.Modal.init(document.getElementById(\"files_modal\"), {preventScrolling: false}); // Dialogo para subir imagenes a la galeria    \n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var confirm_evaluate_modal = M.Modal.init(document.getElementById(\"confirm_evaluate_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    var submission_modal = M.Modal.init(document.getElementById(\"submission_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {preventScrolling: false}); // Dialogo para confirmar borrado\n\n    $scope.fileKeyToDelete = \"\"; // Identificador del archivo seleccionado para elliminar previo confirmacion\n    $scope.selectedActivity = null; // Actividad seleccionada en el input del formulario antes de elegir archivo\n\n    $rootScope.loading = true; // Preloader hasta que se descarguen los enlaces\n    $rootScope.sidenav.close();\n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"submissions\").catch(function(err){console.log(err)});\n\n    Cipressus.db.get('submissions/'+$rootScope.user.course) // Descargar lista de archivos entregados por todos los alumnos\n        .then(function (submissions_data) { // Nota: No hay filtrado de archivos descargados -> usuarios pueden leer entregas de otros alumnos\n            $scope.submissions = {};\n            $scope.submCnt = 0; // Contador de entregas\n            if($rootScope.user.admin && submissions_data){ // Si es admin, bajar todas las entregas\n                $scope.submissions = submissions_data; // Lista de entregas realizadas\n                $scope.submCnt = Object.getOwnPropertyNames($scope.submissions).length\n            }else // Si no es admin, descargar las realizadas por este usuario o por comision\n                for(var k in submissions_data){ // Buscar entregas realizadas \n                    if(submissions_data[k].authors.indexOf($rootScope.user.uid) > -1){\n                        $scope.submissions[k] = submissions_data[k]; // Agregar entrega a la lista\n                        $scope.submCnt++;\n                    }\n                }\n            Cipressus.db.get('users_public') // Descargar lista de usuarios para tener info de las comisiones\n            .then(function (users_data) {\n                $scope.users = users_data; // Lista de usuarios\n                Cipressus.db.get('activities/'+$rootScope.user.course) // Descargar datos de la materia para tener info de vencimientos\n                .then(function (activities_data) {\n                    $scope.activityTree = activities_data; // Guardo el arbol completo \n                    $scope.activities = Cipressus.utils.getArray(activities_data); // Lista de actividades\n                    //console.log($scope.activities);        \n                    $rootScope.loading = false;\n                    $scope.$apply();\n                    M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                    document.getElementById(\"activity_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                        var sel = document.getElementById(\"activity_select\"); // Se puede usar this?\n                        var actIdx = $scope.activities.findIndex(function(x){ return x.id == sel.options[sel.selectedIndex].value}); // Buscar la actividad seleccionada\n                        \n                        $scope.selectedActivity = null;\n\n                        // Buscar si la actividad que intenta subir ya fue entregada\n                        for(var k in $scope.submissions){\n                            if($scope.submissions[k].activityId == sel.options[sel.selectedIndex].value && $scope.submissions[k].authors.includes($rootScope.user.uid) ){ // Misma actividad\n                                M.toast({\n                                    html: \"Ya realizó la entrega de esta actividad. Elimine la anterior.\",\n                                    classes: 'rounded red',\n                                    displayLength: 2000\n                                });\n                                $scope.$apply();\n                                return;\n                            }\n                        }\n\n                        $scope.selectedActivity = { // Objeto con info de la actividad sobre la que se entrega el trabajo\n                            id: sel.options[sel.selectedIndex].value, // Identificador de la actividad\n                            name: sel.options[sel.selectedIndex].text, // Nombre legible de la actividad\n                            deadline: $scope.activities[actIdx].dl.date, // Vencimiento\n                            type: $scope.activities[actIdx].dl.submit // Tipo de actividad (informe, simulacion, test)\n                        };\n\n                        // Descargar simulaciones guardadas\n                        $rootScope.loading = true;\n                        $scope.$apply();\n                        $scope.simulations = []; // Lista de simulaciones\n                        Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n                        .then(function(snapshot){\n                            snapshot.forEach(function(sim){\n                                var simObj = sim.val();\n                                simObj.id = sim.key; // Id en el arbol de simulaciones\n                                simObj.index = $scope.simulations.length; // Para ubicarlo en el objeto\n                                $scope.simulations.push(simObj);\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                            M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n                            document.getElementById(\"simulation_select\").addEventListener(\"change\",function(){ // Callback al elegir actividad para entregar informe\n                                var sim_sel = document.getElementById(\"simulation_select\");\n                                var simIdx = $scope.simulations.findIndex(function(x){ return x.id == sim_sel.options[sim_sel.selectedIndex].value}); // Buscar la simulacion seleccionada\n                                if(simIdx >= 0) // Si se encuentra el indice\n                                    $scope.selectedSim = $scope.simulations[simIdx];\n                                else\n                                    $scope.selectedSim = null;\n                            });\n                        })\n                        .catch(function(err){\n                            console.log(err);\n                        });\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al acceder a la base de datos\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n            });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n}]);","app.controller(\"hardware\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.sidenav.close();        \r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"hardware\").catch(function (err) {console.log(err)});\r\n    \r\n    var initTester = function(){ // Inicializar controladores de la vista\r\n        if(Cipressus.hardware.status == \"CONNECTED\"){\r\n            \r\n            $scope.tester = [ // Entrada/salida del probador\r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}, \r\n                {output: false, input: false}\r\n            ];\r\n        \r\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\r\n\r\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar la vista\r\n                $scope.$apply(); \r\n            };\r\n        }\r\n    };\r\n\r\n    var stopTester = function(){ // Al desconectar, borrar objeto para que no muestre nada\r\n        if($scope.tester)\r\n            $scope.tester = null;\r\n    };\r\n    \r\n    // Inicializar\r\n    initTester();\r\n\r\n    // Conectar callbacks\r\n    $rootScope.onWssDisconnect = function(){\r\n        stopTester();\r\n    };\r\n\r\n    $rootScope.onWssConnect = function(){\r\n        initTester();\r\n    };\r\n    \r\n}]);","app.controller(\"analizer\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();        \n    Cipressus.utils.activityCntr($rootScope.user.uid, \"analizer\").catch(function (err) {console.log(err)});\n\n    $scope.running = false; // Controlar encendido/apagado del analizador (inicialmente apagado)\n\n    var chart = Highcharts.chart('chart_container', {\n        chart: {\n            type: 'line',\n            animation: false,\n            height: \"50%\"\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: 'Analizador lógico'\n        },  \n        yAxis: {\n            title: {\n                text: 'Voltaje'\n            }\n        },        \n        tooltip: {\n            headerFormat: '<b>{series.name}</b><br/>',\n            pointFormat: '{point.y:.2f}'\n        },\n        legend: {\n            enabled: false\n        },\n        exporting: {\n            enabled: false\n        },\n        series: [{\n            name: 'Entrada 1',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 2',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 3',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 4',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 5',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 6',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 7',\n            data: [[Date.now(),0]]\n        },{\n            name: 'Entrada 8',\n            data: [[Date.now(),0]]\n        }]\n    });\n\n    var series = chart.series; // Series de datos (inicialmente todo en 0 con un solo dato)\n\n    var initAnalizer = function(){ // Inicializar controladores de la vista\n        if(Cipressus.hardware.status == \"CONNECTED\"){\n        \n            $scope.tester = [ // Entrada/salida del probador\n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}, \n                {output: false, input: false}\n            ];\n\n            Cipressus.hardware.io = $scope.tester; // Hacer binding con esta variable\n\n            Cipressus.hardware.onUpdate = function(){ // En actualizacion de io, refrescar el grafico   \n                var timestamp = Date.now(); \n                for(var k = 0; k < 8; k++)\n                    series[k].addPoint([timestamp, $scope.tester[k].input ? 5:0], false, series[k].data.length>300);\n            };\n        }\n    };\n\n    var startChartUpdater = function(){ // Esta funcion dispara el refresco continuo del grafico\n        chart.redraw(); // Redibujar\n        if($scope.running) // Si esta corriendo, disparar el timeout\n            setTimeout(startChartUpdater,100); // El periodo es de 100ms fijo\n    };\n\n    $scope.toggleStartStop = function(){// Iniciar-detener el analizador\n        $scope.running = !$scope.running;\n        if($scope.running)\n            startChartUpdater(); // Al iniciar, hay que disparar el evento por primera vez\n    };\n    \n    // Conectar callbacks\n    $rootScope.onWssDisconnect = function(){\n        if($scope.tester) $scope.tester = null;\n    };\n\n    $rootScope.onWssConnect = function(){\n        initAnalizer();\n    };\n\n    // Inicializar analizador logico\n    initAnalizer();\n    \n}]);","app.controller(\"simulator\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    $scope.updateFields = function(){ // Funcion auxiliar\n        setTimeout(function(){\n            M.updateTextFields();\n        },200);\n    };\n\n    $scope.getSimulations = function () { // Descargar lista de archivos de simulacion del usuario\n        if(!$scope.simulations){ // Si no se descargaron los archivos, bajar\n            $rootScope.loading = true;\n            Cipressus.db.query(\"simulations\", \"uid\", $rootScope.user.uid)\n            .then(function(snapshot){\n                simulations_data = {};\n                snapshot.forEach(function(sim){\n                    simulations_data[sim.key] = sim.val();\n                });\n\n                if(simulations_data){\n                    $scope.simulations = simulations_data;\n                    //console.log($scope.simulations);\n                    load_modal.open();\n                }else\n                    M.toast({html: \"No hay circuitos guardados!\",classes: 'rounded green darken-3',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al mostrar archivos\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si ya se habia descargado la info de la db, abrir directamente modal\n            load_modal.open();\n        }\n    };\n\n    $scope.loadCircuit = function(key, model){ // Cargar circuito\n        var data;\n        if(key) // Si se pasa clave, cargar desde los guardados, sino, usar data del argumento\n            data = JSON.parse($scope.simulations[key].data);\n        else\n            data = JSON.parse(model);\n\n        simcir.clearDevices(); // Borrar caches de managers\n\n        // Poner barra de herramientas\n        data.showToolbox = true;\n        data.width = document.getElementById(\"simcir\").clientWidth;\n        data.height = document.getElementById(\"simcir\").clientHeight\n        data.toolbox = [\n          {\"type\":\"In\"},\n          {\"type\":\"Out\"},\n          {\"type\":\"Joint\"},\n          {\"type\":\"DC\"},\n          {\"type\":\"LED\"},\n          {\"type\":\"PushOff\"},\n          {\"type\":\"PushOn\"},\n          {\"type\":\"Toggle\"},\n          {\"type\":\"BUF\"},\n          {\"type\":\"NOT\"},\n          {\"type\":\"AND\"},\n          {\"type\":\"NAND\"},\n          {\"type\":\"OR\"},\n          {\"type\":\"NOR\"},\n          {\"type\":\"XOR\"},\n          {\"type\":\"XNOR\"},\n          {\"type\":\"OSC\"},\n          {\"type\":\"7seg\"},\n          {\"type\":\"16seg\"},\n          {\"type\":\"4bit7seg\"},\n          {\"type\":\"RotaryEncoder\"},\n          {\"type\":\"BusIn\"},\n          {\"type\":\"BusOut\"},\n          {\"type\":\"RS-FF\"},\n          {\"type\":\"JK-FF\"},\n          {\"type\":\"T-FF\"},\n          {\"type\":\"D-FF\"},\n          {\"type\":\"8bitCounter\"},\n          {\"type\":\"HalfAdder\"},\n          {\"type\":\"FullAdder\"},\n          {\"type\":\"4bitAdder\"},\n          {\"type\":\"2to4BinaryDecoder\"},\n          {\"type\":\"3to8BinaryDecoder\"},\n          {\"type\":\"4to16BinaryDecoder\"},\n          //{\"type\":\"Virtual-In\"},\n          //{\"type\":\"Virtual-Out\"},\n          {\"type\":\"Test-In\"},\n          {\"type\":\"Test-Out\"},\n          {\"type\":\"Audio-Out\"},\n          {\"type\":\"DSO\"},\n          {\"type\":\"Transmitter\"}\n        ];\n        simcir.setupSimcir($('#simcir'), data);\n\n        if(key){\n            currentSim = {\n                key: key,\n                name: $scope.simulations[key].name\n            };\n            $scope.circuitFileName = $scope.simulations[key].name;\n            load_modal.close();\n        }\n    };\n\n    $scope.saveCircuit = function () {\n        $rootScope.loading = true;\n\n        // Verificar si el nombre existe para saber si hay que actualizar o crear nuevo\n        currentSim = {};\n        if($scope.simulations)\n            for(var k in $scope.simulations)\n                if($scope.simulations[k].name == $scope.circuitFileName) // Coincidencia\n                    currentSim = { // Guardar datos de actualizacion\n                        key: k,\n                        name: $scope.simulations[k].name\n                    };\n\n        // Crear objeto a guardar en db\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data(); // Objeto con datos de simulacion\n        //var data = JSON.stringify((({ devices, connectors }) => ({ devices, connectors }))(model)); // Solo guardar dos propiedades\n        // Metodo alternativo para sintaxis de bundle-assets 3\n        var data = JSON.stringify((function(model){return {devices:model.devices, connectors:model.connectors};})(model));\n\n        if(model.devices.length == 0){ // No guardar si no hay componentes\n            M.toast({html: \"No hay componentes!\",classes: 'rounded red',displayLength: 2000});\n            $rootScope.loading = false;\n        }else{ // Si hay al menos un componente, guardar en db\n            var sim = {\n                timestamp: Date.now(),\n                size: model.devices.length,\n                data: data, \n                name: $scope.circuitFileName\n            };\n    \n            if(currentSim.key){ // Si se esta trabajando sobre un modelo existente\n                Cipressus.db.update(sim,\"simulations/\"+currentSim.key)\n                .then(function(res){\n                    //console.log(res);   \n                    $scope.simulations[currentSim.key] = sim; // Actualizar local\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Si se creo un nuevo modelo\n                sim.uid = $rootScope.user.uid;\n                Cipressus.db.push(sim,\"simulations\")\n                .then(function(res){\n                    //console.log(res);    \n                    currentSim = {\n                        key: res.key,\n                        name: sim.name\n                    };\n                    if(!$scope.simulations)\n                        $scope.simulations = {};\n                    $scope.simulations[res.key] = sim; // Agregar nueva\n                    save_modal.close();\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al guardar\",classes: 'rounded red',displayLength: 2000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }\n        }\n    };\n\n\n    $scope.analizeCircuit = function(){ // Analisis combinacional del circuito\n        // Las funciones declaradas mas abajo se ejecutan desde el final hacia arriba\n\n        // Obtener nombres de las entradas y salidas\n        var inputs = simcir.getExternalLabels(\"input\");\n        var outputs = simcir.getExternalLabels(\"output\");\n\n        // Si no hay, retornar\n        if(inputs.length == 0){\n            M.toast({html: \"El circuito no tiene entradas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n        if(outputs.length == 0){\n            M.toast({html: \"El circuito no tiene salidas de testeo!\",classes: 'rounded red',displayLength: 2000});\n            return;\n        }\n\n        // Iniciar\n        $rootScope.loading = true;\n\n        // Cantidad de entradas y salidas (para calcular cantidad de dispositivos) \n        // (Antes de eliminar nodos repetidos)\n        var ioDevices = inputs.length + outputs.length;\n\n        // Eliminar nombres repetidos (externalPortManager sigue teniendo duplicados si se carga varias veces)\n        inputs = inputs.filter(function(value, index, self){ return self.indexOf(value) === index}); \n        //outputs = outputs.filter((value, index, self) => self.indexOf(value) === index); \n\n        var model = simcir.controller($('#simcir').find('.simcir-workspace')).data();\n\n        // Objeto para mostrar resultados en modal\n        $scope.circuitDetails = {\n            model: model,\n            deviceCnt: model.devices.length - ioDevices, // Cantidad de componentes sin contar entradas y salidas\n            connectorCnt: model.connectors.length,\n            truthTable: { // Objeto para genrar la tabla de verdad en la vista\n                header:{ // Nombres de las variables de entrada y salida\n                    inputs:inputs,\n                    outputs:outputs\n                },\n                rows:[] // Combinaciones de entrada\n            },\n            expressions: [], // Funciones de salida minimizadas\n            canonMinTerm: [], // Funciones de salida canonicas suma de productos\n            canonMaxTerm: [] // Funciones de salida canonicas producto de sumas\n        };\n\n        var combMax = Math.pow(2,inputs.length); // Cantidad de combinaciones\n        var minterms = []; // Miniterminos de cada salida\n        var maxterms = []; // Maxiterminos de cada salida\n        var primeImplicants = [];\n        var minifiedExpresions = [];\n        var canonMinExpressions = [];\n        var canonMaxExpressions = [];\n\n\n        var getCanonicalExpressions = function(){ // Obtener las expresiones canonicas a partir de miniterminos y maxiterminos\n            \n            for(var k in outputs){ // Para cada funcion de salida                \n                if(!minterms[k]){ // Si no hay minterms, la funcion es siempre nula                    \n                    canonMinExpressions[k] = \"0\";\n                    canonMaxExpressions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(!maxterms[k]){ // Si no hay maxterms, la salida es siempre 1\n                    canonMinExpressions[k] = \"1\";\n                    canonMaxExpressions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n            \n                /////// Minterms\n                for(var j in minterms[k]){ // Para cada minitermino\n                    for(var t in minterms[k][j]){ // Para cada variable dentro del termino\n                        switch(minterms[k][j][t]){\n                            case \"1\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t];\n                                else\n                                    canonMinExpressions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(canonMinExpressions[k])\n                                    canonMinExpressions[k] += inputs[t]+\"'\";\n                                else\n                                    canonMinExpressions[k] = inputs[t]+\"'\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMinExpressions[k] += \" + \";\n                }\n                canonMinExpressions[k] = canonMinExpressions[k].substring(0,canonMinExpressions[k].length-3);// Remover el ultimo \"+\"\n            \n                /////// Maxterms\n                for(var j in maxterms[k]){ // Para cada minitermino\n                    if(canonMaxExpressions[k])\n                        canonMaxExpressions[k] += \"(\";\n                    else\n                        canonMaxExpressions[k] = \"(\";\n                    for(var t in maxterms[k][j]){ // Para cada variable dentro del termino\n                        switch(maxterms[k][j][t]){\n                            case \"0\":\n                                canonMaxExpressions[k] += inputs[t]+\"+\";                                \n                                break;\n                            case \"1\":\n                                canonMaxExpressions[k] += inputs[t]+\"'+\";\n                                break;                            \n                            default:\n                                break;\n                        }\n                    }\n                    canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-1);// Remover el ultimo \"+\"    \n                    canonMaxExpressions[k] += \") · \";\n                }\n                canonMaxExpressions[k] = canonMaxExpressions[k].substring(0,canonMaxExpressions[k].length-3);// Remover el ultimo \"·\"\n            }\n            \n\n            // Generar expresiones para mostrar en vista de analisis\n            for(var k in canonMinExpressions) \n                $scope.circuitDetails.canonMinTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMinExpressions[k];\n            for(var k in canonMaxExpressions) \n                $scope.circuitDetails.canonMaxTerm[k] = \"<b>\" + outputs[k] + \"</b>= \" + canonMaxExpressions[k];\n            \n            // Para terminar, ocultar el preloader y mostrar el modal con resultados\n            $rootScope.loading = false;\n            results_modal.open();\n            $scope.$apply();\n        };\n\n        var getBooleanExpressions = function(){ // A partir de miniterminos y maxiterminos, devuelve las expresiones logicas\n\n            for(var k in outputs){\n                //if(minterms[k].length == 0){ // Si no hay miniterminos, la funcion es siempre nula\n                if(!minterms[k]){              // Si no hay miniterminos, la funcion es siempre nula                    \n                    minifiedExpresions[k] = \"0\";\n                    continue; // Pasar a la siguiente salida\n                }\n\n                if(minterms[k].length == combMax){ // Si hay tantos miniterminos como combinaciones, la salida es siempre 1\n                    minifiedExpresions[k] = \"1\";\n                    continue; // Pasar a la siguiente salida\n                }\n                \n                // Si ninguno de los casos anteriores se dio, obtener implicantes primos con el metodo QMC\n                primeImplicants[k] = Cipressus.utils.getPrimeImplicants(minterms[k]);\n                for(var j in primeImplicants[k]){ // Para cada implicante                  \n                    for(var t in primeImplicants[k][j]){ // Para cada variable del implicante\n                        switch(primeImplicants[k][j][t]){\n                            case \"1\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t];\n                                else\n                                    minifiedExpresions[k] = inputs[t];\n                                break;\n                            case \"0\":\n                                if(minifiedExpresions[k])\n                                    minifiedExpresions[k] += inputs[t]+\"'\";\n                                else\n                                    minifiedExpresions[k] = inputs[t]+\"'\";\n                                break;\n                            case \"-\":\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    minifiedExpresions[k] += \" + \";\n                }\n                minifiedExpresions[k] = minifiedExpresions[k].substring(0,minifiedExpresions[k].length-3);// Remover el ultimo \"+\"\n            }\n            //console.log($scope.circuitDetails);\n            for(var k in minifiedExpresions) // Generar expresiones para mostrar en vista de analisis\n                $scope.circuitDetails.expressions[k] = \"<b>\" + outputs[k] + \"</b>= \" + minifiedExpresions[k];\n            \n            getCanonicalExpressions();\n        };\n  \n        var evalInput = function(k){ // Evaluar entrada k-esima (en binario) (esta es una funcion recursiva)\n            var inputBin = k.toString(2).padStart(inputs.length,\"0\"); // Convertir numero de combinacion a binario\n            $scope.circuitDetails.truthTable.rows[k] = { \n                inputs: inputBin.split(\"\"), // Separar bits en arreglo\n                outputs: [] // Completar salidas despues\n            }\n            for(var j in $scope.circuitDetails.truthTable.rows[k].inputs) // Escribir entrada en el circuito del simulador\n                simcir.setInputStatus(inputs[j], $scope.circuitDetails.truthTable.rows[k].inputs[j] == \"1\");\n\n            // Esperar un poco antes de leer la salida\n            setTimeout(function(){\n                // Leer cada una de las salidas de la simulacion\n                for(var n in outputs){\n                    $scope.circuitDetails.truthTable.rows[k].outputs[n] = simcir.getOutputStatus(outputs[n]) == 1 ? \"1\":\"0\";\n                    if($scope.circuitDetails.truthTable.rows[k].outputs[n] == \"1\"){ // Si la salida es H (alto), agregar minitermino\n                        if(minterms[n])\n                            minterms[n].push(inputBin);\n                        else\n                            minterms[n] = [inputBin];\n                    }else{\n                        if(maxterms[n])\n                            maxterms[n].push(inputBin);\n                        else\n                            maxterms[n] = [inputBin];\n                    }\n                }\n                k++; // Siguiente combinacion\n                if(k < combMax) // Si quedan, pasar a la siguiente\n                    evalInput(k);\n                else // Sino, pasar a calcular las funciones\n                    getBooleanExpressions();\n            },50);    \n        };\n        evalInput(0); // Empezar por la primera\n    };\n\n    $scope.selectToDelete = function(key){ // Seleccionar circuito para eliminar\n        $scope.selected = $scope.simulations[key];\n        $scope.selected.key = key;\n        load_modal.close(); // Cerrar el modal de abrir circuito\n        setTimeout(function(){delete_modal.open()},500); // Abrir el modal de confirmacion\n    };\n\n    $scope.deleteCircuit = function(){ // Eliminar circuito\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"simulations/\"+$scope.selected.key)\n        .then(function(){\n            delete $scope.simulations[$scope.selected.key];\n            $scope.selected = null;\n            delete_modal.close();\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n    };\n\n\n    ///// Inicializacion del controller\n    $scope.circuitFileName = \"\";\n    var currentSim = {}; // Datos de la simulacion actual (se crean al abrir o guardar nuevo)\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n    var load_modal = M.Modal.init(document.getElementById(\"load_modal\"), {preventScrolling: false});\n    var save_modal = M.Modal.init(document.getElementById(\"save_modal\"), {preventScrolling: false});\n    var delete_modal = M.Modal.init(document.getElementById(\"delete_modal\"), {preventScrolling: false});\n    var results_modal = M.Modal.init(document.getElementById(\"results_modal\"), {preventScrolling: false});\n\n    // Inicializar simulador\n    // Para abrir simulaciones externas, se pasan por rootScope\n    if($rootScope.openSimulation){\n        var data = $rootScope.openSimulation;\n        $rootScope.openSimulation = null; // Eliminar para que no lo siga abriendo\n        $scope.loadCircuit(null,data);\n    }else{\n        simcir.setupSimcir($('#simcir'), {\n            width: document.getElementById(\"simcir\").clientWidth,\n            height: document.getElementById(\"simcir\").clientHeight\n        });\n    }\n\n    window.onresize = function(ev){ // Simulador responsive\n        // Dimensiones del card (que es responsive)\n        var container = document.getElementById('simcir');\n        if(container){ // Al salir del simulador, se borra el contenedor\n            var w = container.clientWidth;\n            var h = container.clientHeight;\n            //console.log(h,w);\n            var el = document.getElementsByClassName(\"simcir-workspace\")[0]; // Div contenedor (generado por simcir)\n            el.setAttribute(\"viewBox\", \"0 0 \"+w+\" \"+h); // Dimensiones del svg\n            el.setAttribute(\"width\", w); // Escala\n            el.setAttribute(\"height\", h); \n        }\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"simulator\").catch(function (err) {console.log(err)});\n}]);","app.controller(\"kMaps\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    qmc = new QuineMcCluskey(\"\", 2, 4, 0);\n    qmc.init();\n    karnaugh = new KarnaughMap(\"myKarnaughMap\", qmc);\n    karnaugh.init();\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n        karnaugh.setNoOfVars($scope.varsNum);\n    };\n\n    $scope.dCareChange = function() {\n        karnaugh.allowDontCares($scope.showDCares);\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"kMaps\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"tables\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    M.Modal.init(document.getElementById(\"tutorial_modal\"), {});\n\n    $scope.varsNum = 4;\n    $scope.showDCares = false;\n\n    setTimeout(function(){\n        M.updateTextFields();\n    },200);\n\n    $scope.varNumChange = function() {\n\n    };\n\n    $scope.dCareChange = function() {\n\n    };\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"tables\").catch(function (err) {\n        console.log(err)\n    });\n}]);","app.controller(\"videos\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n\n    $scope.selectVideo = function (key) { // Seleccion de video para actualizar, borrar o crear nuevo\n        if(key){ // Seleccionar video para actualizar/borrar\n            $scope.selectedVideoKey = key;\n            $scope.selectedVideo = { // Otro objeto para que no quede referenciado al original en caso de cancelar\n                title: $scope.videos[key].title,\n                source: $scope.videos[key].source,\n                link: $scope.videos[key].source == 'youtube' ? \n                    \"https://www.youtube.com/watch?v=\"+$scope.videos[key].link : \n                    \"https://drive.google.com/file/d/\"+$scope.videos[key].link+\"/view?usp=sharing\",\n                uploaded: $scope.videos[key].uploaded\n            };\n            setTimeout(function(){\n                M.updateTextFields();\n            },250);\n        }else{ // Nuevo video\n            $scope.selectedVideoKey = null;\n            $scope.selectedVideo = {\n                title: \"\",\n                source: \"\",\n                link: \"\",\n                uploaded: 0\n            };\n        }\n    };\n\n    $scope.saveVideo = function () { // Al confirmar, guardar el nuevo nombre de la foto\n        if($scope.selectedVideo.title != \"\"){ // Chequear campos\n            $rootScope.loading = true;\n            $scope.selectedVideo.source = document.getElementById(\"video_source\").value; // Tipo de origen del link de video (youtube o drive)\n            if($scope.selectedVideo.source == \"youtube\"){\n                if($scope.selectedVideo.link.includes(\"?v=\")){ // Verificar si el string tiene el identificador\n                    $scope.selectedVideo.link = $scope.selectedVideo.link.split(\"?v=\")[1]; // Extraer el identificador yt\n                }else{\n                    M.toast({html: \"Ingrese un enlace válido!\",classes: 'rounded red',displayLength: 1500});\n                    $rootScope.loading = false;   \n                    return;\n                }\n            }else{\n                //$scope.selectedVideo.link = $scope.selectedVideo.link.split(\"?id=\")[1]; // Extraer el identificador drive \n                if($scope.selectedVideo.link.includes(\"/d/\")){ // Verificar si el string tiene el identificador\n                    $scope.selectedVideo.link = ($scope.selectedVideo.link.split(\"/d/\")[1]); // Extraer el identificador drive\n                    $scope.selectedVideo.link = $scope.selectedVideo.link.substring(0,$scope.selectedVideo.link.indexOf(\"/\"));\n                    //console.log($scope.selectedVideo.link);\n                }else{\n                    M.toast({html: \"Ingrese un enlace válido!\",classes: 'rounded red',displayLength: 1500});\n                    $rootScope.loading = false;   \n                    return;\n                }\n            }\n            if($scope.selectedVideoKey){ // Actualizar existente\n                Cipressus.db.update($scope.selectedVideo,\"videos/\"+$rootScope.user.course+\"/\"+$scope.selectedVideoKey)\n                .then(function(res){            \n                    $scope.videos[$scope.selectedVideoKey]= { // Actualizar el local\n                        title: $scope.selectedVideo.title,\n                        link: $scope.selectedVideo.link,\n                        source: $scope.selectedVideo.source,\n                        uploaded: $scope.selectedVideo.uploaded\n                    }; \n                    delete $scope.selectedVideo;\n                    delete $scope.selectedVideoKey;\n                    M.toast({html: \"Datos actualizados!\",classes: 'rounded green darken-3',displayLength: 1500});\n                    video_edit_modal.close();\n                    $rootScope.loading = false;                \n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al actualizar cambios.\",classes: 'rounded red',displayLength: 1500});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }else{ // Crear nuevo\n                $scope.selectedVideo.uploaded = Date.now();\n                //console.log($scope.selectedVideo);\n                Cipressus.db.push($scope.selectedVideo,\"videos/\"+$rootScope.user.course)\n                .then(function(res1){       \n                    if(!$scope.videos){\n                        $scope.videos = {};\n                    }\n                    $scope.videos[res1.key]= { // Actualizar el local\n                        title: $scope.selectedVideo.title,\n                        link: $scope.selectedVideo.link,\n                        source: $scope.selectedVideo.source,\n                        uploaded: $scope.selectedVideo.uploaded\n                    }; \n                    delete $scope.selectedVideo;\n                    delete $scope.selectedVideoKey;\n                    M.toast({html: \"Nuevo video creado!\",classes: 'rounded green darken-3',displayLength: 1500});\n                    video_edit_modal.close();\n                    $rootScope.loading = false;                \n                    $scope.$apply(); \n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({html: \"Ocurrio un error al actualizar cambios.\",classes: 'rounded red',displayLength: 1500});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n            }\n        }else{\n            M.toast({html: \"Debe indicar un nombre\",classes: 'rounded red',displayLength: 1500});\n            return;            \n        }\n    };\n\n    $scope.confirmDelete = function(){ // Borrar el archivo seleccionado luego de que el usuario confirme\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"videos/\"+$rootScope.user.course+\"/\"+$scope.selectedVideoKey)\n        .then(function(res){\n            // Eliminar los elementos de la vista\n            delete $scope.videos[$scope.selectedVideoKey];\n            delete $scope.selectedVideo;\n            delete $scope.selectedVideoKey;\n            M.toast({html: \"Video eliminado!\",classes: 'rounded green darken-3',displayLength: 1500});\n            $rootScope.loading = false;\n            confirm_delete_modal.close();\n            $scope.$apply();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrio un error al eliminar el video\",classes: 'rounded red',displayLength: 1500});\n            $rootScope.loading = false;            \n            $scope.$apply();\n        });        \n    };\n\n    // Componentes de materialize\n    var video_edit_modal = M.Modal.init(document.getElementById(\"video_edit_modal\"), {});\n    var confirm_delete_modal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {});\n    M.FormSelect.init(document.querySelectorAll('select'), {}); // Select para origen de links video\n    \n    Cipressus.utils.activityCntr($rootScope.user.uid, \"videos\").catch(function (err) {\n        console.log(err);\n    });\n\n    $rootScope.loading = true;\n    Cipressus.db.get(\"videos/\"+$rootScope.user.course)\n    .then(function(snapshot){\n        $scope.videos = snapshot;\n        //console.log($scope.videos);\n        $rootScope.loading = false;            \n        $scope.$apply();\n    })\n    .catch(function(err){\n        console.log(err);\n        $rootScope.loading = false;            \n        $scope.$apply();\n    })\n}]);","app.controller(\"users\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n    $scope.selectedKey = null;\n    $scope.selectedIndex = null;\n    $scope.showAll = true;\n    var attendableEvents=0; // Contador de eventos para calcular asistencia\n\n    $scope.orderTag = 'name';\n    $scope.reverseOrder = false;\n\n    $scope.changeOrder = function(tag) { // Acmbiar el sentido de ordenamiento de la tabla\n        if($scope.orderTag === tag) {\n            $scope.reverseOrder = !$scope.reverseOrder;\n        } else {\n            $scope.orderTag = tag;\n            $scope.reverseOrder = false;\n        }\n    };\n\n    // Los inputs date no funcionan con ng-change entonces la actualizacion\n    // la hago programaticamente. Este es el callback de cambios\n    var onInputDateChange = function () {\n        $scope.auxiliarySubmits[this.id] = {\n            submitted: moment(this.value).unix() * 1000,\n            timestamp: Date.now(),\n            evaluator: $rootScope.user.uid\n        };\n        $scope.$apply();\n    };\n\n    $scope.viewUser = function (key) { // Selecciona un usuario de la lista para ver detalles\n        // Tambien se abre el modal con detalles desde la vista\n        $scope.selectedKey = key; // Recordar limpiar esta variable despues de usar\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        evalAttendance();\n        updatePolarPlot();\n    };\n\n    $scope.selectUser = function(key) { // Seleccionar usuario para aprobar inscripcion a un curso\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n        confirmEnrollModal.open();\n    };\n\n    var evalAttendance = function(){ // Calcular asistencia del alumno seleccionado\n        if($scope.users[$scope.selectedIndex].scores){\n            if($scope.users[$scope.selectedIndex].attendance){ // Calcular asistencia aquí (solo se usa para mostrar pero no se guarda en db)\n                var userAttendedEvents = Object.getOwnPropertyNames($scope.users[$scope.selectedIndex].attendance).length; // Cantidad de clases asistidas por el usuario\n                var att = attendableEvents > 0 ? userAttendedEvents/attendableEvents*100 : 0;\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: parseInt(att.toFixed(2)), // Calcular porcentaje de asistencia\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };                                \n            }else{ // Si no asistió a nada, entonces la asistencia queda en 0\n                $scope.users[$scope.selectedIndex].scores.asistencia = {\n                    score: 0,\n                    evaluator: \"Cipressus\", // Evaluado por el sistema, no manualmente\n                    timestamp: Date.now()\n                };\n            }   \n        }\n    };\n\n    var updatePolarPlot = function(){ // Actualizar grafico de notas del alumno seleccionado\n        var data = []; // Datos para mostrar en el grafico polar\n        // Buscar nodo de la actividad seleccionada\n        $scope.currentNode = Cipressus.utils.searchNode($scope.activitiesTree,\"final\");\n        var sc = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode);\n        var value = sc.score/$scope.currentNode.score*100;        \n        $scope.currentActivityScores = { // Para detallar textualmente\n            name: $scope.currentNode.name,\n            points: ($scope.currentNode.score*value/100).toFixed(2), \n            score: value.toFixed(2),\n            children:[] // Asjuntar los nodos hijos\n        };\n        for(k in $scope.currentNode.children){ // Para cada sub actividad\n            // Calcular nota de las sub actividades\n            var subsc = Cipressus.utils.eval($scope.users[$scope.selectedIndex],$scope.currentNode.children[k]);\n            var subValue = subsc.score/$scope.currentNode.children[k].score*100;\n            // Poner las notas en un arreglo para mostrar en detalles (leyenda) del grafico\n            $scope.currentActivityScores.children.push({\n                name: $scope.currentNode.children[k].name, // Nombre de la actividad\n                points: ($scope.currentNode.children[k].score*subValue/100).toFixed(2), // Puntos obtenidos por la actividad\n                score: subValue.toFixed(2) // Nota en porcentaje\n            });\n            data.push({ // Agregar nota de esa actividad a los datos para el chart\n                y: $scope.currentNode.children[k].score,\n                z: parseInt(subValue.toFixed(2)),\n                name: $scope.currentNode.children[k].name\n            })\n        }\n        Highcharts.chart('variable_pie_container', {\n            chart: {type: 'variablepie',height: '100%'},\n            title: {text: 'Calificaciones'},\n            tooltip: {\n                headerFormat: '',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.name}</b><br/>' +\n                    'Nota actividad: <b>{point.z}%</b><br/>'\n            },\n            series: [{minPointSize: 10,innerSize: '20%',zMin: 0,name: 'Notas',data: data}]\n        });\n    };\n\n    $scope.enrollUser = function () { // Aprobar usuario como alumno\n        var user_private = { // Objeto a subir\n            admin: false,\n            course: $rootScope.user.course, // El ID del curso del admin que esta dando de alta\n            enrolled: Date.now()\n            // scores y submits se completan a medida que apruebe actividades\n        };\n        if($scope.selectedKey){ // Habria que agregar un mejor control de la key que se esta escribiendo\n            $rootScope.loading = true;\n            Cipressus.db.update(user_private, \"users_private/\" + $scope.selectedKey)\n                .then(function (snapshot) {\n                    // Copiar atributos para actualizar vista\n                    $scope.users[$scope.selectedIndex].admin = false;\n                    $scope.users[$scope.selectedIndex].enrolled = user_private.enrolled;\n                    M.toast({\n                        html: \"Listo!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2000\n                    });\n                    confirmEnrollModal.close();\n                    \n                    // Notificar al usuario sobre su aceptacion al curso\n                    var notif = { \n                        icon: \"info\",\n                        link: \"home\",\n                        title: \"Inscripción aceptada\",\n                        text: \"Has sido incorporado al curso: \"+$scope.activitiesTree.course.name\n                    };\n                    Cipressus.utils.sendNotification($scope.selectedKey, notif);\n\n                    $scope.selectedKey = null; // Deseleccionar user\n                    $scope.selectedIndex = null;\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n        }\n    };\n\n    $scope.evalUser = function (key) { // Preparar para ingresar calificaciones al usuario seleccionado\n        $scope.selectedKey = key;\n        $scope.selectedIndex = $scope.getUserIndex[key];\n\n        evalAttendance(); // Calcular asistencia automáticamente\n\n        // Generar arreglos auxiliares para no sobreescribir el original\n        $scope.auxiliaryScores = {};\n        for (var k in $scope.users[$scope.selectedIndex].scores) // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliaryScores[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].scores[k].evaluator,\n                score: $scope.users[$scope.selectedIndex].scores[k].score,\n                timestamp: $scope.users[$scope.selectedIndex].scores[k].timestamp\n            };\n        $scope.auxiliarySubmits = {};\n        for (var k in $scope.users[$scope.selectedIndex].submits) { // Debo copiar notas una a una para no referenciar objetos\n            $scope.auxiliarySubmits[k] = {\n                evaluator: $scope.users[$scope.selectedIndex].submits[k].evaluator,\n                submitted: $scope.users[$scope.selectedIndex].submits[k].submitted,\n                timestamp: $scope.users[$scope.selectedIndex].submits[k].timestamp\n            };\n        }\n\n        // Inicializo los listeners de inputs date aca porque no pude usar ni ng-model ni ng-change\n        for (var k in $scope.activities)\n            if ($scope.activities[k].dl) { // Si la actividad tiene vencimiento\n                if ($scope.auxiliarySubmits[$scope.activities[k].id]) // Si la actividad fue entregada/evaluada\n                    document.getElementById($scope.activities[k].id).value = moment($scope.auxiliarySubmits[$scope.activities[k].id].submitted).format(\"YYYY-MM-DD\");\n                else // Si no borrarla\n                    document.getElementById($scope.activities[k].id).value = '';\n                document.getElementById($scope.activities[k].id).removeEventListener(\"change\", onInputDateChange); // Lo quito para no duplicar\n                document.getElementById($scope.activities[k].id).addEventListener(\"change\", onInputDateChange);\n            }\n        scoresModal.open(); // Lo hago aca porque se hace lio con los trigger de materialize\n    };\n\n    $scope.getCost = function (key) { // Calcular el costo por perdida de vencimiento de una actividad\n        if ($scope.activities[key] && $scope.auxiliarySubmits) { // Si ya existen los arreglos, usarlos\n            if ($scope.auxiliarySubmits[$scope.activities[key].id]) { // Control de coherencia\n                if ($scope.auxiliarySubmits[$scope.activities[key].id].submitted > $scope.activities[key].dl.date) { // Si paso el vencimiento\n                    // Calcular costo\n                    var cost = Cipressus.utils.defaultCostFunction($scope.auxiliarySubmits[$scope.activities[key].id].submitted, $scope.activities[key].dl.date, $scope.activities[key].dl.param);\n                    if (cost > $scope.activities[key].score) // El costo no puede superar el puntaje maximo\n                        return $scope.activities[key].score;\n                    else // Si no supera, retornar el valor\n                        return cost.toFixed(2);\n                } else // Si no paso el vencimiento, el costo es nulo\n                    return 0;\n            }\n        }\n    };\n\n    $scope.deleteSubmit = function (key) { // Esta se llama al eliminar una nota oprimiendo en el logo de usuario\n        // Para el caso de notas puedo quitar con instrucciones dentro del ng-click pero para este no\n        document.getElementById(key).removeEventListener(\"change\", onInputDateChange); // Lo quito para que no dispare al cambiar valor\n        document.getElementById(key).value = ''; // Limpiar input date\n        $scope.auxiliarySubmits[key] = null; // Borrar timestamp, evaluator y submitted\n        document.getElementById(key).addEventListener(\"change\", onInputDateChange); // Vuelvo a habilitar\n    };\n\n    $scope.exportExcel = function(){ // Guardar excel de la lista completa de usuarios del curso actual con sus calificaciones\n        \n        var ws_data = []; // Datos de la planilla\n        \n        // Encabezado\n        var header = ['UID', 'Nombre y apellido', 'Email', 'Carrera', 'LU', 'Comp com.', ' ']; \n        for(var j in $scope.activities)\n            header.push($scope.activities[j].name+\" (\"+($scope.activities[j].score||$scope.activities[j].value)+\")\");\n        ws_data.push(header);\n        \n        // Filas\n        for(var k in $scope.users){ // Para cada usuario\n            if($scope.users[k].course == $rootScope.user.course && !$scope.users[k].admin){\n                var row = [\n                    $scope.users[k].key,\n                    $scope.users[k].secondName+\", \"+$scope.users[k].name,\n                    $scope.users[k].email,\n                    $scope.users[k].degree,\n                    $scope.users[k].lu, \n                    $scope.users[k].partners ? $scope.users[k].partners.map(function(el){return $scope.users[$scope.getUserIndex[el]].secondName}) : \"\",\n                    \" \" // Espaciador\n                ];\n                // Agregar calificacion de actividades\n                for(var j in $scope.activities){\n                    var node = Cipressus.utils.searchNode($scope.activitiesTree, $scope.activities[j].id);\n                    var sc = Cipressus.utils.eval($scope.users[k], node);\n                    row.push(sc.score.toFixed(2)+\" (\"+(sc.score/($scope.activities[j].score||$scope.activities[j].value)*100).toFixed(2)+\"%)\");\n                }\n                ws_data.push(row);\n            }\n        }\n\n        var ws = XLSX.utils.aoa_to_sheet(ws_data);\n        var wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Usuarios\");\n        var wopts = { bookType:'xlsx', bookSST:false, type:'array' };\n        var wbout = XLSX.write(wb, wopts);\n        saveAs(new Blob([wbout],{type:\"application/octet-stream\"}), 'UsuariosCipressus_'+moment().format(\"DD_MM_YYYY\")+'.xlsx');\n    };\n\n    $scope.saveScores = function () { // Guardar el formulario de notas\n        $rootScope.loading = true;\n        var obj = {}; // Objeto a actualizar en DB\n        obj.scores = $scope.auxiliaryScores;\n        obj.submits = $scope.auxiliarySubmits;\n        Cipressus.db.update(obj, \"users_private/\" + $scope.selectedKey)\n            .then(function (snapshot) {\n\n                // Notificar al usuario\n                var notif = { \n                    icon: \"info\",\n                    link: \"dashboard\",\n                    title: \"Cambios en calificaciones\",\n                    text: \"Tus calificaciones fueron actualizadas\"\n                };\n                Cipressus.utils.sendNotification($scope.selectedKey, notif);\n\n                $scope.users[$scope.selectedIndex].scores = $scope.auxiliaryScores;\n                $scope.users[$scope.selectedIndex].submits = $scope.auxiliarySubmits;\n                scoresModal.close();\n                // Borrar los datos temporales\n                $scope.selectedIndex = null;\n                $scope.auxiliaryScores = null;\n                $scope.auxiliarySubmits = null;\n                M.toast({\n                    html: \"Calificaciones actualizadas\",\n                    classes: 'rounded green darken-3',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"No se pudo guardar\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n    };\n\n    ///// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {\n        preventScrolling: false\n    });\n    var messageModal = M.Modal.init(document.getElementById(\"message_modal\"), {\n        preventScrolling: false\n    });\n    var confirmEnrollModal = M.Modal.init(document.getElementById(\"confirm_enroll_modal\"), {\n        preventScrolling: false\n    });\n    var scoresModal = M.Modal.init(document.getElementById(\"scores_modal\"), {\n        preventScrolling: false,\n        dismissible: false\n    });\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"users\").catch(function (err) {\n        console.log(err)\n    });\n\n    $scope.users = [];\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\n        .then(function (users_public_data) {\n            // Convertir objeto a arreglo y copiar claves\n            $scope.getUserIndex = {}; // Arreglo para mapear uid a indice de arreglo\n            for(var k in users_public_data){\n                $scope.users.push(users_public_data[k]);\n                $scope.users[$scope.users.length-1].key = k;\n                $scope.getUserIndex[k] = $scope.users.length-1; // Mapear indice\n            }\n            Cipressus.db.get('users_private') // Descargar lista de usuarios aceptados\n                .then(function (users_private_data) {\n                    // Mezclar los atributos\n                    //console.log($scope.users);\n                    for (var k in users_private_data)\n                        for (var j in users_private_data[k]){ // Dos niveles de entrada\n                            $scope.users[$scope.getUserIndex[k]][j] = users_private_data[k][j];\n                        }\n                    // Descargar lista de actividades\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\n                        .then(function (activities_data) {\n                            $scope.activitiesTree = activities_data;\n                            $scope.activities = Cipressus.utils.getArray(activities_data);\n                            Cipressus.db.getSorted('events/'+$rootScope.user.course,'start') // Lista de eventos ordenados por fecha de inicio\n                            .then(function(events_data){\n                                events_data.forEach(function(childSnapshot){\n                                    var ev = childSnapshot.val();                                    \n                                    if(ev.start <= Date.now() && ev.attendance) // Si es un evento pasado y con asistencia obligatoria\n                                        attendableEvents++; // Contar para calcular porcentaje de asistencia \n                                });                                \n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            })\n                            .catch(function(err){ // events\n                                console.log(err);\n                                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                                $rootScope.loading = false;\n                                $rootScope.$apply(); \n                            });\n                        })\n                        .catch(function (err) {\n                            console.log(err);\n                            M.toast({\n                                html: \"Ocurrió un error al acceder a la base de datos\",\n                                classes: 'rounded red',\n                                displayLength: 2000\n                            });\n                            $rootScope.loading = false;\n                            $scope.$apply();\n                        });\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un error al acceder a la base de datos\",\n                        classes: 'rounded red',\n                        displayLength: 2000\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n\n}]);","app.controller(\"stats\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\r\n\r\n    if (!$rootScope.userLogged) {\r\n        $location.path(\"/login\");\r\n        return;\r\n    }\r\n\r\n    $rootScope.loading = true;\r\n    $rootScope.sidenav.close();\r\n\r\n    var scatter_data = {}; // Arreglo de datos para graficos de correlacion\r\n\r\n    var updateScoreBarPlot = function () { // Genera los arreglos de calificaciones\r\n\r\n        var seriesData = [];\r\n        var drillDownData = [];\r\n\r\n        for (var k in $scope.users) { // Para cada usuario\r\n            if (!$scope.users[k].admin && $scope.users[k].scores && !$scope.users[k].excludeStat) { // Si tiene notas y no es admin y no queda excluido\r\n                var sc = (Cipressus.utils.eval($scope.users[k], $scope.activities)).score / $scope.activities.score * 100;\r\n                var at = 0;\r\n                if($scope.users[k].scores)\r\n                    if($scope.users[k].scores.asistencia)\r\n                        at = $scope.users[k].scores.asistencia.score;\r\n                scatter_data[k] = { // Este dato se emplea luego para el grafico de correlacion de notas vs actividad\r\n                    score: sc,\r\n                    activity: 0,\r\n                    attendance: at\r\n                };\r\n                seriesData.push({ // Evaluar e insertar resultado en array\r\n                    name: $scope.users[k].secondName,\r\n                    y: sc,\r\n                    drilldown: k\r\n                });\r\n\r\n                var tempData = []; // Arreglo temporal con notas del alumno\r\n                for (var j in $scope.activities.children) { // Evaluar tambien las principales actividades\r\n                    tempData.push([\r\n                        $scope.activities.children[j].id,\r\n                        (Cipressus.utils.eval($scope.users[k], $scope.activities.children[j])).score / $scope.activities.children[j].score * 100\r\n                    ]);\r\n                }\r\n\r\n                drillDownData.push({ // Poner arreglo completo de notas de las actividades de este alumno\r\n                    name: $scope.users[k].secondName,\r\n                    id: k,\r\n                    data: tempData\r\n                })\r\n            }\r\n        }\r\n\r\n        seriesData.sort(function(a, b){return (a.y < b.y) ? 1 : ((b.y < a.y) ? -1 : 0) });\r\n\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                drillUpText: '<< Volver a {series.name}'\r\n            }\r\n        });\r\n\r\n        Highcharts.chart('score_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '75%'\r\n            },\r\n            title: {\r\n                text: 'Calificaciones del curso'\r\n            },\r\n            xAxis: {\r\n                type: 'category'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Puntaje acumulado'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y:.1f}%'\r\n                    }\r\n                }\r\n            },\r\n\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b>'\r\n            },\r\n\r\n            series: [{\r\n                name: \"Alumno\",\r\n                colorByPoint: true,\r\n                data: seriesData\r\n            }],\r\n            drilldown: {\r\n                colorByPoint: true,\r\n                series: drillDownData\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    $scope.drillUp = function () {\r\n        $(\"#score_barplot_container\").highcharts().drillUp();\r\n    };\r\n\r\n    var updateAttendancePlot = function () {\r\n        var seriesData = [];\r\n        var categories = []; // Lista de fechas de los eventos\r\n\r\n        var first = true; // En la primera pasada por la lista de eventos, genero el arreglo categories\r\n        for (var j in $scope.users) { // Para cada usuario, calcular progreso de asistencia\r\n            if ($scope.users[j].attendance && !$scope.users[j].excludeStat) {\r\n                var data = []; // Asistencia acumulada por clase\r\n                var evCnt = 0; // Contador de eventos\r\n                var evAtt = 0; // Contador de eventos asistidos\r\n                for (var k in $scope.events) {\r\n                    if ($scope.events[k].start < Date.now() && $scope.events[k].attendance) { // Solo eventos pasados y de asistencia obligatoria\r\n                        evCnt++; // Contar evento\r\n                        if ($scope.users[j].attendance[k]) // Si asistio a esta clase\r\n                            evAtt++;\r\n                        if (evAtt != 0)\r\n                            data.push(Math.round(evAtt / evCnt * 10000) / 100); // Redondear a dos digitos\r\n                        else\r\n                            data.push(0);\r\n                        if (first) // Primera pasada\r\n                            categories.push($rootScope.getTime(3,$scope.events[k].start)); // Agregar evento a la lista\r\n                    }\r\n                }\r\n                first = false;\r\n                seriesData.push({\r\n                    data: data,\r\n                    name: $scope.users[j].secondName\r\n                })\r\n            }\r\n        }\r\n\r\n        Highcharts.chart('attendance_container', {\r\n            chart: {\r\n                type: 'spline',\r\n                height: '70%'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: 'Asistencia a clases'\r\n            },\r\n            xAxis: {\r\n                categories: categories\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateTechPie = function () { // Tecnologias utilizadas mas frecuentemente\r\n        // Calcular uso de navegadores        \r\n        var totalBr = 0; // Cantidad total de datos naveg.\r\n        var totalOs = 0; // Cantidad total de datos so\r\n        var br = { // Contadores de accesos con navegadores\r\n            Firefox: 0,\r\n            Chrome: 0,\r\n            IE: 0,\r\n            Opera: 0,\r\n            Safari: 0,\r\n            Otro: 0\r\n        };\r\n        var os = { // Contadores de accesos con navegadores\r\n            Windows: 0,\r\n            Linux: 0,\r\n            IOS: 0,\r\n            Android: 0,\r\n            Otro: 0\r\n        };\r\n        for (var k in $scope.users)\r\n            if (!$scope.users[k].admin && !$scope.users[k].excludeStat) {\r\n                for (var j in $scope.users[k].activity.browser) {\r\n                    br[j] += $scope.users[k].activity.browser[j];\r\n                    totalBr += $scope.users[k].activity.browser[j];\r\n                }\r\n                for (var j in $scope.users[k].activity.os) {\r\n                    os[j] += $scope.users[k].activity.os[j];\r\n                    totalOs += $scope.users[k].activity.os[j];\r\n                }\r\n            }\r\n\r\n        /* // Esta porcion da error cuando se ejecuta por segunda vez (al cambiar de vista y volver)\r\n        Highcharts.setOptions({ // Gradiente de colores\r\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n                return {\r\n                    radialGradient: {\r\n                        cx: 0.5,\r\n                        cy: 0.3,\r\n                        r: 0.7\r\n                    },\r\n                    stops: [\r\n                        [0, color],\r\n                        [1, Highcharts.Color(color).brighten(-0.3).get('rgb')]\r\n                    ]\r\n                };\r\n            })\r\n        });\r\n        */\r\n\r\n        Highcharts.chart('browser_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de navegadores'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Chrome',\r\n                        y: br.Chrome / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Firefox',\r\n                        y: br.Firefox / totalBr\r\n                    },\r\n                    {\r\n                        name: 'IE',\r\n                        y: br.IE / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Opera',\r\n                        y: br.Opera / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Safari',\r\n                        y: br.Safari / totalBr\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: br.Otro / totalBr\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('so_pie_container', {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Uso de S.O.'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                        style: {\r\n                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                        },\r\n                        connectorColor: 'silver'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Uso',\r\n                data: [{\r\n                        name: 'Windows',\r\n                        y: os.Windows / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Linux',\r\n                        y: os.Linux / totalOs\r\n                    },\r\n                    {\r\n                        name: 'IOS',\r\n                        y: os.IOS / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Android',\r\n                        y: os.Android / totalOs\r\n                    },\r\n                    {\r\n                        name: 'Otro',\r\n                        y: os.Otro / totalOs\r\n                    }\r\n                ]\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateMenuAccessPlot = function () {\r\n\r\n        var itemCntr = { // Nombres de las secciones en db\r\n            home: 'Inicio',\r\n            dashboard: 'Dashboard',\r\n            calendar: 'Cronograma',\r\n            sources: 'Material',\r\n            submissions: 'Entregas',\r\n            simulator: 'Simulador',\r\n            hardware: 'Probador',\r\n            profile: 'Perfil'\r\n        };\r\n\r\n        // Secciones\r\n        var categoriesData = []; // Nombres de los alumnos\r\n        var seriesData = []; // Datos a graficar\r\n        var first = true; // Primera pasada por lista de usuarios\r\n        for (var j in itemCntr) { // Para cada seccion\r\n            var data = []; // Accesos a la seccion actual por usuario\r\n            for (var k in $scope.users) // Para cada usuario\r\n                if (!$scope.users[k].admin && !$scope.users[k].excludeStat) { // Usuarios sobre los que se realiza estadistica\r\n                    if (first) // En la primera pasada, agregar la lista de nombres\r\n                        categoriesData.push($scope.users[k].secondName); // Agregar alumno a la lista\r\n                    if ($scope.users[k].activity.items[j]) { // Si tiene accesos a esta seccion\r\n                        data.push($scope.users[k].activity.items[j]) // Agregar valor\r\n                    } else { // Sino, el contador es 0\r\n                        data.push(0);\r\n                    }\r\n                    // Registrar cantidad de accesos (solo usuarios con nota)\r\n                    if (j == 'home' && $scope.users[k].scores) // Los accesos a home equivale a la cantidad de logueos\r\n                        scatter_data[k].activity = $scope.users[k].activity.items.home;\r\n                }\r\n            seriesData.push({\r\n                name: itemCntr[j],\r\n                data: data\r\n            });\r\n            first = false;\r\n        }\r\n\r\n        Highcharts.chart('items_barplot_container', {\r\n            chart: {\r\n                type: 'bar',\r\n                height: '150%'\r\n            },\r\n            title: {\r\n                text: 'Uso de herramientas'\r\n            },\r\n            xAxis: {\r\n                categories: categoriesData,\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: 'Accesos',\r\n                    align: 'high'\r\n                },\r\n                labels: {\r\n                    overflow: 'justify'\r\n                }\r\n            },\r\n            tooltip: {\r\n                valueSuffix: ' accesos'\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    dataLabels: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'top',\r\n                x: -40,\r\n                y: 80,\r\n                floating: true,\r\n                borderWidth: 1,\r\n                backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n                shadow: true\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            series: seriesData\r\n        });\r\n    };\r\n\r\n    var updateScatterPlot = function () { // Espacio para variables correlacionadas\r\n        var seriesData1 = [];\r\n        var seriesData2 = [];\r\n        for (var k in scatter_data){\r\n            seriesData1.push([scatter_data[k].score,scatter_data[k].activity]);\r\n            seriesData2.push([scatter_data[k].score,scatter_data[k].attendance]);\r\n        }\r\n\r\n        Highcharts.chart('scatterplot_container1', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs actividad'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Accesos'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} accesos'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(223, 83, 83, .5)',\r\n                data: seriesData1\r\n            }]\r\n        });\r\n\r\n        Highcharts.chart('scatterplot_container2', {\r\n            chart: {\r\n                type: 'scatter',\r\n                zoomType: 'xy'\r\n            },\r\n            title: {\r\n                text: 'Calificación vs asistencia'\r\n            },\r\n            xAxis: {\r\n                title: {\r\n                    enabled: true,\r\n                    text: 'Calificación'\r\n                },\r\n                startOnTick: true,\r\n                endOnTick: true,\r\n                showLastLabel: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Asistencia'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                scatter: {\r\n                    marker: {\r\n                        radius: 5,\r\n                        states: {\r\n                            hover: {\r\n                                enabled: true,\r\n                                lineColor: 'rgb(100,100,100)'\r\n                            }\r\n                        }\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            marker: {\r\n                                enabled: false\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<b>{series.name}</b><br>',\r\n                        pointFormat: '{point.x} %, {point.y} %'\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Alumnos',\r\n                color: 'rgba(83, 83, 223, .5)',\r\n                data: seriesData2\r\n            }]\r\n        });\r\n    };\r\n\r\n    var updateProfilesPlot = function(){ // Mostrar un grafico de barras para el test de FS con los datos promedios\r\n        var avgScales = [0,0,0,0]; // Valores promedios de las escalas\r\n        var dataCnt = 0; // Cantidad de individuos\r\n        for(var k in $scope.users){ // Calcular promedio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes\r\n                        avgScales[j] += scales[j];\r\n                }\r\n        }\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            avgScales[j] = Math.round(avgScales[j]/dataCnt*100)/100;\r\n\r\n        // Calcular desvio estandar\r\n        var stdScales = [0,0,0,0];\r\n        dataCnt = 0;\r\n        for(var k in $scope.users){ // Calcular desvio de resultados\r\n            if($scope.users[k].test_fs && !$scope.users[k].excludeStat)\r\n                if($scope.users[k].test_fs.answers){\r\n                    var scales = Cipressus.test_FS.eval($scope.users[k].test_fs.answers); // Toma la funcion de la libreria\r\n                    dataCnt++;\r\n                    for(var j = 0; j < 4; j++) // Sumar componentes de la ecuacion de desvio\r\n                        stdScales[j] += (scales[j]-avgScales[j])*(scales[j]-avgScales[j]); // Suma de diferencias cuadraticas\r\n                }\r\n        }\r\n\r\n        for(var j = 0; j < 4; j++) // Dividir por la cantidad\r\n            stdScales[j] = Math.round(Math.sqrt(stdScales[j]/dataCnt)*100)/100; // Formula std (redondeo 2 decimales)\r\n\r\n        for (var k = 0; k < 4; k++) {\r\n            var elem = document.getElementById(\"scale_\" + k);\r\n            var width = 2*Math.abs(avgScales[k]) * 50 / 11; //(50% hacia los costados dividido 11 puntaje max)\r\n            elem.style.width = width + '%';\r\n            if (avgScales[k] < 0) {\r\n                elem.style.marginLeft = 50 - width + '%';\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][0];\r\n            } else {\r\n                elem.style.marginLeft = \"50%\";\r\n                document.getElementById(\"prof_\" + k).innerHTML = Cipressus.test_FS.profileDesc[k][1];\r\n            }\r\n            elem.innerHTML = Math.abs(avgScales[k])+\" &#177;\"+stdScales[k];\r\n        }\r\n    };\r\n\r\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"stats\").catch(function (err) {console.log(err)});\r\n\r\n    Cipressus.db.get('users_public') // Descargar lista de usuarios\r\n        .then(function (users_public_data) {\r\n            $scope.users = {};\r\n            Cipressus.db.query('users_private', 'course', $rootScope.user.course) // Descargar lista de usuarios del curso actual\r\n                .then(function (snapshot) {\r\n                    var users_private_data = snapshot.val();\r\n                    //console.log(users_private_data);\r\n                    // Mezclar los atributos\r\n                    for (var k in users_private_data){ // Para cada usuario\r\n                        $scope.users[k] = users_public_data[k]; \r\n                        for (var j in users_private_data[k]) // Para cada atributo privado del usuario actual\r\n                            $scope.users[k][j] = users_private_data[k][j];\r\n                    }\r\n                    // Descargar lista de actividades\r\n                    Cipressus.db.get('activities/'+$rootScope.user.course)\r\n                        .then(function (activities_data) {\r\n                            $scope.activities = activities_data;\r\n                            Cipressus.db.get('events/'+$rootScope.user.course) // Descargar la lista de clases\r\n                                .then(function (events_data) {\r\n                                    $scope.events = events_data;\r\n                                    updateScoreBarPlot(); // Cargar los datos al grafico de barras                    \r\n                                    updateAttendancePlot(); // Actualizar grafico de asistencia\r\n                                    updateTechPie(); // Mostrar estadisticas de uso                            \r\n                                    updateMenuAccessPlot(); // Estadisticas de uso de alumnos\r\n                                    updateScatterPlot(); // Grafico de correlacion entre variables\r\n                                    updateProfilesPlot(); // Perfil promedio y desvio\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(err);\r\n                                    M.toast({\r\n                                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                        classes: 'rounded red',\r\n                                        displayLength: 2000\r\n                                    });\r\n                                    $rootScope.loading = false;\r\n                                    $scope.$apply();\r\n                                });                            \r\n                        })\r\n                        .catch(function (err) { // activities\r\n                            console.log(err);\r\n                            M.toast({\r\n                                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                                classes: 'rounded red',\r\n                                displayLength: 2000\r\n                            });\r\n                            $rootScope.loading = false;\r\n                            $scope.$apply();\r\n                        });\r\n                })\r\n                .catch(function (err) { // users_private\r\n                    console.log(err);\r\n                    M.toast({\r\n                        html: \"Ocurrió un error al acceder a la base de datos\",\r\n                        classes: 'rounded red',\r\n                        displayLength: 2000\r\n                    });\r\n                    $rootScope.loading = false;\r\n                    $scope.$apply();\r\n                });\r\n        })\r\n        .catch(function (err) { // users_public\r\n            console.log(err);\r\n            M.toast({\r\n                html: \"Ocurrió un error al acceder a la base de datos\",\r\n                classes: 'rounded red',\r\n                displayLength: 2000\r\n            });\r\n            $rootScope.loading = false;\r\n            $scope.$apply();\r\n        });\r\n}]);","app.controller(\"attendance\", ['$scope','$rootScope','$location', function ($scope,$rootScope,$location) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.updateLists = function(){ // En base a la fecha seleccionada se generan las listas de ausentes y presentes\n        if($scope.changes){ // Si hubo cambios, preguntar si guardar antes de borrar\n            confirmModal.open();\n            return;\n        } \n        \n        $scope.absents = []; // Lista con id de usuarios ausentes al evento actual\n        $scope.presents = []; // Lista de presentes\n        for(var k in $scope.users){ // Recorrer lista de usuarios\n            if(!$scope.users[k].admin){ // A los usuarios admin no se les computa asistencia\n                if($scope.users[k].attendance){ // Si el usuario asistio a alguna clase\n                    if($scope.users[k].attendance[$scope.selectedEventKey]) // Si tiene el evento actual\n                        $scope.presents.push(k); // Marcar alumno como presente\n                    else // Si no tiene el evento actual\n                        $scope.absents.push(k); // Agregar a lista de ausentes\n                }else // Si no asistio a ningun evento, marcar como ausente \n                    $scope.absents.push(k); // Agregar a lista de ausentes\n            }\n        }\n\n        $scope.$apply();\n    };\n\n    $scope.isPresent = function(idx){ // Mover el user key a lista de ausentes\n        $scope.changes = true;\n        $scope.presents.push($scope.absents[idx]); // Agregar a prsentes\n        $scope.absents.splice(idx,1); // Quitar de ausentes\n    };\n\n    $scope.isAbsent = function(idx){ // Mover el user key a la lista de presentes\n        $scope.changes = true;\n        $scope.absents.push($scope.presents[idx]); // Agregar a ausentes\n        $scope.presents.splice(idx,1); // Quitar de presentes\n    };\n\n    $scope.saveList = function(){ // Guardar la lista de presentes\n        var updates = {};\n        for(var k in $scope.presents){ // Guardar referencia al evento actual en la entrada del usuario\n            var value = { // A insertar para marcar asistencia\n                evaluator: $rootScope.user.uid,\n                timestamp: Date.now()\n            };\n            updates[\"users_private/\"+$scope.presents[k]+\"/attendance/\"+$scope.selectedEventKey] = value;\n            // Actualizar objeto local\n            if(!$scope.users[$scope.presents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.presents[k]].attendance = {}\n            $scope.users[$scope.presents[k]].attendance[$scope.selectedEventKey] = value;\n        }\n        for(var k in $scope.absents){ // Quitar referencia en la entrada del usuario\n            updates[\"users_private/\"+$scope.absents[k]+\"/attendance/\"+$scope.selectedEventKey] = null;\n            if(!$scope.users[$scope.absents[k]].attendance) // Para la primera vez\n                $scope.users[$scope.absents[k]].attendance = {}\n            $scope.users[$scope.absents[k]].attendance[$scope.selectedEventKey] = null;\n        }\n\n        // Guardar cambios\n        Cipressus.db.update(updates)\n        .then(function(snapshot){\n            M.toast({html: \"Cambios guardados!\",classes: 'rounded green darken-3 darken-3',displayLength: 1500});        \n            $rootScope.loading = false;\n            $scope.changes = false;\n            $scope.$apply();\n            confirmModal.close();\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al actualizar cambios\",classes: 'rounded red',displayLength: 2000});        \n        });\n\n    };\n    \n    //// Inicializacion //// \n\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"attendance\").catch(function(err){console.log(err)});\n\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false});\n    document.getElementById(\"event_select\").addEventListener(\"change\",function(){ // No se puede poner en ng-change\n        $scope.selectedEventKey = this.value;\n        $scope.updateLists();\n    });\n    \n    Cipressus.db.getSorted(\"events/\"+$rootScope.user.course,\"start\") // Descargar todos los eventos ordenados por fecha\n    .then(function(events_data){\n        $scope.events = {}; // Lista de eventos que completo dentro del iterator\n        // Tengo que buscar el evento que acaba de empezar (para usar en la clase actual por ejemplo)\n        var today = Date.now(); // Ahora\n        var nextKey = \"\"; // En esta variable dejo el key del evento que pongo por defecto        \n        events_data.forEach(function(childSnapshot){ // Lista ordenada de menor a mayor (esto no es asincrono)            \n            key = childSnapshot.ref_.path.pieces_[2]; // Esto seria el key (#HARDCODED el 2 es porque son dos niveles de keys dentro del arbol\n            $scope.events[key] = childSnapshot.val(); // Hago push del evento (no se puede mandar todos de una)\n            if($scope.events[key].start < today) // Los eventos futuros ya no los guardo\n                nextKey = key; // Guardo el key del evento\n            \n        });        \n        $scope.$apply(); // Hay que actualizar dom antes de inicializar el select\n        document.getElementById(\"event_select\").value = nextKey; // Seleccionar el valor defecto del select\n        $scope.selectedEventKey = nextKey; // Para actualizar la tabla una vez que tenga los usuarios\n        M.FormSelect.init(document.querySelectorAll('select'), {}); // Inicializar select\n        Cipressus.db.get(\"users_private\") // Descargar lista de usuarios\n        .then(function(users_private_data){\n            $scope.users = {};\n            for(var k in users_private_data) \n                if(users_private_data[k].course == $rootScope.user.course) // Solo tomo los del curso actual\n                    $scope.users[k] = users_private_data[k];\n            Cipressus.db.get(\"users_public\") // Descargar datos de usuario\n            .then(function(users_public_data){\n                for(var k in users_public_data) // Los datos de usuario para listar\n                    if($scope.users[k]) // Si este usuario esta en lista de habilitados\n                        $scope.users[k].data = users_public_data[k]; \n                $scope.updateLists(); // Como ya tengo el selectedEventKey, puedo generar las listas para ese dia\n                $rootScope.loading = false;\n                $scope.changes = false; // Para habilitar el boton de guardar\n                $scope.$apply();    \n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n            });        \n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n        });        \n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});        \n    });    \n\n}]);","app.controller(\"activities\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n\n    var updateSunburst = function (node) { // Graficar sunburst\n\n        var data = Cipressus.utils.getArray(node); // Obtener el formato que requiere el grafico\n\n        Highcharts.chart('sunburst_container', {\n            chart: {height: '90%'},\n            title: {text: 'Proporción de calificaciones'},\n            subtitle: {text: $scope.activities.course.name},\n            credits: {enabled: false},\n            plotOptions: {\n                series: {\n                    events: {\n                        click: function (event) { // Evento de clickeo sobre partes del sunburst\n                            //console.log(event.point.node.id);\n                            var node = Cipressus.utils.searchNode($scope.activities, event.point.node.id); \n                            if(node)\n                                $scope.selectActivity(node, false, true);\n                        }\n                    }\n                }\n            },\n            series: [{\n                type: \"sunburst\",\n                id: \"Activities\",\n                data: data,\n                allowDrillToNode: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    format: '{point.name}',\n                    filter: {property: 'innerArcLength',operator: '>',value: 16}\n                },\n                levels: [{\n                        level: 1,\n                        levelIsConstant: false,\n                        dataLabels: {\n                            filter: {property: 'outerArcLength',operator: '>',value: 64}\n                        }\n                    },\n                    {\n                        level: 2,\n                        colorIndex: 1\n                    },\n                    {level: 3,colorByPoint: true}, \n                    {level: 4,colorVariation: {key: 'brightness',to: -0.5}}, \n                    {level: 5,colorVariation: {key: 'brightness',to: 0.5}\n                }]\n\n            }],\n            tooltip: {\n                headerFormat: \"\",\n                pointFormat: 'La actividad <b>{point.name}</b> suma <b>{point.value}</b> puntos'\n            }\n        });\n    };\n\n    var tree = null; // Global\n\n    var updateTree = function () {\n        \n        if (tree !== null) {\n            tree.destroy();\n            tree = null;\n        }\n\n        var data = Cipressus.utils.getTree($scope.activities); // Obtener esquema en formato de arbol jerarquico para vis.js\n\n        var container = document.getElementById('tree_container');\n        var options = {            \n            layout: {\n                hierarchical: {\n                    direction: \"UD\"\n                }\n            }\n        };\n\n        tree = new vis.Network(container, data, options);\n\n        /*\n        tree.once('afterDrawing', function() {\n            container.style.height = '75vh'\n        });\n        */\n\n        tree.on('select', function (params) { // Callback de seleccion de nodos del arbol\n            var node = Cipressus.utils.searchNode($scope.activities, params.nodes[0]); \n            if(node)\n                $scope.selectActivity(node, true, true);\n        });\n    };\n\n    $scope.selectActivity = function(node, update_sunburst, apply){ // Selecciona un nodo\n        if(node){ // Checkeo de validez\n            if($scope.selectedHistory)\n                $scope.selectedHistory.push($scope.selectedNode);\n            else\n                $scope.selectedHistory = [$scope.selectedNode];\n\n            $scope.selectedNode = node;\n\n            if(update_sunburst)\n                updateSunburst(node);\n            \n            if(apply)\n                $scope.$apply();\n            M.updateTextFields();\n        }\n    };\n\n    $scope.selectPreviousActivity = function(){ // Callback de boton para volver hacia atras la seleccion\n        if($scope.selectedHistory){\n            var node = $scope.selectedHistory.pop(); // Devuelve el anterior al actual y lo quita\n            // De aca en adelante es lo mismo que $scope.selectActivity pero sin insertar en el historial\n            if(node){\n                $scope.selectedNode = node;\n                updateSunburst(node);\n                M.updateTextFields();\n            }\n        }\n    };\n    \n    var courseID = $location.$$search.id;\n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"activities\", courseID).catch(function (err) {\n        console.log(err);\n    });\n\n    //console.log(courseID);\n\n    $rootScope.loading = true;\n    if(courseID){\n        Cipressus.db.get('activities/' + courseID) // Descargar arbol de actividades\n        .then(function (data) {\n            $scope.activities = data;\n\n            updateSunburst($scope.activities);\n            updateTree();\n            $scope.selectedNode = angular.copy($scope.activities);\n            $scope.selectedHistory = [$scope.selectedNode]; // Historial para hacer drillup\n\n            M.updateTextFields();\n            $rootScope.loading = false;\n            $rootScope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n        });\n    }else{\n        $scope.activities = {\n            childres:[],\n            course:{\n                start: Date.now(),\n                end: Date.now()+9504000000,\n                name: \"Nuevo curso\"\n            },\n            id: \"final\",\n            name: \"Nota final\",\n            score: 100\n        };\n        $scope.selectedNode = angular.copy($scope.activities);\n        updateSunburst($scope.activities);\n        updateTree();\n        $rootScope.loading = false;\n    }\n\n}]);\n\n","app.controller(\"courses\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.sidenav.close();\n    \n    // Modal de confirmacion de eliminacion de curso\n    var deleteCourseModal = M.Modal.init(document.getElementById(\"confirm_delete_modal\"), {preventScrolling: false}); \n\n\n    // Registrar actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"courses\").catch(function (err) {\n        console.log(err)\n    });\n\n    // Eliminación de curso\n    $scope.deleteCourse = function(key){\n        if(key){ // Si se pasa clave, abrir modal para confirmar\n            $scope.selectedCourseKey = key;\n            $scope.selectedCourseIndex = $scope.courses.findIndex(function(el){return el.key == key});\n            deleteCourseModal.open();\n        }else{ // Si no tiene clave (key == null), es confirmacion de eliminacion del curso seleccionado\n            if($scope.selectedCourseKey){ // Debe estar definido\n\n            }else{\n                M.toast({html: \"La clave de curso no es válida.\",classes: 'rounded red',displayLength: 2000});\n            }\n        }\n    }\n\n    // Descargar informacion sobre los cursos\n    Cipressus.db.get(\"metadata/courses\") // Descargar datos de los cursos disponibles\n    .then(function(courses){\n        $scope.courses = [];\n        for(var k in courses){\n            courses[k].key = k;\n            $scope.courses.push(courses[k]);\n        }\n        //console.log($scope.courses);\n        $rootScope.loading = false;\n        $rootScope.$apply();\n        M.FormSelect.init(document.querySelectorAll('select'), {});\n    })\n    .catch(function(err){\n        console.log(err);\n        M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n    });\n\n}]);","app.controller(\"editor\", ['$scope','$rootScope','$location','localStorageService', function ($scope,$rootScope,$location,localStorageService) {    \n\n    if(!$rootScope.userLogged){\n        $location.path(\"/login\");\n        return;\n    }\n\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.select = function(key){ // Seleccionar noticia para ver, editar o borrar\n        // Aunque no edite se inicializa el editor igual. Para evitarlo hay que meter esto en otra funcion\n        var quilleditor = document.createElement(\"div\"); // Crear el contenedor cada vez para reiniciar\n        quilleditor.id = \"quill\";\n        document.getElementById(\"quill_container\").innerHTML = \"\";\n        document.getElementById(\"quill_container\").appendChild(quilleditor);            \n        quill = new Quill('#quill', { // Controlador del editor (inicializo cada vez)\n            modules: {            \n                toolbar: [ // Botones de la barra de tareas\n                    ['bold', 'italic', 'underline', 'strike'],        \n                    [{ 'size': ['small', false, 'large', 'huge'] }], \n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],            \n                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                    [{ 'script': 'sub'}, { 'script': 'super' }],      \n                    [{ 'indent': '-1'}, { 'indent': '+1' }],         \n                    [{ 'direction': 'rtl' }],                         \n                    [{ 'color': [] }, { 'background': [] }],          \n                    [{ 'font': [] }],\n                    [{ 'align': [] }],\n                    ['link', 'image'],\n                    ['clean']                                         \n                ],\n                imageResize: {} // Este funciona con un script adicional\n            },\n            theme: 'snow'\n        });        \n        if(key != undefined){ // Editar, ver o eliminar existente\n            $scope.selected = angular.copy($scope.news[key]);\n            quill.container.firstChild.innerHTML = $scope.selected.content;\n        }else{ // Editar nueva\n            quill.container.firstChild.innerHTML = \"\";\n            $scope.selected = {\n                title: \"\",\n                content: \"\",\n                order: $scope.news.length,\n                timestamp: 0,\n                author: $rootScope.user.uid\n            }\n        }\n    };\n\n    var updateTimestamp = function(){ // Actualizar fecha de actualizacion de noticias en db\n        var ts = {}; ts[$rootScope.user.course] = Date.now(); // Siempre se actualizan los datos como objetos\n        Cipressus.db.update(ts,\"metadata/updates/news\")\n        .then(function(){\n            console.log(\"Actualización de metadata\");\n            // Actualizar informacion en localstorage\n            newsData = { // Objeto a guardar en localStorage\n                news: $scope.news,\n                authors: $scope.users,\n                last_update: Date.now()\n            };\n            localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n        })\n        .catch(function(err){\n            console.log(err);\n        });\n    };\n\n    $scope.deleteSelected = function(){ // Borrar noticia seleccionada\n        $rootScope.loading = true;\n        Cipressus.db.set(null,\"news/\"+$rootScope.user.course+\"/\"+$scope.selected.key)\n        .then(function(snapshot){\n            $scope.news.splice($scope.selected.order,1); // Quitar del view\n            // Actualizar orden de cada elemento\n            var updates = {};\n            for(k in $scope.news){ \n                $scope.news[k].order = parseInt(k);\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[k].key+\"/order\"] = parseInt(k);\n            }\n            Cipressus.db.update(updates)\n            .then(function(snapshot){\n                M.toast({html: \"Listo!\",classes: 'rounded green darken-3',displayLength: 1000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                $rootScope.loading = false;\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n            });\n        })\n        .catch(function(err){\n            $rootScope.loading = false;\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n        updateTimestamp();\n        confirmModal.close();\n    };\n\n    $scope.moveSelected = function(up, key){ // Mover noticia hacia arriba(true) o abajo(false). key es el numero de elemento\n        if(up){ // Subir\n            if(key > 0){ // No puede subirse el primero\n                $rootScope.loading = true;\n                var updates = {};\n                // Hacer un swap con el de arriba\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order - 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key-1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates)\n                .then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order-1;\n                    $scope.news[key-1].order = $scope.news[key-1].order+1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key-1]);\n                    $scope.news[key-1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }\n        }else{ // Bajar\n            if(key < $scope.news.length - 1){ // No puede bajarse el ultimo\n                console.log($scope.news[key].key);\n                console.log($scope.news[key+1].key);\n                $rootScope.loading = true;\n                var updates = {};\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key].key+\"/order\"] = $scope.news[key].order + 1;\n                updates[\"news/\"+$rootScope.user.course+\"/\"+$scope.news[key+1].key+\"/order\"] = $scope.news[key].order;\n                Cipressus.db.update(updates).then(function(snapshot){\n                    // Luego de actualizar en DB, cambiar orden de los arreglos que se muestra en la tabla\n                    $scope.news[key].order = $scope.news[key].order + 1;\n                    $scope.news[key+1].order = $scope.news[key+1].order - 1;\n                    var temp = angular.copy($scope.news[key]);\n                    $scope.news[key] = angular.copy($scope.news[key+1]);\n                    $scope.news[key+1] = angular.copy(temp);\n                    M.toast({html: \"Orden actualizado\",classes: 'rounded green darken-3',displayLength: 1000});\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                })\n                .catch(function(err){\n                    $rootScope.loading = false;\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                }); \n            }\n        }\n        updateTimestamp();\n    };\n\n    $scope.saveSelected = function(){ // Guardar nueva noticia o guardar cambios editados\n        \n        $rootScope.loading = true;\n        \n        if($scope.scheduledNew){ // Si es publicacion programada\n            var date = document.getElementById(\"schedule_date\").value;\n            var time = document.getElementById(\"schedule_time\").value;\n            var timestamp = moment(time+\" \"+date,\"HH:mm YYYY-MM-DD\").unix()*1000;\n            if(timestamp){ // Chequear que haya puesto bien la fecha\n                $scope.selected.timestamp = timestamp;\n            }else{\n                M.toast({html: \"Ingrese fecha de publicación programada\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                return;\n            }\n        }else{ // Si no es publicación programada, usar fecha actual\n            $scope.selected.timestamp = Date.now(); // Fecha:hora actuales\n        }\n\n        $scope.selected.content = quill.container.firstChild.innerHTML.replace(new RegExp(\"<img src=\", 'g'), \"<img class='responsive-img' src=\"); // Agregar clase responsive a las imagenes\n        \n        if($scope.selected.key){ // Si ya tiene una clave, hay que sobreescribir noticia en DB\n            var key = $scope.selected.key;            \n            $scope.selected.key = null; // Borro la clave para que no quede en la db\n            Cipressus.db.update($scope.selected,'news/'+$rootScope.user.course+\"/\"+key)\n            .then(function(snapshot){\n                $scope.selected.key = key; // Volver a poner la clave para que no se pierda\n                var index = $scope.news.findIndex(function(el){return el.key == key;});\n                $scope.news[index] = angular.copy($scope.selected); // Actualizar local\n                M.toast({html: \"Comunicado actualizado\",classes: 'rounded green darken-3',displayLength: 1500});\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }else{ // Si no tiene key, hacer push\n            $rootScope.loading = true;\n            Cipressus.db.push($scope.selected,'news/'+$rootScope.user.course)\n            .then(function(snapshot){\n                // Si el autor aun no habia creado noticias, guardar su avatar y nombre\n                if(!$scope.users[$rootScope.user.uid]){\n                    $scope.users[$rootScope.user.uid] = {\n                        name: $rootScope.user.name,\n                        avatar:$rootScope.user.avatar\n                    }\n                }\n                $scope.selected.key = snapshot.key;\n                $scope.news.push($scope.selected);\n                editModal.close();\n                $rootScope.loading = false;\n                $scope.$apply();\n            })\n            .catch(function(err){\n                console.log(err);\n                M.toast({html: \"Ocurrió un error al intentar guardar\",classes: 'rounded red',displayLength: 2000});\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n        }\n        updateTimestamp();\n    };\n\n    \n    //// Inicializacion del controller\n\n    M.Modal.init(document.getElementById(\"view_modal\"), {preventScrolling: false});\n    var confirmModal = M.Modal.init(document.getElementById(\"confirm_modal\"), {preventScrolling: false, dismissible: false});\n    var editModal = M.Modal.init(document.getElementById(\"edit_modal\"), {preventScrolling: false, dismissible: false});\n    $scope.selected = {};\n    $scope.scheduledNew = false;\n    var quill; // El editor se inicializa al seleccionar una entrada\n\n    var downloadNews = function(){ // Descargar noticias y usuarios de la db\n        $scope.news = []; // Para que las noticias aparezcan en orden, se guardan en array\n        var authors = []; // Uids de usuarios que hicieron publicaciones\n        Cipressus.db.getSorted('news/'+$rootScope.user.course,'order') // Descargar lista de novedades\n        .then(function(snapshot){\n            snapshot.forEach(function(childSnapshot){ // Lista ordenada\n                var child = childSnapshot.val();\n                child.content = Cipressus.utils.quillToHTML(child.content); // Parsear para quitar formato de quill\n                child.key = childSnapshot.key; // Hay que guardar el key para actualizar\n                if(authors.indexOf(child.author) == -1) // Si todavia no se guardo el uid del autor de esta publicacion\n                    authors.push(child.author); // Agregar a la lista\n                $scope.news.push(child);\n            });  \n            $scope.users = {};\n            if(authors.length > 0){\n                var job = [];\n                for(var k in authors)\n                    job.push(Cipressus.db.get('users_public/'+authors[k])) // Descargar datos de los autores de publicaciones solamente\n                Promise.all(job)\n                .then(function(users_data){\n                    for(var k in users_data)\n                        $scope.users[authors[k]] = users_data[k]; \n                    newsData = { // Objeto a guardar en localStorage\n                        news: $scope.news,\n                        authors: $scope.users,\n                        last_update: Date.now()\n                    };\n                    localStorageService.set(\"newsData_\"+$rootScope.user.course,newsData);\n                    $rootScope.loading = false;\n                    $rootScope.$apply(); \n                })\n                .catch(function(err){\n                    console.log(err);\n                    M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n                });\n            }else{\n                $rootScope.loading = false;\n                $rootScope.$apply(); \n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    };\n\n    // Monitoreo de actividad\n    Cipressus.utils.activityCntr($rootScope.user.uid,\"editor\").catch(function(err){console.log(err)});\n\n    var newsData = localStorageService.get(\"newsData_\"+$rootScope.user.course); // Localmente se guarda news, authors y last_update\n    if(newsData){ // Si hay datos en local storage\n        $scope.news = newsData.news;\n        $scope.users = newsData.authors;\n        Cipressus.db.get(\"metadata/updates/news/\"+$rootScope.user.course) // Descargar estampa de tiempo de ultima actualizacion de esta seccion\n        .then(function(updateTimestamp){\n            if(newsData.last_update < updateTimestamp) // Hay cambios en la base de datos\n                downloadNews(); // Descargar\n            else{ // Si no hay cambios, terminar\n                $rootScope.loading = false;\n                $rootScope.$apply();\n            }\n        })\n        .catch(function(err){\n            console.log(err);\n            M.toast({html: \"Ocurrió un error al acceder a la base de datos\",classes: 'rounded red',displayLength: 2000});\n        });\n    }else{ // Si no hay datos, descargar si o si\n        downloadNews();\n    }\n\n}]);","app.controller(\"profile\", ['$scope', '$rootScope', '$location', function ($scope, $rootScope, $location) {\n\n    if (!$rootScope.userLogged) {\n        $location.path(\"/login\");\n        return;\n    }\n\n    $scope.editingReady = false; // Para habilitar edicion hay que descargar informacion extra de otros usuarios\n\n    document.getElementById(\"imgInput\").addEventListener('change', // Callback al subir foto de perfil\n        function () { // Cuando sube una nueva foto, agregar a la vista como base64\n            $rootScope.loading = true;\n            $scope.$apply();\n            var file = document.getElementById(\"imgInput\").files[0];\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                $scope.newAvatar = reader.result; // Se muestra temporalmente esta imagen\n                $scope.avatarFile = file; // Guardo el archivo para subir luego a storage\n                $scope.newProfilePic = true;\n                $rootScope.loading = false;\n                $scope.$apply();\n            }\n            if (file) reader.readAsDataURL(file);\n        });\n\n    $scope.uploadPic = function () { // Redirigir el evento al input para cargar una foto\n        document.getElementById(\"imgInput\").click();\n    };\n\n    $scope.saveForm = function () { // Guardar cambios en db\n        $rootScope.loading = true;\n\n        // Valores de los formularios\n        var newData = {\n            name: document.getElementById(\"inputName\").value,\n            secondName: document.getElementById(\"inputSecondName\").value,\n            lu: document.getElementById(\"inputLU\").value,\n            degree: document.getElementById(\"inputDegree\").value,\n            partners: [] // Arreglo de companeros de comision, se completa luego\n        }\n\n        // Validar datos de formulario\n        if (newData.name == \"\" || newData.secondName == \"\" || newData.lu == \"\" || newData.degree == \"\") {\n            console.log(\"Uno de los campos queda vacio.\");\n            M.toast({\n                html: \"Complete todos los campos\",\n                classes: 'rounded red',\n                displayLength: 2500\n            });\n            $rootScope.loading = false;\n            return;\n        }\n\n        // Buscar companeros de comision ingresados y generar arreglo de uids\n        var getUserUID = function (name) { // Obtener el uid a partir del nombre completo\n            for (var k in $scope.users)\n                if ($scope.users[k].name + \" \" + $scope.users[k].secondName == name) // Coincidencia\n                    return k;\n        };\n\n        // Validar los nombres de companeros de comision (deben existir usuarios, no pueden ser iguales)\n        if (document.getElementById(\"partner1\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner1\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (document.getElementById(\"partner2\").value != \"\") {\n            var partUid = getUserUID(document.getElementById(\"partner2\").value);\n            if (partUid)\n                newData.partners.push(partUid);\n            else {\n                M.toast({\n                    html: \"Nombre de usuario no válido\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        if (newData.partners.length == 2) { // En caso de ingresar dos compañeros\n            if (newData.partners[0] == newData.partners[1]) { // No pueden ser iguales\n                M.toast({\n                    html: \"Nombres de compañeros iguales\",\n                    classes: 'rounded red',\n                    displayLength: 2500\n                });\n                $rootScope.loading = false;\n                return;\n            }\n        }\n        // Falta verificar que ninguno de los dos companeros ingresado sean iguales al usuario actual\n\n        // Habria que incluir referencia al usuario actual en los companeros indicados\n        var updateNewData = function(){ // Actualizar entrada en la db\n            Cipressus.db.update(newData, \"users_public/\" + $rootScope.user.uid) // Actualizar\n                .then(function (res) {\n                    M.toast({\n                        html: \"Datos actualizados!\",\n                        classes: 'rounded green darken-3',\n                        displayLength: 2500\n                    });\n                    // Actualizar datos de view\n                    $rootScope.user.name = newData.name;\n                    $rootScope.user.secondName = newData.secondName;\n                    $rootScope.user.lu = newData.lu;\n                    $rootScope.user.degree = newData.degree;\n                    $rootScope.user.partners = newData.partners;\n                    $rootScope.loading = false;\n                    $scope.edit = false;\n                    $scope.$apply();\n                })\n                .catch(function (err) {\n                    console.log(err);\n                    M.toast({\n                        html: \"Ocurrió un problema al actualizar los datos\",\n                        classes: 'rounded red',\n                        displayLength: 2500\n                    });\n                    $rootScope.loading = false;\n                    $scope.$apply();\n                });\n        }\n\n        if ($scope.newProfilePic) { // Si puso nueva foto\n            var saveNewAvatar = function () { // Guardar nueva foto de perfil en storage\n                var filename = Cipressus.utils.generateFileName(25) + \".\" + $scope.avatarFile.name.split(\".\")[1]; // Generar nombre de archivo\n                Cipressus.storage.put($scope.avatarFile, \"Images\", filename) // Guardar imagen en storage\n                    .then(function (res) {                        \n                        // Datos que van al storage\n                        newData.avatar = res.url;\n                        newData.avatarFilename = filename;\n                        // Actualizar datos de la vista\n                        $rootScope.user.avatar = res.url; // Enlace a la imagen\n                        $rootScope.user.avatarFilename = filename; // Nombre de archivo en storage\n                        updateNewData(); // Finalmente, actualizar todos los datos\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        $rootScope.loading = false;\n                        $scope.$apply();\n                    });\n            }\n            // Si ya tenia foto de perfil, eliminar la anterior\n            if ($rootScope.user.avatarFilename) {\n                Cipressus.storage.delete($rootScope.user.avatarFilename, \"Images\")\n                    .then(function (res) {\n                        saveNewAvatar(); // Luego de borrar, guardar la nueva\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                        M.toast({\n                            html: \"Ocurrió un error al actualizar imagen\",\n                            classes: 'rounded red',\n                            displayLength: 2500\n                        });\n                        saveNewAvatar(); // Intentar cargar nueva de todas maneras\n                    });\n            }else{ // Si no tenia foto de perfil, cargar directamente\n                saveNewAvatar();\n            }\n        }else{ // Si no cambio la foto de perfil, actualizar solo los datos\n            updateNewData();\n        }\n    };\n\n    $scope.enableEditing = function(){ // Habilitar edicion\n        if($scope.editingReady){ // Si ya entro al modo de edicion una vez, solo habilitar\n            $scope.edit = true;\n        }else{ // La primera vez que entra al modo de edicion, descargar datos adicionales\n            $rootScope.loading = true;\n            Cipressus.db.get(\"users_private\")\n            .then(function (users_private_data) {\n                \n                // Lista de usuarios para autocompletador (solo compañeros de curso y no pueden ser admins)\n                var userList = {};\n                for (var k in $scope.users){\n                    // Copiar otros atributos aca si hacen falta\n                    if(users_private_data[k].course == $rootScope.user.course && !users_private_data[k].admin && k != $rootScope.user.uid)\n                        userList[$scope.users[k].name + \" \" + $scope.users[k].secondName] = $scope.users[k].avatar; // Lista de nombres y fotos\n                }\n\n                M.Autocomplete.init(document.querySelectorAll('.autocomplete'), {\n                    data: userList\n                }); \n                \n                $rootScope.loading = false;\n                $scope.edit = true;\n                $scope.$apply();\n            })\n            .catch(function (err) {\n                console.log(err);\n                M.toast({\n                    html: \"Ocurrió un error al acceder a la base de datos\",\n                    classes: 'rounded red',\n                    displayLength: 2000\n                });\n                $rootScope.loading = false;\n                $scope.$apply();\n            });\n\n        }\n\n    };\n\n    ///// Inicialización controller\n    $rootScope.loading = true;\n    $rootScope.sidenav.close();\n\n    $scope.edit = false; // Toggle para la edicion de los datos del perfil\n    $scope.newProfilePic = false; // Indicador para saber si hay que actualizar foto de perfil\n    $scope.created = $rootScope.user.enrolled > 0 ? moment($rootScope.user.enrolled).format(\"DD/MM/YYYY HH:mm\") : \"(Aún no aprobado)\"; // Formato legible\n    $scope.newAvatar = $rootScope.user.avatar; // Nuevo src si carga nueva foto de perfil\n\n    M.Tooltip.init(document.querySelectorAll('.tooltipped'), {}); // Inicializar tooltips      \n\n    Cipressus.utils.activityCntr($rootScope.user.uid, \"profile\").catch(function (err) {\n        console.log(err);\n    });\n\n    Cipressus.db.get(\"users_public\") // Descargar datos de usuarios\n        .then(function (users_public_data) {\n            $scope.users = users_public_data;\n\n            // Inicializar inputs\n            document.getElementById(\"inputName\").value = $rootScope.user.name;\n            document.getElementById(\"inputSecondName\").value = $rootScope.user.secondName;\n            document.getElementById(\"inputLU\").value = $rootScope.user.lu;\n            document.getElementById(\"inputDegree\").value = $rootScope.user.degree;\n            if ($rootScope.user.partners) {\n                if ($rootScope.user.partners[0])\n                    document.getElementById(\"partner1\").value = $scope.users[$rootScope.user.partners[0]].name + \" \" + $scope.users[$rootScope.user.partners[0]].secondName;\n                if ($rootScope.user.partners[1])\n                    document.getElementById(\"partner2\").value = $scope.users[$rootScope.user.partners[1]].name + \" \" + $scope.users[$rootScope.user.partners[1]].secondName;\n            }\n\n            M.FormSelect.init(document.querySelectorAll('select'), {});\n            M.updateTextFields(); // Para mostrar los placeholders\n            $rootScope.loading = false;\n            $scope.$apply();\n        })\n        .catch(function (err) {\n            console.log(err);\n            M.toast({\n                html: \"Ocurrió un error al acceder a la base de datos\",\n                classes: 'rounded red',\n                displayLength: 2000\n            });\n            $rootScope.loading = false;\n            $scope.$apply();\n        });\n}]);"],"sourceRoot":"/source/"}